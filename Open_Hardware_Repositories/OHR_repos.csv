id,description,name,name_with_namespace,path,path_with_namespace,created_at,default_branch,tag_list,topics,ssh_url_to_repo,http_url_to_repo,web_url,readme_url,forks_count,avatar_url,star_count,last_activity_at,namespace.id,namespace.name,namespace.path,namespace.kind,namespace.full_path,namespace.parent_id,namespace.avatar_url,namespace.web_url
11313,"The P4CH–LNLS is a standalone, high-resolution, four-channel picoammeter. The channels are independent; each features an eight-range transimpedance amplifier (I-V amplifier) and 24-bit resolution, delta-sigma ADC with ten selectable sampling frequencies that reach up to 2000 samples per second. The hardware’s input stage was designed to be biased up to 400 V by an external high-voltage power supply. Edge-sensitive trigger signals allow for synchronization of data acquisition with external events or other devices. Input and output ADC clock connectors are also available on the device, which may be beneficial for applications requiring multiple and synchronized P4CH-LNLS with strict timing requirements. NXP Semiconductors’ cortex M3 microcontroller, the LPC1768, manages these features and stores the calibration data on an external EEPROM. The microcontroller and the user communicate through a 10/100 Mbps Ethernet link.",Quad-Channel Digital Pico ammeter,Projects / Quad-Channel Digital Pico ammeter,P4CH-LNLS,project/P4CH-LNLS,2025-01-13T17:25:58.519Z,main,[],[],ssh://git@ohwr.org:7999/project/P4CH-LNLS.git,https://ohwr.org/project/P4CH-LNLS.git,https://ohwr.org/project/P4CH-LNLS,https://ohwr.org/project/P4CH-LNLS/-/blob/main/README.md,0.0,,0,2025-01-13T17:29:23.124Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
11312,"A project to host all software and hardware developments related to
testing the White Rabbit switch.

",White Rabbit Switch - Testing,Maciej Sumiński / White Rabbit Switch - Testing,wr-switch-testing,orsonmmz/wr-switch-testing,2025-01-13T12:24:00.290Z,master,[],[],ssh://git@ohwr.org:7999/orsonmmz/wr-switch-testing.git,https://ohwr.org/orsonmmz/wr-switch-testing.git,https://ohwr.org/orsonmmz/wr-switch-testing,https://ohwr.org/orsonmmz/wr-switch-testing/-/blob/master/README,0.0,,0,2025-01-13T12:24:00.095Z,9304,Maciej Sumiński,orsonmmz,user,orsonmmz,,/uploads/-/system/user/avatar/9298/mugshot.png,https://ohwr.org/orsonmmz
11311,,White Rabbit Timing System,Projects / White Rabbit Timing System,wrt,project/wrt,2025-01-09T13:30:57.847Z,main,[],[],ssh://git@ohwr.org:7999/project/wrt.git,https://ohwr.org/project/wrt.git,https://ohwr.org/project/wrt,,0.0,,0,2025-01-10T14:33:37.609Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
11310,,WREN,Projects / WREN,wren,project/wren,2025-01-09T13:27:17.134Z,master,[],[],ssh://git@ohwr.org:7999/project/wren.git,https://ohwr.org/project/wren.git,https://ohwr.org/project/wren,https://ohwr.org/project/wren/-/blob/master/README.md,0.0,,0,2025-02-03T09:51:07.224Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
11308,"4-channel 16-bit 210 MS/s ADC (LTC2107) FMC module.
[More info at the Wiki
page](https://www.ohwr.org/project/fmc-adc-210m-16b-4cha/wiki)",FMC ADC 210M 16b 4cha,Projects / FMC ADC 210M 16b 4cha,fmc-adc-210m-16b-4cha,project/fmc-adc-210m-16b-4cha,2024-09-02T08:10:39.318Z,master,[],[],ssh://git@ohwr.org:7999/project/fmc-adc-210m-16b-4cha.git,https://ohwr.org/project/fmc-adc-210m-16b-4cha.git,https://ohwr.org/project/fmc-adc-210m-16b-4cha,,0.0,,0,2024-10-02T10:11:01.461Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
11307,"Idrogen is an Arria10 FPGA board with FMC mezzanine.

PCB design is performed by IJCLab / CNRS-IN2P3.
Firmware is developed by Observatoire Radioastronomique de Nançay (ORN) / Observatoire de Paris/ CNRS-INSU",Idrogen,Projects / Idrogen,idrogen,project/idrogen,2024-08-12T12:52:19.087Z,master,[],[],ssh://git@ohwr.org:7999/project/idrogen.git,https://ohwr.org/project/idrogen.git,https://ohwr.org/project/idrogen,https://ohwr.org/project/idrogen/-/blob/master/README.md,0.0,,2,2025-01-30T16:28:50.165Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
11306,"The PandABox II Project is a collaboration between ALBA, DESY, DIAMOND, MAXIV, and SOLEIL,  to enhance the existing  “Position and Acquisition” processing platform called PandABox II. It will provide a New processor Zynq Ultrascale, more configurable I/O, more SFP, and supporting multiple encoder standards (incremental, SSI, BISS...). It will deliver synchronous triggering and data capture capabilities.",PandABox II,Projects / PandABox II,PandaBox2,project/PandaBox2,2024-08-07T15:21:59.460Z,main,[],[],ssh://git@ohwr.org:7999/project/PandaBox2.git,https://ohwr.org/project/PandaBox2.git,https://ohwr.org/project/PandaBox2,https://ohwr.org/project/PandaBox2/-/blob/main/README.md,0.0,,0,2024-12-04T09:14:25.030Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
11303,"The Analogue GIRAPH is an active 19"" patch panel that provides 32 single ended or 16 diff. analogue inputs and 8 channels single-ended analogue output. [More info at the Wiki page](https://ohwr.org/project/analogue-giraph/-/wikis/HOME)",Analogue GIRAPH,Projects / Analogue GIRAPH,analogue-giraph,project/analogue-giraph,2024-06-11T11:31:42.862Z,main,[],[],ssh://git@ohwr.org:7999/project/analogue-giraph.git,https://ohwr.org/project/analogue-giraph.git,https://ohwr.org/project/analogue-giraph,https://ohwr.org/project/analogue-giraph/-/blob/main/README.md,0.0,,0,2024-09-23T15:13:24.818Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
11302,Firmware(gateware) for FPGA on AIDA-Innova TLU ( AIDAInnova_TLU ),AIDAInnova_TLU-gw,David Cussans / AIDAInnova_TLU-gw,aidainnova_tlu-gw,cussans/aidainnova_tlu-gw,2024-06-04T16:30:22.453Z,master,[],[],ssh://git@ohwr.org:7999/cussans/aidainnova_tlu-gw.git,https://ohwr.org/cussans/aidainnova_tlu-gw.git,https://ohwr.org/cussans/aidainnova_tlu-gw,https://ohwr.org/cussans/aidainnova_tlu-gw/-/blob/master/README.md,0.0,,0,2024-10-10T11:06:48.316Z,8964,David Cussans,cussans,user,cussans,,https://secure.gravatar.com/avatar/aa079cd252f36f6551473a7657d38692fcc45877d317b104ce2b69526e054376?s=80&d=identicon,https://ohwr.org/cussans
11300,"A Trigger/Timing Logic Unit to synchronize devices at beam test
A successor to the AIDA(2020) TLU (https://ohwr.org/project/fmc-mtlu)
This is an ""umbrella"" project with documentation, pointing to the projects with the hardware and firm(gate)ware",AIDAInnova_TLU,David Cussans / AIDAInnova_TLU,aidainnova_tlu,cussans/aidainnova_tlu,2024-06-03T09:49:32.293Z,master,[],[],ssh://git@ohwr.org:7999/cussans/aidainnova_tlu.git,https://ohwr.org/cussans/aidainnova_tlu.git,https://ohwr.org/cussans/aidainnova_tlu,https://ohwr.org/cussans/aidainnova_tlu/-/blob/master/README.md,0.0,,0,2024-06-07T12:20:02.312Z,8964,David Cussans,cussans,user,cussans,,https://secure.gravatar.com/avatar/aa079cd252f36f6551473a7657d38692fcc45877d317b104ce2b69526e054376?s=80&d=identicon,https://ohwr.org/cussans
11297,"The Macbeth (MAChine / BEamline Timing Hardware) system is aimed to synchronize the beamlines experimental devices (pump-probe, laser, …) with the accelerator beam with a high accuracy",Macbeth,Projects / Macbeth,macbeth,project/macbeth,2024-03-14T20:13:15.457Z,master,"['IQ modulator', 'KiCad', 'Kria', 'synchronization', 'timing']","['IQ modulator', 'KiCad', 'Kria', 'synchronization', 'timing']",ssh://git@ohwr.org:7999/project/macbeth.git,https://ohwr.org/project/macbeth.git,https://ohwr.org/project/macbeth,https://ohwr.org/project/macbeth/-/blob/master/README.md,0.0,,0,2025-01-10T15:30:39.725Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
11295,,ACCURATE 2A Evaluation Board,Projects / ACCURATE 2A Evaluation Board,accurate2-eval,project/accurate2-eval,2024-02-22T13:18:10.198Z,master,[],[],ssh://git@ohwr.org:7999/project/accurate2-eval.git,https://ohwr.org/project/accurate2-eval.git,https://ohwr.org/project/accurate2-eval,https://ohwr.org/project/accurate2-eval/-/blob/master/README.md,0.0,,1,2024-09-23T15:13:27.263Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
11294,Arria10-based open source timing receiver (PCIe format),Pex10,Projects / Pex10,pex10,project/pex10,2024-02-02T10:40:51.506Z,master,[],[],ssh://git@ohwr.org:7999/project/pex10.git,https://ohwr.org/project/pex10.git,https://ohwr.org/project/pex10,https://ohwr.org/project/pex10/-/blob/master/README.md,0.0,,0,2024-02-02T10:40:51.506Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
11293,Mixed Digital IO RTM for the DI/OT project. [More info at the Wiki page](https://www.ohwr.org/project/mdior/wiki),DIOT Mixed Digital IO RTM,Projects / DIOT Mixed Digital IO RTM,mdior,project/mdior,2023-12-04T15:25:07.229Z,master,[],[],ssh://git@ohwr.org:7999/project/mdior.git,https://ohwr.org/project/mdior.git,https://ohwr.org/project/mdior,https://ohwr.org/project/mdior/-/blob/master/readme.md,0.0,,0,2024-10-02T10:11:09.488Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
11292,"Interface box easing the integration of commercially available (high-voltage) power supplies into a Profibus or Profinet control system. The control system will always see the same API. Implements vendor-specific adaptation (logic, voltage levels).",Power Supply Interface Module PSIM,Projects / Power Supply Interface Module PSIM,psim,project/psim,2023-11-09T10:58:46.540Z,main,[],[],ssh://git@ohwr.org:7999/project/psim.git,https://ohwr.org/project/psim.git,https://ohwr.org/project/psim,,0.0,,0,2023-11-09T10:58:46.540Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
11290,"A radiation tolerant flashing beacon design, based on earlier GaN driver developments for radiation tolerant lighting. Currently in the prototype stage with no radiation testing yet performed.",Radiation Tolerant LED Beacon,James Devine / Radiation Tolerant LED Beacon,rad-tol-led-beacon,jdevine/rad-tol-led-beacon,2023-08-03T15:26:04.879Z,master,[],[],ssh://git@ohwr.org:7999/jdevine/rad-tol-led-beacon.git,https://ohwr.org/jdevine/rad-tol-led-beacon.git,https://ohwr.org/jdevine/rad-tol-led-beacon,https://ohwr.org/jdevine/rad-tol-led-beacon/-/blob/master/README.md,0.0,,0,2023-08-03T15:26:04.879Z,8967,James Devine,jdevine,user,jdevine,,https://secure.gravatar.com/avatar/5d8a4d363f6a66f3ffe2b30de6d313426933b9fe5a386539a67708369a8c4942?s=80&d=identicon,https://ohwr.org/jdevine
11289,Negative pressure wound therapy (NPWT) is a method of drawing out fluid and infection from a wound to help it heal. The project is a cheap NPWT system consisting of easy to replicate or locally sourced materials. ,Negative Pressure Wound Treatment,Projects / Negative Pressure Wound Treatment,npwt,project/npwt,2023-04-12T15:05:33.703Z,master,[],[],ssh://git@ohwr.org:7999/project/npwt.git,https://ohwr.org/project/npwt.git,https://ohwr.org/project/npwt,,0.0,,0,2024-10-02T10:11:11.359Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
11288,"DI/OT Igloo2-based System Board for radiation-exposed DI/OT applications. [More info at the Wiki
page](https://www.ohwr.org/project/diot-sb-igl/wiki)",DIOT Igloo2-based radiation-tolerant System Board,Roberto Fernández Bautista / DIOT Igloo2-based radiation-tolerant System Board,diot-sb-igl,Qbort/diot-sb-igl,2023-03-29T11:20:09.394Z,master,[],[],ssh://git@ohwr.org:7999/Qbort/diot-sb-igl.git,https://ohwr.org/Qbort/diot-sb-igl.git,https://ohwr.org/Qbort/diot-sb-igl,https://ohwr.org/Qbort/diot-sb-igl/-/blob/master/README.md,0.0,https://ohwr.org/uploads/-/system/project/avatar/11288/logo_black_1_.png,0,2023-04-06T15:37:57.491Z,9687,Roberto Fernández Bautista,Qbort,user,Qbort,,/uploads/-/system/user/avatar/9620/avatar.png,https://ohwr.org/Qbort
11283,Collection of WRTD reference designs provided by (and used at) CERN,WRTD Reference Designs,Projects / WRTD Reference Designs,wrtd-ref-designs,project/wrtd-ref-designs,2022-10-13T15:18:50.428Z,master,['WRTD'],['WRTD'],ssh://git@ohwr.org:7999/project/wrtd-ref-designs.git,https://ohwr.org/project/wrtd-ref-designs.git,https://ohwr.org/project/wrtd-ref-designs,https://ohwr.org/project/wrtd-ref-designs/-/blob/master/README.md,0.0,,0,2025-02-03T15:37:54.723Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
11282,"Active 32/64 channels 19"" patch panel for FPGA boards, with robust 5V TTL I/Os, configurable through I²C and USB-C. [More info at the Wiki page](/project/giraph32/wikis/home)",Generic I²C-Reconfigurable Active PatcH GIRAPH,Projects / Generic I²C-Reconfigurable Active PatcH GIRAPH,giraph32,project/giraph32,2022-09-14T16:40:59.815Z,master,[],[],ssh://git@ohwr.org:7999/project/giraph32.git,https://ohwr.org/project/giraph32.git,https://ohwr.org/project/giraph32,,0.0,https://ohwr.org/uploads/-/system/project/avatar/11282/giraph.png,0,2024-10-16T08:19:04.334Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
11281,"A software suite written in Python to help with production tests of
PCBs. AKA PTS.

%(red)This pts-base project is used to re-organise the current [pts
project](https://www.ohwr.org/project/pts.%)  
In the future this project will replace the existing pts project.

[More info at the Wiki page](https://www.ohwr.org/project/pts-tmp/wiki)

",Production Test Suite - base,Pieter Van Trappen / Production Test Suite - base,pts-base,pvantrap/pts-base,2022-07-25T09:09:02.498Z,master,[],[],ssh://git@ohwr.org:7999/pvantrap/pts-base.git,https://ohwr.org/pvantrap/pts-base.git,https://ohwr.org/pvantrap/pts-base,https://ohwr.org/pvantrap/pts-base/-/blob/master/README,0.0,,0,2022-07-25T09:09:02.498Z,9305,Pieter Van Trappen,pvantrap,user,pvantrap,,https://secure.gravatar.com/avatar/1d94f515d19e0f242c028eb356cba8e42d4da16e2e3b3c7df631b7ac20be86e0?s=80&d=identicon,https://ohwr.org/pvantrap
11280,BabyWR is a general purpose small pluggable WR node in a M.2 form-factor. [More info at the Wiki page](https://www.ohwr.org/project/babywr/wiki),BabyWR,Projects / BabyWR,babywr,project/babywr,2022-07-05T09:45:04.833Z,main,[],[],ssh://git@ohwr.org:7999/project/babywr.git,https://ohwr.org/project/babywr.git,https://ohwr.org/project/babywr,https://ohwr.org/project/babywr/-/blob/main/README.md,0.0,,0,2025-01-17T08:45:09.058Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
11278,A simple TTL electrical to optical converter. [More info at the Wiki page](https://www.ohwr.org/project/conv-ttl-opt-1i-1o/wiki),Electrical to Optical converter,Projects / Electrical to Optical converter,conv-ttl-opt-1i-1o,project/conv-ttl-opt-1i-1o,2022-05-11T15:42:51.689Z,master,[],[],ssh://git@ohwr.org:7999/project/conv-ttl-opt-1i-1o.git,https://ohwr.org/project/conv-ttl-opt-1i-1o.git,https://ohwr.org/project/conv-ttl-opt-1i-1o,,0.0,,0,2024-10-02T10:11:18.765Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
11277,A simple optical to TTL electrical converter. [More info at the Wiki page](https://www.ohwr.org/project/conv-opt-ttl-1i-1o/wiki),Optical to electrical converter,Projects / Optical to electrical converter,conv-opt-ttl-1i-1o,project/conv-opt-ttl-1i-1o,2022-05-11T13:06:28.853Z,master,[],[],ssh://git@ohwr.org:7999/project/conv-opt-ttl-1i-1o.git,https://ohwr.org/project/conv-opt-ttl-1i-1o.git,https://ohwr.org/project/conv-opt-ttl-1i-1o,,0.0,,0,2024-10-02T10:11:20.008Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
11276,DI/OT Peripheral Board Loop-back. [More info at the Wiki page](https://www.ohwr.org/project/diot-pb-lbk/wiki),DIOT Peripheral Board Loop-back,Projects / DIOT Peripheral Board Loop-back,diot-pb-lbk,project/diot-pb-lbk,2022-05-11T08:53:14.448Z,master,[],[],ssh://git@ohwr.org:7999/project/diot-pb-lbk.git,https://ohwr.org/project/diot-pb-lbk.git,https://ohwr.org/project/diot-pb-lbk,,0.0,,0,2024-10-08T13:47:52.155Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
11275,SAMbuCa I2PS. Used in the [SAMbuCa project](https://ohwr.org/project/sambuca/wikis). [More info at the Wiki page](https://www.ohwr.org/project/samb-i2ps/wiki),SAMbuCa I2PS,Projects / SAMbuCa I2PS,samb-i2ps,project/samb-i2ps,2022-04-26T12:42:46.334Z,master,[],[],ssh://git@ohwr.org:7999/project/samb-i2ps.git,https://ohwr.org/project/samb-i2ps.git,https://ohwr.org/project/samb-i2ps,,0.0,,0,2024-10-02T10:11:23.900Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
11274,"The PZ-TIO is a carrier board for a PicoZed 7015 Zynq System on Module (SoM) supporting White Rabbit in the Zynq PL. It provides Ethernet, UART, SD card and USB peripherals for the Zynq PS running Ubuntu 18; SFPs, WR clocks, and GPIO for the PL. ",PZ Carrier and Trigger IO - PZ-TIO,Projects / PZ Carrier and Trigger IO - PZ-TIO,pz-tio,project/pz-tio,2022-03-29T08:31:36.178Z,master,[],[],ssh://git@ohwr.org:7999/project/pz-tio.git,https://ohwr.org/project/pz-tio.git,https://ohwr.org/project/pz-tio,,0.0,,0,2024-10-02T10:11:25.362Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
11273,Motor driver to control stepper and DC brushed motors in constant current or speed control. Used in SAMbuCa project. [More info at the Wiki page](https://www.ohwr.org/project/samb-step-dcdrive-4ch/wiki),samb-step-dcdrive-4ch,Projects / samb-step-dcdrive-4ch,samb-step-dcdrive-4ch,project/samb-step-dcdrive-4ch,2022-01-25T10:23:34.141Z,master,[],[],ssh://git@ohwr.org:7999/project/samb-step-dcdrive-4ch.git,https://ohwr.org/project/samb-step-dcdrive-4ch.git,https://ohwr.org/project/samb-step-dcdrive-4ch,,0.0,,0,2024-10-02T10:11:26.845Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
11272,"Tool for generating multi-purpose makefiles for FPGA projects.

Main features:

  - makefile generation for:
      - fetching modules from repositories
      - simulating HDL projects
      - synthesizing HDL projects
      - synthesizing projects remotely (keeping your local resources
        free)
  - generating multi-vendor project files (no clicking in the IDE\!)
  - many other things without involving make and makefiles

Hdlmake supports **modularity**, **scalability**, **revision control
systems**. Hdlmake can be run on any Linux or Windows machine with any
HDL  
[More info at the Wiki page](https://www.ohwr.org/project/hdl-make/wiki)

",Hdlmake,Brian Koropoff / Hdlmake,hdl-make,bkoropoff/hdl-make,2022-01-25T08:54:53.343Z,master,[],[],ssh://git@ohwr.org:7999/bkoropoff/hdl-make.git,https://ohwr.org/bkoropoff/hdl-make.git,https://ohwr.org/bkoropoff/hdl-make,,0.0,,0,2022-02-05T02:16:51.048Z,9661,Brian Koropoff,bkoropoff,user,bkoropoff,,https://secure.gravatar.com/avatar/a68a71e867d2c304b018f5d9e91193bdf9d9a584e77326c4155ea95fca1480d6?s=80&d=identicon,https://ohwr.org/bkoropoff
11271,"Enumerates the capacitors in an Altium design by parsing the EDIF netlist and library, showing if insufficient voltage ratings are used (derating). [More info at the Wiki page](https://www.ohwr.org/project/extract-cap-voltage-rating/wiki)",Extract Capacitor Voltage Rating,Projects / Extract Capacitor Voltage Rating,extract-cap-voltage-rating,project/extract-cap-voltage-rating,2021-11-03T16:38:25.975Z,master,[],[],ssh://git@ohwr.org:7999/project/extract-cap-voltage-rating.git,https://ohwr.org/project/extract-cap-voltage-rating.git,https://ohwr.org/project/extract-cap-voltage-rating,https://ohwr.org/project/extract-cap-voltage-rating/-/blob/master/README.md,0.0,,0,2021-12-06T16:06:34.198Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
11270,"A collection of platform-independent cores such as memories,
synchronizer circuits and Wishbone cores.

[More info at the Wiki
page](https://www.ohwr.org/project/general-cores/wiki)

",Platform-independent core collection,Konstantinos Blantos / Platform-independent core collection,general-cores,kblantos/general-cores,2021-10-19T13:46:39.910Z,master,[],[],ssh://git@ohwr.org:7999/kblantos/general-cores.git,https://ohwr.org/kblantos/general-cores.git,https://ohwr.org/kblantos/general-cores,https://ohwr.org/kblantos/general-cores/-/blob/master/README.md,0.0,,0,2022-09-06T16:36:27.101Z,9646,Konstantinos Blantos,kblantos,user,kblantos,,https://secure.gravatar.com/avatar/642b52782c592d341ec4f0e2fd3e32001bb6e794f05cbd2a945eebed017944a6?s=80&d=identicon,https://ohwr.org/kblantos
11268,"FMC LPC card with two High Voltage (HV) outputs and one Low Voltage (5-10V) output.  Has mV voltage sensing and mA current sensing capabilities. [More info at the Wiki page](https://www.ohwr.org/project/fmc-hv-2ch/wiki)
",FMC High-Voltage supply - fmc-hv-2ch,Projects / FMC High-Voltage supply - fmc-hv-2ch,fmc-hv-2ch,project/fmc-hv-2ch,2021-10-06T15:47:13.253Z,master,[],[],ssh://git@ohwr.org:7999/project/fmc-hv-2ch.git,https://ohwr.org/project/fmc-hv-2ch.git,https://ohwr.org/project/fmc-hv-2ch,https://ohwr.org/project/fmc-hv-2ch/-/blob/master/README.md,0.0,,1,2024-09-23T15:13:37.397Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
11267,Test. May be deleted.,test,Projects / test,test,project/test,2021-10-05T10:08:08.567Z,master,[],[],ssh://git@ohwr.org:7999/project/test.git,https://ohwr.org/project/test.git,https://ohwr.org/project/test,https://ohwr.org/project/test/-/blob/master/README.md,0.0,,0,2021-10-13T06:52:58.943Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
11266,Production and functional tests for PXIe controller COM Express based. [More info at the Wiki page](https://www.ohwr.org/project/pxie-ctl-comexpress-tst/wiki),PXIe controller COM Express based testing support,Projects / PXIe controller COM Express based testing support,pxie-ctl-comexpress-tst,project/pxie-ctl-comexpress-tst,2021-10-05T09:01:35.991Z,master,[],[],ssh://git@ohwr.org:7999/project/pxie-ctl-comexpress-tst.git,https://ohwr.org/project/pxie-ctl-comexpress-tst.git,https://ohwr.org/project/pxie-ctl-comexpress-tst,https://ohwr.org/project/pxie-ctl-comexpress-tst/-/blob/master/README.md,0.0,,0,2024-10-08T06:46:22.713Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
11265,"A low cost potentiostat circuit to perform electrochemistry experiments. The system may be driven by a Teensy card from PJRC (Arduino IDE) or by power supplies,   [More info at the Wiki page](https://www.ohwr.org/project/passstat/wiki)",PassStat,Projects / PassStat,passstat,project/passstat,2021-09-30T15:52:03.090Z,master,[],[],ssh://git@ohwr.org:7999/project/passstat.git,https://ohwr.org/project/passstat.git,https://ohwr.org/project/passstat,https://ohwr.org/project/passstat/-/blob/master/README.md,0.0,,0,2024-09-23T15:13:41.415Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
11264,The FMC Motion Front-End (fmc-mfe) aims at providing analog and digital environment for the control of up to 8-axis. [More info at the Wiki page](https://ohwr.org/project/fmc-mfe/wikis),FMC Motion Front-End,Projects / FMC Motion Front-End,fmc-mfe,project/fmc-mfe,2021-09-24T15:06:17.316Z,master,[],[],ssh://git@ohwr.org:7999/project/fmc-mfe.git,https://ohwr.org/project/fmc-mfe.git,https://ohwr.org/project/fmc-mfe,,0.0,,0,2024-10-02T10:11:35.122Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
11263,"AFCKU is dual FMC carrier in AMC format based on Kintex Ultrascale SoC devices. It supports White Rabbit and RTM modules.
[More info at the Wiki page](https://www.ohwr.org/project/afcku/wiki).",AMC FMC Carrier Kintex Ultrascale AFCKU,Projects / AMC FMC Carrier Kintex Ultrascale AFCKU,afcku,project/afcku,2021-08-30T12:39:51.675Z,master,[],[],ssh://git@ohwr.org:7999/project/afcku.git,https://ohwr.org/project/afcku.git,https://ohwr.org/project/afcku,,0.0,,0,2024-09-23T15:13:43.200Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
11262,"Tester board to test PXIe processor modules. Two variants: slot 2 and slot 10 (system timing slot). [More info at the Wiki page](https://www.ohwr.org/project/pxct/wiki)
",PXIe Communication Tester - PXCT,Projects / PXIe Communication Tester - PXCT,pxct,project/pxct,2021-07-23T16:46:18.808Z,master,[],[],ssh://git@ohwr.org:7999/project/pxct.git,https://ohwr.org/project/pxct.git,https://ohwr.org/project/pxct,https://ohwr.org/project/pxct/-/blob/master/README.md,0.0,,0,2024-10-02T10:11:41.623Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
11261,"A WR compliant Network Interface Core (WR-NIC) for 1G and 10G Ethernet communication. [More info at the Wiki page](https://www.ohwr.org/project/10G-wr-nic/wiki)
",10G White Rabbit Network Interface Core,Projects / 10G White Rabbit Network Interface Core,10G-wr-nic,project/10G-wr-nic,2021-07-23T16:12:52.258Z,f_ltgt_spec,[],[],ssh://git@ohwr.org:7999/project/10G-wr-nic.git,https://ohwr.org/project/10G-wr-nic.git,https://ohwr.org/project/10G-wr-nic,https://ohwr.org/project/10G-wr-nic/-/blob/f_ltgt_spec/README.md,0.0,,0,2024-10-02T10:11:43.500Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
11259,A board that has eyes,FSI DIOT Photodetection module 8ch,Projects / FSI DIOT Photodetection module 8ch,diot-fsi-det-8ch,project/diot-fsi-det-8ch,2021-06-10T08:08:54.514Z,master,[],[],ssh://git@ohwr.org:7999/project/diot-fsi-det-8ch.git,https://ohwr.org/project/diot-fsi-det-8ch.git,https://ohwr.org/project/diot-fsi-det-8ch,https://ohwr.org/project/diot-fsi-det-8ch/-/blob/master/README.md,0.0,,0,2025-01-23T12:04:12.109Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
11258,Gateware and software for the data acquisition path of the FSI project,FSI Data Acquisition Path Gateware and Software,Projects / FSI Data Acquisition Path Gateware and Software,fsi-daq,project/fsi-daq,2021-06-10T08:04:47.404Z,master,[],[],ssh://git@ohwr.org:7999/project/fsi-daq.git,https://ohwr.org/project/fsi-daq.git,https://ohwr.org/project/fsi-daq,https://ohwr.org/project/fsi-daq/-/blob/master/README.md,0.0,,0,2023-03-08T12:50:25.160Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
11257,"This project contains all the HDL gateware necessary for the FPGA of the
WR switch.

",White Rabbit Switch - Gateware,Konstantinos Blantos / White Rabbit Switch - Gateware,wr-switch-hdl,kblantos/wr-switch-hdl,2021-06-01T12:29:54.920Z,proposed_master,[],[],ssh://git@ohwr.org:7999/kblantos/wr-switch-hdl.git,https://ohwr.org/kblantos/wr-switch-hdl.git,https://ohwr.org/kblantos/wr-switch-hdl,https://ohwr.org/kblantos/wr-switch-hdl/-/blob/proposed_master/README,0.0,,0,2022-02-14T14:12:14.190Z,9646,Konstantinos Blantos,kblantos,user,kblantos,,https://secure.gravatar.com/avatar/642b52782c592d341ec4f0e2fd3e32001bb6e794f05cbd2a945eebed017944a6?s=80&d=identicon,https://ohwr.org/kblantos
11256,"AFCZ is dual FMC carrier in AMC format based on ZU7EV or ZU11EG SoC devices. It supports White Rabbit and RTM modules.
[More info at the Wiki page](https://www.ohwr.org/project/afcz/wiki).",AMC FMC Carrier AFCZ,Projects / AMC FMC Carrier AFCZ,afcz,project/afcz,2021-05-25T12:52:24.860Z,master,[],[],ssh://git@ohwr.org:7999/project/afcz.git,https://ohwr.org/project/afcz.git,https://ohwr.org/project/afcz,,0.0,,0,2024-10-02T10:11:47.115Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
11255,"A front-end PCI board with LEMO connectors to interface with the GPIO interconnect pins of the [SIS1160 FMC carrier](https://www.struck.de/sis1160.html). [More info at the Wiki page](https://www.ohwr.org/project/sis1160-pci-io/wiki)
",SIS1160 PCI-L IO add on,Projects / SIS1160 PCI-L IO add on,sis1160-pci-io,project/sis1160-pci-io,2021-05-18T08:42:01.045Z,master,[],[],ssh://git@ohwr.org:7999/project/sis1160-pci-io.git,https://ohwr.org/project/sis1160-pci-io.git,https://ohwr.org/project/sis1160-pci-io,,0.0,,0,2025-02-03T14:21:03.342Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
11254,"A collection of cores needed in the White Rabbit node and switch.
Includes White Rabbit PTP Core (WRPC).

",White Rabbit core collection,Konstantinos Blantos / White Rabbit core collection,wr-cores,kblantos/wr-cores,2021-05-11T12:36:44.833Z,proposed_master,[],[],ssh://git@ohwr.org:7999/kblantos/wr-cores.git,https://ohwr.org/kblantos/wr-cores.git,https://ohwr.org/kblantos/wr-cores,,0.0,,0,2022-04-06T07:46:27.049Z,9646,Konstantinos Blantos,kblantos,user,kblantos,,https://secure.gravatar.com/avatar/642b52782c592d341ec4f0e2fd3e32001bb6e794f05cbd2a945eebed017944a6?s=80&d=identicon,https://ohwr.org/kblantos
11251,"The FmcAdc500M14b4cha is a 4-channel 500 MSPS 14 bit ADC card in FMC (FPGA
Mezzanine Card, VITA 57.1) format using a High Pin-Count (HPC) connector.

[More info at the Wiki
Page](https://www.ohwr.org/project/fmc-adc-500m14b4cha/wiki)
",FMC ADC 500M 14b 4cha,Projects / FMC ADC 500M 14b 4cha,fmc-adc-500m14b4cha,project/fmc-adc-500m14b4cha,2021-04-01T07:55:45.777Z,master,[],[],ssh://git@ohwr.org:7999/project/fmc-adc-500m14b4cha.git,https://ohwr.org/project/fmc-adc-500m14b4cha.git,https://ohwr.org/project/fmc-adc-500m14b4cha,https://ohwr.org/project/fmc-adc-500m14b4cha/-/blob/master/readme.md,0.0,,0,2024-10-02T10:11:52.131Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
11250,"19""-rack mounted module which connects 20 single-ended K-type or N-type thermocouple channels with zQSFP+ to samb-temp-thcpl-fmc. Used in SAMbuCa project. [More info at the Wiki page](https://www.ohwr.org/project/samc-temp-thcpl-20ch/wiki)",samc-temp-thcpl-20ch,Projects / samc-temp-thcpl-20ch,samc-temp-thcpl-20ch,project/samc-temp-thcpl-20ch,2021-03-23T08:54:59.191Z,master,[],[],ssh://git@ohwr.org:7999/project/samc-temp-thcpl-20ch.git,https://ohwr.org/project/samc-temp-thcpl-20ch.git,https://ohwr.org/project/samc-temp-thcpl-20ch,,0.0,,0,2024-10-02T10:11:53.387Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
11249,FMC thermocouple card interfacing with zQSFP+ to samc-temp-thcpl-20ch which connects 20 single-ended K-type or N-type thermocouple channels. Used in SAMbuCa project. [More info at the Wiki page](https://www.ohwr.org/project/samb-temp-thcpl-fmc/wiki),samb-temp-thcpl-fmc,Projects / samb-temp-thcpl-fmc,samb-temp-thcpl-fmc,project/samb-temp-thcpl-fmc,2021-03-23T08:27:37.411Z,master,[],[],ssh://git@ohwr.org:7999/project/samb-temp-thcpl-fmc.git,https://ohwr.org/project/samb-temp-thcpl-fmc.git,https://ohwr.org/project/samb-temp-thcpl-fmc,,0.0,,0,2024-10-02T10:11:54.828Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
11248,FMC HPC PT100 temperature sensor interface card. Allows connection of 15 sensors in a 4-wire configuration. Used in SAMbuCa project. [More info at the Wiki page](https://www.ohwr.org/project/fmc-temp-pt100-15ch/wiki),fmc-temp-pt100-15ch,Projects / fmc-temp-pt100-15ch,fmc-temp-pt100-15ch,project/fmc-temp-pt100-15ch,2021-03-22T17:32:51.379Z,master,[],[],ssh://git@ohwr.org:7999/project/fmc-temp-pt100-15ch.git,https://ohwr.org/project/fmc-temp-pt100-15ch.git,https://ohwr.org/project/fmc-temp-pt100-15ch,,0.0,,0,2024-10-02T10:11:56.074Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
11247,"Open design and implementation of a low-cost ventilator for COVID-19 patients. [More info at the Wiki page](https://www.ohwr.org/project/respir-os/wiki)
",Respir-OS,Projects / Respir-OS,respir-os,project/respir-os,2021-03-16T17:40:31.157Z,master,"['python', 'raspberry pi', 'ventilator', 'zeromq']","['python', 'raspberry pi', 'ventilator', 'zeromq']",ssh://git@ohwr.org:7999/project/respir-os.git,https://ohwr.org/project/respir-os.git,https://ohwr.org/project/respir-os,https://ohwr.org/project/respir-os/-/blob/master/README.md,0.0,https://ohwr.org/uploads/-/system/project/avatar/11247/respir-os.png,0,2024-10-02T10:11:57.890Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
11245,"Frequency Scanning Interferometry (FSI) photodetection module with 8 channels. It enables data acquisition of optical signals 
from the gas cell, the reference interferometers and return signals of interferometer channels.",FMC FSI photodetection module 8ch,Projects / FMC FSI photodetection module 8ch,fmc-fsi-det-8ch,project/fmc-fsi-det-8ch,2021-03-01T15:55:10.388Z,master,[],[],ssh://git@ohwr.org:7999/project/fmc-fsi-det-8ch.git,https://ohwr.org/project/fmc-fsi-det-8ch.git,https://ohwr.org/project/fmc-fsi-det-8ch,,0.0,,0,2024-10-02T10:11:59.365Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
11244,"Tool for generating multi-purpose makefiles for FPGA projects.

Main features:

  - makefile generation for:
      - fetching modules from repositories
      - simulating HDL projects
      - synthesizing HDL projects
      - synthesizing projects remotely (keeping your local resources
        free)
  - generating multi-vendor project files (no clicking in the IDE\!)
  - many other things without involving make and makefiles

Hdlmake supports **modularity**, **scalability**, **revision control
systems**. Hdlmake can be run on any Linux or Windows machine with any
HDL  
[More info at the Wiki page](https://www.ohwr.org/project/hdl-make/wiki)

",Hdlmake,Pascal Bos / Hdlmake,hdl-make,Lacsapix/hdl-make,2021-02-09T14:17:39.218Z,master,[],[],ssh://git@ohwr.org:7999/Lacsapix/hdl-make.git,https://ohwr.org/Lacsapix/hdl-make.git,https://ohwr.org/Lacsapix/hdl-make,,0.0,,0,2021-02-09T14:17:39.218Z,8990,Pascal Bos,Lacsapix,user,Lacsapix,,https://secure.gravatar.com/avatar/0b84049f4c896a06fb721aa15760b2efa82540dd0ba3987b5963e6c994b72ff9?s=80&d=identicon,https://ohwr.org/Lacsapix
11243,"Powerlink Industrial Ethernet stack. It runs on top of the Hydra rad-tol SoC project.
[More info at the Wiki page](https://www.ohwr.org/project/powerlink/wiki)",powerlink,Projects / powerlink,powerlink,project/powerlink,2020-12-14T16:14:49.648Z,master,[],[],ssh://git@ohwr.org:7999/project/powerlink.git,https://ohwr.org/project/powerlink.git,https://ohwr.org/project/powerlink,https://ohwr.org/project/powerlink/-/blob/master/readme.md,0.0,,1,2024-10-02T10:12:02.516Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
11242,Configuration and boot software required to start up the SPEC7 board,SPEC7 Processing System Software,Projects / SPEC7 Processing System Software,spec7-ps-sw,project/spec7-ps-sw,2020-10-30T09:33:02.330Z,master,[],[],ssh://git@ohwr.org:7999/project/spec7-ps-sw.git,https://ohwr.org/project/spec7-ps-sw.git,https://ohwr.org/project/spec7-ps-sw,,0.0,,0,2024-10-02T10:12:05.954Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
11240,"Programmable attenuator of RF signals with very high voltage range (50mV – 1000 V) for protecting digitizers against damage by high voltage signals. Four channels with SMA connectors; Three attenuation values: 0, -20, -40 dB; Bandwidth: DC – 2 GHz.",Programmable RF Attenuator,Projects / Programmable RF Attenuator,rf-att-4cha,project/rf-att-4cha,2020-10-16T12:26:20.949Z,master,[],[],ssh://git@ohwr.org:7999/project/rf-att-4cha.git,https://ohwr.org/project/rf-att-4cha.git,https://ohwr.org/project/rf-att-4cha,https://ohwr.org/project/rf-att-4cha/-/blob/master/README.md,0.0,,0,2024-10-02T10:12:11.374Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
11238,"Compact Universal Timing Endpoint Based on White Rabbit with Xilinx Artix7. Follow-up of the [CUTE-WR-DP](https://www.ohwr.org/project/cute-wr-dp/wiki). [More info at the Wiki
page](https://www.ohwr.org/project/cute-wr-a7/wiki)",Compact Universal Timing Endpoint Based on White Rabbit with Artix7 - Cute-WR-A7,Projects / Compact Universal Timing Endpoint Based on White Rabbit with Artix7 - Cute-WR-A7,cute-wr-a7,project/cute-wr-a7,2020-09-14T13:52:14.255Z,master,[],[],ssh://git@ohwr.org:7999/project/cute-wr-a7.git,https://ohwr.org/project/cute-wr-a7.git,https://ohwr.org/project/cute-wr-a7,https://ohwr.org/project/cute-wr-a7/-/blob/master/README,0.0,,0,2024-09-23T15:14:03.539Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
11236,"White Rabbit Switch WRS-3/18 (hardware version 3.4) with the low-jitter daughterboard integrated.  
[More info at the Wiki page](https://www.ohwr.org/project/wrs-lj-hw/wiki)",WRS with low jitter logic integrated,Projects / WRS with low jitter logic integrated,wrs-lj-hw,project/wrs-lj-hw,2020-09-09T08:45:35.415Z,master,[],[],ssh://git@ohwr.org:7999/project/wrs-lj-hw.git,https://ohwr.org/project/wrs-lj-hw.git,https://ohwr.org/project/wrs-lj-hw,,0.0,,0,2025-01-29T10:43:03.300Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
11235,"HoloBlade is an open-hardware driver-stack for Spatial Light Modulators (SLMs). Its primary application is for holographic displays and may be used in applied optics research fields as telecommunications, astronomy, microscopy and optical computing.",Holoblade,Projects / Holoblade,holoblade,project/holoblade,2020-08-19T15:22:42.793Z,master,[],[],ssh://git@ohwr.org:7999/project/holoblade.git,https://ohwr.org/project/holoblade.git,https://ohwr.org/project/holoblade,https://ohwr.org/project/holoblade/-/blob/master/README.md,0.0,,0,2024-10-02T10:12:15.426Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
11234,"A VHDL core for a VME64x slave. The other side behaves like a Wishbone
master.

  - [More info at the Wiki
    page](https://www.ohwr.org/project/vme64x-core/wiki)

",VME64x core - msaccani,Mathieu Saccani / VME64x core - msaccani,vme64x-core-msaccani,msaccani/vme64x-core-msaccani,2020-07-20T08:11:39.845Z,master,[],[],ssh://git@ohwr.org:7999/msaccani/vme64x-core-msaccani.git,https://ohwr.org/msaccani/vme64x-core-msaccani.git,https://ohwr.org/msaccani/vme64x-core-msaccani,https://ohwr.org/msaccani/vme64x-core-msaccani/-/blob/master/README,0.0,,0,2023-10-19T08:59:30.354Z,9333,Mathieu Saccani,msaccani,user,msaccani,,/uploads/-/system/user/avatar/9327/avatar.png,https://ohwr.org/msaccani
11233,"The Face Shield, made only for COVID-19 protection, can be worn directly or can be put on safety helmets. The FaceShield is developed under the CERN against COVID-19 program. [More info at the Wiki page](https://www.ohwr.org/project/faceshield/wiki)",Face Shield - 3Dprinting and Injection Moulding,Projects / Face Shield - 3Dprinting and Injection Moulding,faceshield,project/faceshield,2020-06-08T14:52:15.808Z,master,[],[],ssh://git@ohwr.org:7999/project/faceshield.git,https://ohwr.org/project/faceshield.git,https://ohwr.org/project/faceshield,,0.0,,0,2024-10-02T10:12:17.247Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
11232,"DIOT reliability studies files and reports. [More info at the Wiki page](https://ohwr.org/project/diot-reliability/wiki)
",DIOT reliability studies project,Projects / DIOT reliability studies project,diot-reliability,project/diot-reliability,2020-06-08T07:53:01.395Z,master,[],[],ssh://git@ohwr.org:7999/project/diot-reliability.git,https://ohwr.org/project/diot-reliability.git,https://ohwr.org/project/diot-reliability,https://ohwr.org/project/diot-reliability/-/blob/master/README.md,0.0,https://ohwr.org/uploads/-/system/project/avatar/11232/logo_black_1_.png,0,2025-01-09T11:12:34.099Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
11230,This open-source 3DMASK offers a FFP2-level protection with the right filter material. It can be produced by anybody in possession of a 3D printer. [More info at the Wiki page](https://ohwr.org/project/3dmask/wikis).,3DMASK - 3D printed mask,Projects / 3DMASK - 3D printed mask,3dmask,project/3dmask,2020-05-26T16:21:50.680Z,master,[],[],ssh://git@ohwr.org:7999/project/3dmask.git,https://ohwr.org/project/3dmask.git,https://ohwr.org/project/3dmask,https://ohwr.org/project/3dmask/-/blob/master/README.md,0.0,,1,2025-02-03T14:27:04.546Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
11226,"Hydra is a RISC-V based radiation-tolerant SoC designed to operate up to 500 Gy TID. See the [wiki](https://ohwr.org/project/hydra/wikis/home) for more details.
 ",Hydra - a radiation-tolerant SoC,Projects / Hydra - a radiation-tolerant SoC,hydra,project/hydra,2020-05-20T08:31:33.600Z,master,[],[],ssh://git@ohwr.org:7999/project/hydra.git,https://ohwr.org/project/hydra.git,https://ohwr.org/project/hydra,,0.0,,0,2024-10-02T10:12:39.719Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
11225,"Introductory SoC course with reference designs based on the Xilinx Vitis Unified Software Development Platform and targeted to the Xilinx Zynq UltraScale+ MPSoC. [More info at the Wiki page](https://ohwr.org/project/soc-course/wiki)
",SoC Course with Reference Designs,Projects / SoC Course with Reference Designs,soc-course,project/soc-course,2020-05-19T16:26:39.804Z,master,"['avnet', 'fpga', 'linux', 'mpsoc', 'soc', 'ultra96', 'ultrascale', 'vitis', 'vivado', 'xilinx', 'zynq']","['avnet', 'fpga', 'linux', 'mpsoc', 'soc', 'ultra96', 'ultrascale', 'vitis', 'vivado', 'xilinx', 'zynq']",ssh://git@ohwr.org:7999/project/soc-course.git,https://ohwr.org/project/soc-course.git,https://ohwr.org/project/soc-course,https://ohwr.org/project/soc-course/-/blob/master/README.md,0.0,,1,2024-10-02T10:12:41.220Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
11224,DI/OT Kintex Ultrascale-based Peripheral Board with HPC FMC and SODIMM DDR4 slot. [More info at the Wiki page](https://www.ohwr.org/project/diot-pfc-ku/wiki),DIOT Kintex Ultrascale-based Peripheral Board FMC Carrier,Projects / DIOT Kintex Ultrascale-based Peripheral Board FMC Carrier,diot-pfc-ku,project/diot-pfc-ku,2020-05-15T15:11:58.882Z,master,[],[],ssh://git@ohwr.org:7999/project/diot-pfc-ku.git,https://ohwr.org/project/diot-pfc-ku.git,https://ohwr.org/project/diot-pfc-ku,,0.0,https://ohwr.org/uploads/-/system/project/avatar/11224/logo_black_1_.png,2,2025-01-29T11:03:23.389Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
11223,ELMB2 is an analog/digital I/O module with CANbus interface. They are used in various CERN installations in control and monitoring of equipment. The ELMB2 is radiation qualified. [More info at the Wiki page](https://ohwr.org/project/cern-elmb2/wiki),CERN-ELMB2,Projects / CERN-ELMB2,cern-elmb2,project/cern-elmb2,2020-05-13T16:44:17.202Z,master,[],[],ssh://git@ohwr.org:7999/project/cern-elmb2.git,https://ohwr.org/project/cern-elmb2.git,https://ohwr.org/project/cern-elmb2,,0.0,,0,2025-02-03T14:25:54.282Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
11222,"SAMbuCa is a flexible and modular low-level control solution for mechatronics devices, developed in the PXIe format.  [More info at the Wiki page](https://www.ohwr.org/project/sambuca/wiki)",SAMbuCa,Projects / SAMbuCa,sambuca,project/sambuca,2020-04-30T15:39:57.127Z,master,[],[],ssh://git@ohwr.org:7999/project/sambuca.git,https://ohwr.org/project/sambuca.git,https://ohwr.org/project/sambuca,,0.0,,0,2024-10-02T10:12:49.613Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
11221,,Open Breath PEP Whistle,OpenBreath / Open Breath PEP Whistle,pepwhistle,openbreath/pepwhistle,2020-04-20T15:42:29.909Z,master,[],[],ssh://git@ohwr.org:7999/openbreath/pepwhistle.git,https://ohwr.org/openbreath/pepwhistle.git,https://ohwr.org/openbreath/pepwhistle,,0.0,,1,2024-10-02T10:12:51.874Z,9591,OpenBreath,openbreath,group,openbreath,,,https://ohwr.org/groups/openbreath
11220,"The open-source HEV ventilator implements the modes PC-A/C, PC-A/C-PRVC, PC-PSV and CPAP [More info at the Wiki page](https://www.ohwr.org/project/hev/wiki)",HEV - High Energy Ventilator,Projects / HEV - High Energy Ventilator,hev,project/hev,2020-04-16T13:29:36.645Z,master,[],[],ssh://git@ohwr.org:7999/project/hev.git,https://ohwr.org/project/hev.git,https://ohwr.org/project/hev,https://ohwr.org/project/hev/-/blob/master/README.md,0.0,,4,2024-10-02T10:12:54.793Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
11219,PXIe FMC carrier board for a HPC FMC card. Based on Xilinx Zynq UltraScale+. [More info at the Wiki page](https://www.ohwr.org/project/spexi7u/wiki),PXIe FMC Carrier Board - SPEXI7U,Projects / PXIe FMC Carrier Board - SPEXI7U,spexi7u,project/spexi7u,2020-04-15T12:41:37.972Z,master,[],[],ssh://git@ohwr.org:7999/project/spexi7u.git,https://ohwr.org/project/spexi7u.git,https://ohwr.org/project/spexi7u,,0.0,,0,2024-10-02T10:12:56.143Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
11218,PROFIP is a gateway between PROFINET-IRT and WorldFIP that allows for a deterministic low-latency exchange of the cyclical process data between the two networks. [More info at the Wiki page](https://www.ohwr.org/project/profip/wiki),PROFIP - PROFINET-IRT - WorldFIP gateway,Projects / PROFIP - PROFINET-IRT - WorldFIP gateway,profip,project/profip,2020-04-14T14:46:03.579Z,master,[],[],ssh://git@ohwr.org:7999/project/profip.git,https://ohwr.org/project/profip.git,https://ohwr.org/project/profip,,0.0,,0,2024-10-02T10:12:57.589Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
11210,"VentilatorPAL is a high-quality and low-cost, open source ventilator. [More info at the Wiki page](https://www.ohwr.org/project/ventilatorpal/wiki)",Ventilator PAL,Projects / Ventilator PAL,ventilatorpal,project/ventilatorpal,2020-04-01T15:16:17.855Z,master,[],[],ssh://git@ohwr.org:7999/project/ventilatorpal.git,https://ohwr.org/project/ventilatorpal.git,https://ohwr.org/project/ventilatorpal,https://ohwr.org/project/ventilatorpal/-/blob/master/README.md,0.0,,0,2024-10-02T10:13:01.412Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
11209,"DI/OT Igloo2-based System Board for radiation-exposed DI/OT applications. [More info at the Wiki
page](https://www.ohwr.org/project/diot-sb-igl/wiki)",DIOT Igloo2-based radiation-tolerant System Board,Projects / DIOT Igloo2-based radiation-tolerant System Board,diot-sb-igl,project/diot-sb-igl,2020-04-01T08:46:54.186Z,master,[],[],ssh://git@ohwr.org:7999/project/diot-sb-igl.git,https://ohwr.org/project/diot-sb-igl.git,https://ohwr.org/project/diot-sb-igl,https://ohwr.org/project/diot-sb-igl/-/blob/master/README.md,1.0,https://ohwr.org/uploads/-/system/project/avatar/11209/logo_black_1_.png,3,2025-01-31T10:54:40.387Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
11208,,nomemires,Juan David González Cobas / nomemires,nomemires,dcobas/nomemires,2020-03-30T14:57:01.454Z,master,[],[],ssh://git@ohwr.org:7999/dcobas/nomemires.git,https://ohwr.org/dcobas/nomemires.git,https://ohwr.org/dcobas/nomemires,https://ohwr.org/dcobas/nomemires/-/blob/master/README.md,0.0,,0,2024-10-02T10:13:06.146Z,8500,Juan David González Cobas,dcobas,user,dcobas,,https://secure.gravatar.com/avatar/f8bcc90ade1a07abe7983b8de402bd1cfc239d6efda739eb07bf88e65b6434cd?s=80&d=identicon,https://ohwr.org/dcobas
11207,"Open Breath lung ventilator. It is developed to be low-cost, scalable and easily manufactured. It can be used in Pressure and Volume Control, SIMV+PS and CPAP functions. 
[More info at the Wiki page](https://www.ohwr.org/project/openbreath/wiki)",Open Breath Lung Ventilator,OpenBreath / Open Breath Lung Ventilator,lungventilator,openbreath/lungventilator,2020-03-20T22:10:24.750Z,master,[],[],ssh://git@ohwr.org:7999/openbreath/lungventilator.git,https://ohwr.org/openbreath/lungventilator.git,https://ohwr.org/openbreath/lungventilator,https://ohwr.org/openbreath/lungventilator/-/blob/master/README.md,0.0,https://ohwr.org/uploads/-/system/project/avatar/11207/90548457_112434107058425_8005779702138535936_o.png,1,2024-10-02T10:13:11.886Z,9591,OpenBreath,openbreath,group,openbreath,,,https://ohwr.org/groups/openbreath
11206,,FMC Software Support,Dimitris Lampridis / FMC Software Support,fmc-sw,dlampridis/fmc-sw,2020-03-03T15:44:00.912Z,master,[],[],ssh://git@ohwr.org:7999/dlampridis/fmc-sw.git,https://ohwr.org/dlampridis/fmc-sw.git,https://ohwr.org/dlampridis/fmc-sw,https://ohwr.org/dlampridis/fmc-sw/-/blob/master/README.rst,0.0,,0,2020-03-03T15:44:00.912Z,8943,Dimitris Lampridis,dlampridis,user,dlampridis,,/uploads/-/system/user/avatar/8937/avatar.png,https://ohwr.org/dlampridis
11205,"A software framework for Linux device drivers aimed at supporting
controls and data acquisition hardware.  
ZIO supports sub-nanosecond timestamps, block-oriented input and output
and transport of meta-data with the data samples. Users can change the
buffer type and trigger type associated with a device at run time, and  
all of devices, triggers and buffers are easily implemented as add-on
modules.

The PF\_ZIO implementation, currently in beta status, implements a
network interface to the ZIO transport, which allows each I/O channel to
generate or receive network frames. Applications see the network of
devices and can talk with several of them from the same socket. We
support SOCK\_STREAM, SOCK\_DGRAM and SOCK\_RAW.

",ZIO,Dimitris Lampridis / ZIO,zio,dlampridis/zio,2020-03-02T14:42:03.696Z,master,[],[],ssh://git@ohwr.org:7999/dlampridis/zio.git,https://ohwr.org/dlampridis/zio.git,https://ohwr.org/dlampridis/zio,https://ohwr.org/dlampridis/zio/-/blob/master/README,0.0,,0,2020-03-02T14:42:03.696Z,8943,Dimitris Lampridis,dlampridis,user,dlampridis,,/uploads/-/system/user/avatar/8937/avatar.png,https://ohwr.org/dlampridis
11204,"FPGA Firmware ( ""Gateware"" ) for AIDA-2020 TLU and AIDA mini-TLU

Uses ""IPBus Build"" ( ipbb )

Build instructions at Instructions
[here](https://ohwr.org/project/fmc-mtlu-gw/wikis/Building-AIDA-2020-TLU-firmware)

",AIDA-2020 TLU - Gateware,Yi Liu / AIDA-2020 TLU - Gateware,fmc-mtlu-gw,yiliu/fmc-mtlu-gw,2020-02-23T22:35:03.728Z,master,[],[],ssh://git@ohwr.org:7999/yiliu/fmc-mtlu-gw.git,https://ohwr.org/yiliu/fmc-mtlu-gw.git,https://ohwr.org/yiliu/fmc-mtlu-gw,,0.0,,0,2020-02-23T22:35:03.728Z,9262,Yi Liu,yiliu,user,yiliu,,https://secure.gravatar.com/avatar/4984df3ab30df7c62728b4fb1bcfff8109553316fb30c94f8973dff90b31852d?s=80&d=identicon,https://ohwr.org/yiliu
11203,"Utility project for the CERN BE-CO-HT Continuous Integration (CI) infrastructure.
",CERN BE-CO-HT CI,Projects / CERN BE-CO-HT CI,cern-be-co-ht-ci,project/cern-be-co-ht-ci,2020-02-13T16:13:46.738Z,master,[],[],ssh://git@ohwr.org:7999/project/cern-be-co-ht-ci.git,https://ohwr.org/project/cern-be-co-ht-ci.git,https://ohwr.org/project/cern-be-co-ht-ci,https://ohwr.org/project/cern-be-co-ht-ci/-/blob/master/README.md,0.0,,0,2024-05-06T19:16:08.361Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
11202,FMC-PROFINET is a PROFINET device (“slave”) card based on the Siemens ERTEC200 chip in the FMC-LPC form-factor.,FMC-PROFINET,Projects / FMC-PROFINET,fmc-profinet,project/fmc-profinet,2020-01-10T14:29:30.639Z,master,[],[],ssh://git@ohwr.org:7999/project/fmc-profinet.git,https://ohwr.org/project/fmc-profinet.git,https://ohwr.org/project/fmc-profinet,https://ohwr.org/project/fmc-profinet/-/blob/master/README.md,0.0,,1,2024-10-02T10:13:16.264Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
11201,High-resolution frequency/phase-microstepper for timing laboratories. [More info at the Wiki page](https://www.ohwr.org/project/microstepper/wiki),Microstepper,Projects / Microstepper,microstepper,project/microstepper,2020-01-09T15:34:33.648Z,master,[],[],ssh://git@ohwr.org:7999/project/microstepper.git,https://ohwr.org/project/microstepper.git,https://ohwr.org/project/microstepper,https://ohwr.org/project/microstepper/-/blob/master/README.md,0.0,,1,2024-10-02T10:13:18.193Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
11200,"This project develops the metrological capacities required to accelerate the industrial adoption of PTP-WR, through improved hardware and calibration techniques. [More info at the Wiki page](https://www.ohwr.org/project/write/wiki)",White Rabbit Industrial Timing Enhancement - WRITE,Projects / White Rabbit Industrial Timing Enhancement - WRITE,write,project/write,2020-01-06T16:19:38.005Z,master,[],[],ssh://git@ohwr.org:7999/project/write.git,https://ohwr.org/project/write.git,https://ohwr.org/project/write,,0.0,,0,2024-10-02T10:13:19.909Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
11199,"A 4-lane PCIe carrier for a low pin count FPGA Mezzanine Card (VITA 57). [SPEC carrier](https://www.ohwr.org/project/spec) based with a larger FPGA.
Commercially available.
[More info at the Wiki page](https://www.ohwr.org/project/spec150/wiki)",SPEC150,Projects / SPEC150,spec150,project/spec150,2019-12-19T11:02:11.331Z,master,[],[],ssh://git@ohwr.org:7999/project/spec150.git,https://ohwr.org/project/spec150.git,https://ohwr.org/project/spec150,,0.0,,0,2025-02-03T14:18:00.851Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
11198,"The uRV (Micro RISC-V) core is a small-sized implementation of a 32-bit
RISC-V core, targeted specifically at FPGAs.  
[More info at the Wiki page](https://www.ohwr.org/project/urv-core/wiki)

",urv-core,Christos Gentsos / urv-core,urv-core,cgentsos/urv-core,2019-12-13T17:39:06.904Z,master,[],[],ssh://git@ohwr.org:7999/cgentsos/urv-core.git,https://ohwr.org/cgentsos/urv-core.git,https://ohwr.org/cgentsos/urv-core,,0.0,,0,2020-02-28T09:59:44.484Z,9354,Christos Gentsos,cgentsos,user,cgentsos,,https://secure.gravatar.com/avatar/474cbcdbb6cb308963b925fa2771830c6d886f8123cc7dbc7fcbcabc5acfdf06?s=80&d=identicon,https://ohwr.org/cgentsos
11197,A simple VME64x carrier for two high pin count FPGA Mezzanine Cards (VITA 57). It has memory and clocking resources and supports the White Rabbit timing and control network. Follow-up of SVEC.,Simple VME FMC Carrier 7 - SVEC7,Projects / Simple VME FMC Carrier 7 - SVEC7,svec7,project/svec7,2019-11-08T15:33:05.502Z,master,[],[],ssh://git@ohwr.org:7999/project/svec7.git,https://ohwr.org/project/svec7.git,https://ohwr.org/project/svec7,https://ohwr.org/project/svec7/-/blob/master/README.md,0.0,,0,2024-10-02T10:13:24.253Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
11196,"High precision, ultra stable Oven Controlled Crystal Oscillator (OCXO) suitable for the Metrology purposes in a 19"" format. Can be used to upgrade the performance of the SPEC7.",HPSEC - High Precision Slaved External Clock,Projects / HPSEC - High Precision Slaved External Clock,hpsec,project/hpsec,2019-11-08T09:31:31.239Z,master,[],[],ssh://git@ohwr.org:7999/project/hpsec.git,https://ohwr.org/project/hpsec.git,https://ohwr.org/project/hpsec,https://ohwr.org/project/hpsec/-/blob/master/README.md,0.0,,1,2024-10-02T10:13:26.205Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
11195,"RF over Ethernet, a protocol. Based on an extension of IEEE 1914.3 - IEEE Standard for Radio over Ethernet Encapsulations and Mappings. [More info at the Wiki page](https://www.ohwr.org/project/roe-protocol/wiki)",RF over Ethernet - a protocol,Projects / RF over Ethernet - a protocol,roe-protocol,project/roe-protocol,2019-11-05T10:45:57.816Z,master,[],[],ssh://git@ohwr.org:7999/project/roe-protocol.git,https://ohwr.org/project/roe-protocol.git,https://ohwr.org/project/roe-protocol,,0.0,,1,2024-10-02T10:13:27.701Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
11194,"Rules for low-level software to check an FPGA for sanity, to ease debugging and to provide support for low-level software auto-configuration for byte-order and optional components.  [More info at Wiki](https://www.ohwr.org/project/fpga-dev-id/wiki)
",FPGA Device ID,Projects / FPGA Device ID,fpga-dev-id,project/fpga-dev-id,2019-10-24T09:47:13.639Z,master,[],[],ssh://git@ohwr.org:7999/project/fpga-dev-id.git,https://ohwr.org/project/fpga-dev-id.git,https://ohwr.org/project/fpga-dev-id,https://ohwr.org/project/fpga-dev-id/-/blob/master/README.md,0.0,,0,2024-10-02T10:13:29.433Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
11192,"A White Rabbit Timing Receiver in PCIe (PCI Express) format.  
[More info at the Wiki page](https://www.ohwr.org/project/tr-pexp/wiki)",tr-pexp,Projects / tr-pexp,tr-pexp,project/tr-pexp,2019-10-10T12:06:02.665Z,master,[],[],ssh://git@ohwr.org:7999/project/tr-pexp.git,https://ohwr.org/project/tr-pexp.git,https://ohwr.org/project/tr-pexp,https://ohwr.org/project/tr-pexp/-/blob/master/README.md,0.0,,0,2025-02-04T08:58:42.638Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
11191,,FPGA Framework,Projects / FPGA Framework,fpga-framework,project/fpga-framework,2019-10-07T14:28:55.652Z,master,[],[],ssh://git@ohwr.org:7999/project/fpga-framework.git,https://ohwr.org/project/fpga-framework.git,https://ohwr.org/project/fpga-framework,,0.0,,0,2024-10-02T10:13:35.851Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
11190,,FMC Software Support,Projects / FMC Software Support,fmc-sw,project/fmc-sw,2019-09-26T08:16:33.460Z,master,[],[],ssh://git@ohwr.org:7999/project/fmc-sw.git,https://ohwr.org/project/fmc-sw.git,https://ohwr.org/project/fmc-sw,https://ohwr.org/project/fmc-sw/-/blob/master/README.rst,1.0,,0,2025-01-23T09:24:24.945Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
11189,"Zynq CarrIer for Timing sYstems based on radiofrequency over White Rabbit, aka CITY.",CITY - CarrIer for RFoWR-based Timing sYstems,Projects / CITY - CarrIer for RFoWR-based Timing sYstems,city,project/city,2019-09-12T12:56:25.662Z,master,[],[],ssh://git@ohwr.org:7999/project/city.git,https://ohwr.org/project/city.git,https://ohwr.org/project/city,https://ohwr.org/project/city/-/blob/master/README.md,0.0,,1,2024-10-02T10:13:41.199Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
11188,DIOT 3U crate mechanics and backplane compliant with CompactPCI-Serial standard.,DIOT CompactPCI Serial crate hardware,Projects / DIOT CompactPCI Serial crate hardware,diot-crate-hw,project/diot-crate-hw,2019-09-12T12:38:48.816Z,master,[],[],ssh://git@ohwr.org:7999/project/diot-crate-hw.git,https://ohwr.org/project/diot-crate-hw.git,https://ohwr.org/project/diot-crate-hw,https://ohwr.org/project/diot-crate-hw/-/blob/master/README.md,0.0,https://ohwr.org/uploads/-/system/project/avatar/11188/logo_black_1_.png,1,2025-01-31T09:20:50.899Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
11187,SAMD21-based monitoring module for DI/OT power supply and fan tray.,DIOT Monitoring Module,Projects / DIOT Monitoring Module,diot-monimod,project/diot-monimod,2019-09-12T12:37:27.446Z,master,[],[],ssh://git@ohwr.org:7999/project/diot-monimod.git,https://ohwr.org/project/diot-monimod.git,https://ohwr.org/project/diot-monimod,https://ohwr.org/project/diot-monimod/-/blob/master/README.md,0.0,https://ohwr.org/uploads/-/system/project/avatar/11187/logo_black_1_.png,2,2025-01-27T09:27:37.677Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
11186,"The DAPHNE front end board is a piece of hardware that digitizes the output signal from one of the systems of the far detector in the DUNE experiment. For more information, see the [wiki](https://www.ohwr.org/project/daphne-feb-dune/wiki)
",DAPHNE FEB,Projects / DAPHNE FEB,daphne-feb-dune,project/daphne-feb-dune,2019-09-11T08:33:37.839Z,,[],[],ssh://git@ohwr.org:7999/project/daphne-feb-dune.git,https://ohwr.org/project/daphne-feb-dune.git,https://ohwr.org/project/daphne-feb-dune,,,,0,2019-09-11T13:22:20.390Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
11185,"The aim of this project is to evaluate resources
required to run wr switch HDL on Xilinx Ultrascale+ FPGA",Resource Evaluation of WR switch HDL for Ultrascale Plus,Projects / Resource Evaluation of WR switch HDL for Ultrascale Plus,wr-switch-hdl-usp-eval,project/wr-switch-hdl-usp-eval,2019-08-02T08:44:23.626Z,master,[],[],ssh://git@ohwr.org:7999/project/wr-switch-hdl-usp-eval.git,https://ohwr.org/project/wr-switch-hdl-usp-eval.git,https://ohwr.org/project/wr-switch-hdl-usp-eval,https://ohwr.org/project/wr-switch-hdl-usp-eval/-/blob/master/README.md,0.0,,0,2024-09-23T15:18:22.262Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
11183,"A distributed oscilloscope based on the White Rabbit network.
[More info at the Wiki page](https://www.ohwr.org/project/distributed-oscilloscope/wiki)",distributed oscilloscope,Projects / distributed oscilloscope,distributed-oscilloscope,project/distributed-oscilloscope,2019-07-24T09:40:33.003Z,master,[],[],ssh://git@ohwr.org:7999/project/distributed-oscilloscope.git,https://ohwr.org/project/distributed-oscilloscope.git,https://ohwr.org/project/distributed-oscilloscope,https://ohwr.org/project/distributed-oscilloscope/-/blob/master/README,0.0,,0,2024-10-02T10:13:58.327Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
11182,Study of the “Open Hardware Initiative” at CERN with a focus on the technologies of participation that were mobilized to assemble critical infrastructure for basic research in high energy physics. ,OHW research,Projects / OHW research,ohw-research,project/ohw-research,2019-07-23T09:00:34.553Z,master,[],[],ssh://git@ohwr.org:7999/project/ohw-research.git,https://ohwr.org/project/ohw-research.git,https://ohwr.org/project/ohw-research,https://ohwr.org/project/ohw-research/-/blob/master/README.md,0.0,,0,2024-10-02T10:14:02.438Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
11181,"DI/OT Zynq Ultrascale-based System Board with White Rabbit support.
[More info at the Wiki page](https://www.ohwr.org/project/diot-sb-zu/wiki)",DIOT Zynq Ultrascale-based System Board,Projects / DIOT Zynq Ultrascale-based System Board,diot-sb-zu,project/diot-sb-zu,2019-07-17T12:59:04.953Z,master,[],[],ssh://git@ohwr.org:7999/project/diot-sb-zu.git,https://ohwr.org/project/diot-sb-zu.git,https://ohwr.org/project/diot-sb-zu,https://ohwr.org/project/diot-sb-zu/-/blob/master/README.md,0.0,https://ohwr.org/uploads/-/system/project/avatar/11181/logo_black_1_.png,3,2025-02-04T15:25:11.676Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
11180,"The OpenDSO is a bench top oscilloscope, built on top of an extensible Zynq-based platform.
Features: 2x100 MS/s (basic frontend), extendable to 4x1GS/s or 2x2GS/s; Zynq 7000 FPGA, 512 MB RAM; 8"" multitouch display with Qt GUI",OpenDSO - Open Digital Storage Oscilloscope,Projects / OpenDSO - Open Digital Storage Oscilloscope,opendso,project/opendso,2019-06-25T13:18:14.801Z,master,[],[],ssh://git@ohwr.org:7999/project/opendso.git,https://ohwr.org/project/opendso.git,https://ohwr.org/project/opendso,https://ohwr.org/project/opendso/-/blob/master/README.md,0.0,,0,2024-10-02T10:14:05.107Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
11179,"A robust handheld low-level UV intensity meter. Readings from 0 - 1999 mMED/h. Developed in collaboration with the French Enfants de la Lune association.  
[More info at the Wiki page](https://www.ohwr.org/project/luvi/wiki)",luvi,Projects / luvi,luvi,project/luvi,2019-06-03T20:16:47.530Z,master,[],[],ssh://git@ohwr.org:7999/project/luvi.git,https://ohwr.org/project/luvi.git,https://ohwr.org/project/luvi,https://ohwr.org/project/luvi/-/blob/master/README.md,0.0,https://ohwr.org/uploads/-/system/project/avatar/11179/LUVI_button.png,0,2024-10-02T10:14:06.685Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
11177,This is a collection of simple macro implementations for Microsemi's ProASIC3 FPGAs to allow simulating post-synthesis designs using GHDL.,VHDL macro libraries for Microsemi ProASIC3,Projects / VHDL macro libraries for Microsemi ProASIC3,microsemi-lib,project/microsemi-lib,2019-05-08T09:09:57.675Z,master,[],[],ssh://git@ohwr.org:7999/project/microsemi-lib.git,https://ohwr.org/project/microsemi-lib.git,https://ohwr.org/project/microsemi-lib,https://ohwr.org/project/microsemi-lib/-/blob/master/README.md,0.0,,0,2024-10-02T10:14:08.008Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
11174,"Radiation-tolerant AC/DC power supply unit (PSU). In: 230VAC, 50Hz, Out: +12V, 8.33A (100W) and +5V, 2A (10W). Possibility for redundancy. The design is CompactPCI compatible. Part of DIOT project.",RaToPUS radiation-tolerant AC-DC power supply,Projects / RaToPUS radiation-tolerant AC-DC power supply,psu-rad-acdc-230v-12v5v-110w,project/psu-rad-acdc-230v-12v5v-110w,2019-04-08T12:57:39.731Z,master,['ratopus'],['ratopus'],ssh://git@ohwr.org:7999/project/psu-rad-acdc-230v-12v5v-110w.git,https://ohwr.org/project/psu-rad-acdc-230v-12v5v-110w.git,https://ohwr.org/project/psu-rad-acdc-230v-12v5v-110w,https://ohwr.org/project/psu-rad-acdc-230v-12v5v-110w/-/blob/master/README.md,0.0,https://ohwr.org/uploads/-/system/project/avatar/11174/logo_black_1_.png,1,2025-02-03T14:27:35.733Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
11173,"COM Express based PXIe system controller. COM Express Compact Pin-out type 6, 16-lane PCIe GEN3. PXIe trigger line on front-panel. [More info at the Wiki page](https://ohwr.org/project/pxie-ctl-comexpress/wikis)",PXIe controller COM Express based,Projects / PXIe controller COM Express based,pxie-ctl-comexpress,project/pxie-ctl-comexpress,2019-04-05T17:28:47.998Z,master,[],[],ssh://git@ohwr.org:7999/project/pxie-ctl-comexpress.git,https://ohwr.org/project/pxie-ctl-comexpress.git,https://ohwr.org/project/pxie-ctl-comexpress,https://ohwr.org/project/pxie-ctl-comexpress/-/blob/master/README.md,0.0,,0,2024-10-02T10:14:17.646Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
11172,"This project hosts compliance tests dedicated for WR devices and based on the ATTEST framework available from [Veryx Technologies](http://www.veryxtech.com). To use the material available in this project, the ATTEST framework needs to be purchased.",White Rabbit Compliance Tests,Projects / White Rabbit Compliance Tests,wr-compliance-tests,project/wr-compliance-tests,2019-04-02T09:35:44.385Z,master,[],[],ssh://git@ohwr.org:7999/project/wr-compliance-tests.git,https://ohwr.org/project/wr-compliance-tests.git,https://ohwr.org/project/wr-compliance-tests,https://ohwr.org/project/wr-compliance-tests/-/blob/master/README.md,0.0,,0,2025-01-22T16:38:54.153Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
11171,"This project focuses on performing with high precision the core WR PTP calculations in fixed-point arithmetic. This will ensure uniform input parameters, code and precision across all WR implementations.",White Rabbit Fixed Point Calculations,Projects / White Rabbit Fixed Point Calculations,wr-fixed-point-calculations,project/wr-fixed-point-calculations,2019-04-02T08:54:41.219Z,master,[],[],ssh://git@ohwr.org:7999/project/wr-fixed-point-calculations.git,https://ohwr.org/project/wr-fixed-point-calculations.git,https://ohwr.org/project/wr-fixed-point-calculations,https://ohwr.org/project/wr-fixed-point-calculations/-/blob/master/README.md,0.0,,0,2024-10-02T10:14:22.742Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
11170,A web based commander based on Node.JS for the HDLMake tool.,hdlmaker,Javier D. Garcia-Lasheras / hdlmaker,hdlmaker,garcialasheras/hdlmaker,2019-03-30T23:16:22.761Z,master,[],[],ssh://git@ohwr.org:7999/garcialasheras/hdlmaker.git,https://ohwr.org/garcialasheras/hdlmaker.git,https://ohwr.org/garcialasheras/hdlmaker,https://ohwr.org/garcialasheras/hdlmaker/-/blob/master/README.md,0.0,,0,2024-10-02T10:14:24.409Z,9050,Javier D. Garcia-Lasheras,garcialasheras,user,garcialasheras,,/uploads/-/system/user/avatar/9044/avatar.png,https://ohwr.org/garcialasheras
11169,"This library provides a generic API for ADC devices, so that
applications can use this API to access any of the supported ADC
boards.  
Currently the library supports the following boards:

  - fmc-adc-100m14b14cha

For testing and debugging purpose it supports also a couple of virtual
boards that you can use to start the development of your application.

[More info at the Wiki page](https://www.ohwr.org/project/adc-lib/wiki)

",adc-lib,Milosz Malczak / adc-lib,adc-lib,mmalczak/adc-lib,2019-03-29T13:18:11.921Z,master,[],[],ssh://git@ohwr.org:7999/mmalczak/adc-lib.git,https://ohwr.org/mmalczak/adc-lib.git,https://ohwr.org/mmalczak/adc-lib,,0.0,,0,2019-08-19T15:24:32.485Z,9346,Milosz Malczak,mmalczak,user,mmalczak,,https://secure.gravatar.com/avatar/d3c6a5aa2b75c8133d63801ac3c4ac2c676db8637d339bb7c570b73f8632dc4d?s=80&d=identicon,https://ohwr.org/mmalczak
11168,The TimIQ system is an IQ modulator allowing to phase shift a radio frequency clock with a resolution of 40 fs and an accuracy of 8 ps. Software.,TimIQ Software,Projects / TimIQ / TimIQ Software,timiq-sw,project/timiq/timiq-sw,2019-03-19T14:18:42.192Z,master,[],[],ssh://git@ohwr.org:7999/project/timiq/timiq-sw.git,https://ohwr.org/project/timiq/timiq-sw.git,https://ohwr.org/project/timiq/timiq-sw,https://ohwr.org/project/timiq/timiq-sw/-/blob/master/README.md,0.0,,0,2024-10-02T10:14:26.905Z,9522,TimIQ,timiq,group,project/timiq,8136.0,,https://ohwr.org/groups/project/timiq
11167,The TimIQ system is an IQ modulator allowing to phase shift a radio frequency clock with a resolution of 40 fs and an accuracy of 8 ps. Hardware.,TimIQ Hardware,Projects / TimIQ / TimIQ Hardware,timiq-hw,project/timiq/timiq-hw,2019-03-19T14:17:23.877Z,master,"['IQ modulator', 'KiCad', 'synchronization']","['IQ modulator', 'KiCad', 'synchronization']",ssh://git@ohwr.org:7999/project/timiq/timiq-hw.git,https://ohwr.org/project/timiq/timiq-hw.git,https://ohwr.org/project/timiq/timiq-hw,https://ohwr.org/project/timiq/timiq-hw/-/blob/master/README.md,0.0,,0,2024-10-02T10:14:30.833Z,9522,TimIQ,timiq,group,project/timiq,8136.0,,https://ohwr.org/groups/project/timiq
11165,A system to characterize large area silicon pad sensors with several hundred channels. This repository contains the microcontroller firmware. ,ARRAY - Firmware,Projects / ARRAY / ARRAY - Firmware,array-firmware,project/array/array-firmware,2019-03-14T11:10:05.647Z,master,[],[],ssh://git@ohwr.org:7999/project/array/array-firmware.git,https://ohwr.org/project/array/array-firmware.git,https://ohwr.org/project/array/array-firmware,https://ohwr.org/project/array/array-firmware/-/blob/master/README.md,0.0,,0,2024-10-02T10:14:33.297Z,9514,ARRAY,array,group,project/array,8136.0,,https://ohwr.org/groups/project/array
11163,A system to characterise large area silicon pad sensors with several hundred channels. It consists of two PCBs. One is an active switching 512-to-1 matrix. The second one is a passive probe card to contact the sensor. Testing.,ARRAY - LabVIEW Interface ,Projects / ARRAY / ARRAY - LabVIEW Interface ,array-interface-labview,project/array/array-interface-labview,2019-03-14T10:51:38.104Z,master,[],[],ssh://git@ohwr.org:7999/project/array/array-interface-labview.git,https://ohwr.org/project/array/array-interface-labview.git,https://ohwr.org/project/array/array-interface-labview,https://ohwr.org/project/array/array-interface-labview/-/blob/master/README.md,0.0,,0,2024-09-23T15:22:12.679Z,9514,ARRAY,array,group,project/array,8136.0,,https://ohwr.org/groups/project/array
11162,A system to characterise large area silicon pad sensors with several hundred channels. It consists of two PCBs. One is an active switching 512-to-1 matrix. The second one is a passive probe card to contact the sensor. Software.,ARRAY - Python Interface,Projects / ARRAY / ARRAY - Python Interface,array-interface-python,project/array/array-interface-python,2019-03-14T10:49:15.180Z,master,[],[],ssh://git@ohwr.org:7999/project/array/array-interface-python.git,https://ohwr.org/project/array/array-interface-python.git,https://ohwr.org/project/array/array-interface-python,https://ohwr.org/project/array/array-interface-python/-/blob/master/README.md,0.0,,0,2019-05-03T13:38:55.211Z,9514,ARRAY,array,group,project/array,8136.0,,https://ohwr.org/groups/project/array
11161,A system to characterise large area silicon pad sensors with several hundred channels. It consists of two PCBs. One is an active switching 512-to-1 matrix. The second one is a passive probe card to contact the sensor. Hardware.,ARRAY - Hardware,Projects / ARRAY / ARRAY - Hardware,array-hardware,project/array/array-hardware,2019-03-14T10:33:08.793Z,master,[],[],ssh://git@ohwr.org:7999/project/array/array-hardware.git,https://ohwr.org/project/array/array-hardware.git,https://ohwr.org/project/array/array-hardware,https://ohwr.org/project/array/array-hardware/-/blob/master/README.md,0.0,,0,2024-09-23T15:22:14.744Z,9514,ARRAY,array,group,project/array,8136.0,,https://ohwr.org/groups/project/array
11157,"A system to characterise large area silicon pad sensors with several
hundred channels. It consists of two PCBs. One is an active switching
512-to-1 matrix. The second one is a passive probe card to contact the sensor.",ARRAY,Projects / ARRAY / ARRAY,array,project/array/array,2019-03-06T13:46:30.948Z,master,[],[],ssh://git@ohwr.org:7999/project/array/array.git,https://ohwr.org/project/array/array.git,https://ohwr.org/project/array/array,https://ohwr.org/project/array/array/-/blob/master/README.md,0.0,,0,2024-10-02T10:14:43.839Z,9514,ARRAY,array,group,project/array,8136.0,,https://ohwr.org/groups/project/array
11155,"READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS
",vme64x-core,hdl-core-lib / vme64x-core,vme64x-core,hdl-core-lib/vme64x-core,2019-02-27T13:41:23.925Z,master,[],[],ssh://git@ohwr.org:7999/hdl-core-lib/vme64x-core.git,https://ohwr.org/hdl-core-lib/vme64x-core.git,https://ohwr.org/hdl-core-lib/vme64x-core,https://ohwr.org/hdl-core-lib/vme64x-core/-/blob/master/README,0.0,,0,2019-02-27T13:41:23.925Z,9383,hdl-core-lib,hdl-core-lib,group,hdl-core-lib,,,https://ohwr.org/groups/hdl-core-lib
11150,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,utca-rtm-8-sfp,xtca-projects / utca-rtm-8-sfp,utca-rtm-8-sfp,xtca-projects/utca-rtm-8-sfp,2019-02-13T14:41:45.720Z,master,[],[],ssh://git@ohwr.org:7999/xtca-projects/utca-rtm-8-sfp.git,https://ohwr.org/xtca-projects/utca-rtm-8-sfp.git,https://ohwr.org/xtca-projects/utca-rtm-8-sfp,,0.0,,0,2019-03-07T17:29:05.971Z,9404,xtca-projects,xtca-projects,group,xtca-projects,,,https://ohwr.org/groups/xtca-projects
11149,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,mtca-4-timing-module,xtca-projects / mtca-4-timing-module,mtca-4-timing-module,xtca-projects/mtca-4-timing-module,2019-02-13T14:41:45.447Z,main,[],[],ssh://git@ohwr.org:7999/xtca-projects/mtca-4-timing-module.git,https://ohwr.org/xtca-projects/mtca-4-timing-module.git,https://ohwr.org/xtca-projects/mtca-4-timing-module,,0.0,,0,2019-02-13T14:41:45.447Z,9404,xtca-projects,xtca-projects,group,xtca-projects,,,https://ohwr.org/groups/xtca-projects
11148,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,ertm15-llrf-wr,xtca-projects / ertm15-llrf-wr,ertm15-llrf-wr,xtca-projects/ertm15-llrf-wr,2019-02-13T14:41:45.186Z,master,[],[],ssh://git@ohwr.org:7999/xtca-projects/ertm15-llrf-wr.git,https://ohwr.org/xtca-projects/ertm15-llrf-wr.git,https://ohwr.org/xtca-projects/ertm15-llrf-wr,https://ohwr.org/xtca-projects/ertm15-llrf-wr/-/blob/master/README,0.0,,0,2019-03-07T17:27:29.828Z,9404,xtca-projects,xtca-projects,group,xtca-projects,,,https://ohwr.org/groups/xtca-projects
11147,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,amc-ubackplane-sfp,xtca-projects / amc-ubackplane-sfp,amc-ubackplane-sfp,xtca-projects/amc-ubackplane-sfp,2019-02-13T14:41:44.788Z,master,[],[],ssh://git@ohwr.org:7999/xtca-projects/amc-ubackplane-sfp.git,https://ohwr.org/xtca-projects/amc-ubackplane-sfp.git,https://ohwr.org/xtca-projects/amc-ubackplane-sfp,,0.0,,0,2019-03-07T17:28:52.239Z,9404,xtca-projects,xtca-projects,group,xtca-projects,,,https://ohwr.org/groups/xtca-projects
11146,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,amc-cpu-com6,xtca-projects / amc-cpu-com6,amc-cpu-com6,xtca-projects/amc-cpu-com6,2019-02-13T14:41:44.520Z,master,[],[],ssh://git@ohwr.org:7999/xtca-projects/amc-cpu-com6.git,https://ohwr.org/xtca-projects/amc-cpu-com6.git,https://ohwr.org/xtca-projects/amc-cpu-com6,,0.0,,0,2019-03-07T17:27:42.554Z,9404,xtca-projects,xtca-projects,group,xtca-projects,,,https://ohwr.org/groups/xtca-projects
11145,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,amc-carrier-2-sl,xtca-projects / amc-carrier-2-sl,amc-carrier-2-sl,xtca-projects/amc-carrier-2-sl,2019-02-13T14:41:44.213Z,master,[],[],ssh://git@ohwr.org:7999/xtca-projects/amc-carrier-2-sl.git,https://ohwr.org/xtca-projects/amc-carrier-2-sl.git,https://ohwr.org/xtca-projects/amc-carrier-2-sl,,0.0,,0,2019-03-07T17:25:59.179Z,9404,xtca-projects,xtca-projects,group,xtca-projects,,,https://ohwr.org/groups/xtca-projects
11144,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,afc-ipmi-sw,xtca-projects / afc-ipmi-sw,afc-ipmi-sw,xtca-projects/afc-ipmi-sw,2019-02-13T14:41:43.919Z,afc-timing,[],[],ssh://git@ohwr.org:7999/xtca-projects/afc-ipmi-sw.git,https://ohwr.org/xtca-projects/afc-ipmi-sw.git,https://ohwr.org/xtca-projects/afc-ipmi-sw,https://ohwr.org/xtca-projects/afc-ipmi-sw/-/blob/afc-timing/README.md,0.0,,0,2019-03-07T17:28:32.088Z,9404,xtca-projects,xtca-projects,group,xtca-projects,,,https://ohwr.org/groups/xtca-projects
11143,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,wrxi,white-rabbit / wrxi,wrxi,white-rabbit/wrxi,2019-02-13T14:41:43.520Z,main,[],[],ssh://git@ohwr.org:7999/white-rabbit/wrxi.git,https://ohwr.org/white-rabbit/wrxi.git,https://ohwr.org/white-rabbit/wrxi,,0.0,,0,2019-02-13T14:41:43.520Z,9352,white-rabbit,white-rabbit,group,white-rabbit,,,https://ohwr.org/groups/white-rabbit
11142,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,wr-switch-testing,white-rabbit / wr-switch-testing,wr-switch-testing,white-rabbit/wr-switch-testing,2019-02-13T14:41:43.238Z,master,[],[],ssh://git@ohwr.org:7999/white-rabbit/wr-switch-testing.git,https://ohwr.org/white-rabbit/wr-switch-testing.git,https://ohwr.org/white-rabbit/wr-switch-testing,https://ohwr.org/white-rabbit/wr-switch-testing/-/blob/master/README,0.0,,0,2019-03-07T17:28:59.070Z,9352,white-rabbit,white-rabbit,group,white-rabbit,,,https://ohwr.org/groups/white-rabbit
11141,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,wr-switch-sw,white-rabbit / wr-switch-sw,wr-switch-sw,white-rabbit/wr-switch-sw,2019-02-13T14:41:42.962Z,HP-tests,[],[],ssh://git@ohwr.org:7999/white-rabbit/wr-switch-sw.git,https://ohwr.org/white-rabbit/wr-switch-sw.git,https://ohwr.org/white-rabbit/wr-switch-sw,https://ohwr.org/white-rabbit/wr-switch-sw/-/blob/HP-tests/README,0.0,,0,2019-03-07T16:52:27.105Z,9352,white-rabbit,white-rabbit,group,white-rabbit,,,https://ohwr.org/groups/white-rabbit
11140,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,wrs-low-jitter,white-rabbit / wr-switch-hw / wrs-low-jitter,wrs-low-jitter,white-rabbit/wr-switch-hw/wrs-low-jitter,2019-02-13T14:41:42.544Z,main,[],[],ssh://git@ohwr.org:7999/white-rabbit/wr-switch-hw/wrs-low-jitter.git,https://ohwr.org/white-rabbit/wr-switch-hw/wrs-low-jitter.git,https://ohwr.org/white-rabbit/wr-switch-hw/wrs-low-jitter,,0.0,,0,2019-02-13T14:41:42.544Z,9403,wr-switch-hw,wr-switch-hw,group,white-rabbit/wr-switch-hw,9352.0,,https://ohwr.org/groups/white-rabbit/wr-switch-hw
11139,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,wrs-ljdprep-hw,white-rabbit / wr-switch-hw / wrs-ljdprep-hw,wrs-ljdprep-hw,white-rabbit/wr-switch-hw/wrs-ljdprep-hw,2019-02-13T14:41:42.180Z,main,[],[],ssh://git@ohwr.org:7999/white-rabbit/wr-switch-hw/wrs-ljdprep-hw.git,https://ohwr.org/white-rabbit/wr-switch-hw/wrs-ljdprep-hw.git,https://ohwr.org/white-rabbit/wr-switch-hw/wrs-ljdprep-hw,,0.0,,0,2019-02-13T14:41:42.180Z,9403,wr-switch-hw,wr-switch-hw,group,white-rabbit/wr-switch-hw,9352.0,,https://ohwr.org/groups/white-rabbit/wr-switch-hw
11138,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,wrs-fl-hw,white-rabbit / wr-switch-hw / wrs-fl-hw,wrs-fl-hw,white-rabbit/wr-switch-hw/wrs-fl-hw,2019-02-13T14:41:41.864Z,master,[],[],ssh://git@ohwr.org:7999/white-rabbit/wr-switch-hw/wrs-fl-hw.git,https://ohwr.org/white-rabbit/wr-switch-hw/wrs-fl-hw.git,https://ohwr.org/white-rabbit/wr-switch-hw/wrs-fl-hw,,0.0,,0,2019-03-07T17:27:24.885Z,9403,wr-switch-hw,wr-switch-hw,group,white-rabbit/wr-switch-hw,9352.0,,https://ohwr.org/groups/white-rabbit/wr-switch-hw
11137,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,wr-switch-hw-v4,white-rabbit / wr-switch-hw-v4,wr-switch-hw-v4,white-rabbit/wr-switch-hw-v4,2019-02-13T14:41:40.014Z,main,[],[],ssh://git@ohwr.org:7999/white-rabbit/wr-switch-hw-v4.git,https://ohwr.org/white-rabbit/wr-switch-hw-v4.git,https://ohwr.org/white-rabbit/wr-switch-hw-v4,,0.0,,0,2019-02-13T14:41:40.014Z,9352,white-rabbit,white-rabbit,group,white-rabbit,,,https://ohwr.org/groups/white-rabbit
11136,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,wr-std,white-rabbit / wr-std,wr-std,white-rabbit/wr-std,2019-02-13T14:41:39.642Z,master,[],[],ssh://git@ohwr.org:7999/white-rabbit/wr-std.git,https://ohwr.org/white-rabbit/wr-std.git,https://ohwr.org/white-rabbit/wr-std,https://ohwr.org/white-rabbit/wr-std/-/blob/master/README,0.0,,0,2019-03-07T17:28:33.897Z,9352,white-rabbit,white-rabbit,group,white-rabbit,,,https://ohwr.org/groups/white-rabbit
11135,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,wr-starting-kit,white-rabbit / wr-starting-kit,wr-starting-kit,white-rabbit/wr-starting-kit,2019-02-13T14:41:39.301Z,master,[],[],ssh://git@ohwr.org:7999/white-rabbit/wr-starting-kit.git,https://ohwr.org/white-rabbit/wr-starting-kit.git,https://ohwr.org/white-rabbit/wr-starting-kit,https://ohwr.org/white-rabbit/wr-starting-kit/-/blob/master/README,0.0,,0,2019-03-07T17:27:54.050Z,9352,white-rabbit,white-rabbit,group,white-rabbit,,,https://ohwr.org/groups/white-rabbit
11134,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,wrn-robustness,white-rabbit / wrn-robustness,wrn-robustness,white-rabbit/wrn-robustness,2019-02-13T14:41:39.013Z,linear_code,[],[],ssh://git@ohwr.org:7999/white-rabbit/wrn-robustness.git,https://ohwr.org/white-rabbit/wrn-robustness.git,https://ohwr.org/white-rabbit/wrn-robustness,,0.0,,0,2019-03-07T17:27:57.214Z,9352,white-rabbit,white-rabbit,group,white-rabbit,,,https://ohwr.org/groups/white-rabbit
11133,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,wr-nic,white-rabbit / wr-nic,wr-nic,white-rabbit/wr-nic,2019-02-13T14:41:38.661Z,ben-201305,[],[],ssh://git@ohwr.org:7999/white-rabbit/wr-nic.git,https://ohwr.org/white-rabbit/wr-nic.git,https://ohwr.org/white-rabbit/wr-nic,https://ohwr.org/white-rabbit/wr-nic/-/blob/ben-201305/README,0.0,,0,2019-03-07T17:27:12.574Z,9352,white-rabbit,white-rabbit,group,white-rabbit,,,https://ohwr.org/groups/white-rabbit
11132,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,wr-hsr,white-rabbit / wr-hsr,wr-hsr,white-rabbit/wr-hsr,2019-02-13T14:41:38.366Z,master,[],[],ssh://git@ohwr.org:7999/white-rabbit/wr-hsr.git,https://ohwr.org/white-rabbit/wr-hsr.git,https://ohwr.org/white-rabbit/wr-hsr,https://ohwr.org/white-rabbit/wr-hsr/-/blob/master/README,0.0,,0,2019-03-07T17:26:58.706Z,9352,white-rabbit,white-rabbit,group,white-rabbit,,,https://ohwr.org/groups/white-rabbit
11131,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,wr-drf,white-rabbit / wr-drf,wr-drf,white-rabbit/wr-drf,2019-02-13T14:41:38.108Z,main,[],[],ssh://git@ohwr.org:7999/white-rabbit/wr-drf.git,https://ohwr.org/white-rabbit/wr-drf.git,https://ohwr.org/white-rabbit/wr-drf,,0.0,,0,2019-02-13T14:41:38.108Z,9352,white-rabbit,white-rabbit,group,white-rabbit,,,https://ohwr.org/groups/white-rabbit
11130,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,wr-d3s,white-rabbit / wr-d3s,wr-d3s,white-rabbit/wr-d3s,2019-02-13T14:41:37.797Z,demo-2013,[],[],ssh://git@ohwr.org:7999/white-rabbit/wr-d3s.git,https://ohwr.org/white-rabbit/wr-d3s.git,https://ohwr.org/white-rabbit/wr-d3s,https://ohwr.org/white-rabbit/wr-d3s/-/blob/demo-2013/README,0.0,,0,2019-03-07T17:23:36.711Z,9352,white-rabbit,white-rabbit,group,white-rabbit,,,https://ohwr.org/groups/white-rabbit
11129,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,wr-calibration,white-rabbit / wr-calibration,wr-calibration,white-rabbit/wr-calibration,2019-02-13T14:41:37.520Z,Keysight_53230A_Issue,[],[],ssh://git@ohwr.org:7999/white-rabbit/wr-calibration.git,https://ohwr.org/white-rabbit/wr-calibration.git,https://ohwr.org/white-rabbit/wr-calibration,https://ohwr.org/white-rabbit/wr-calibration/-/blob/Keysight_53230A_Issue/README,0.0,,0,2019-03-07T17:29:39.376Z,9352,white-rabbit,white-rabbit,group,white-rabbit,,,https://ohwr.org/groups/white-rabbit
11128,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,tr-pmc,white-rabbit / tr-pmc,tr-pmc,white-rabbit/tr-pmc,2019-02-13T14:41:37.242Z,master,[],[],ssh://git@ohwr.org:7999/white-rabbit/tr-pmc.git,https://ohwr.org/white-rabbit/tr-pmc.git,https://ohwr.org/white-rabbit/tr-pmc,https://ohwr.org/white-rabbit/tr-pmc/-/blob/master/README.md,0.0,,0,2019-03-07T17:29:45.738Z,9352,white-rabbit,white-rabbit,group,white-rabbit,,,https://ohwr.org/groups/white-rabbit
11127,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,tr-amc,white-rabbit / tr-amc,tr-amc,white-rabbit/tr-amc,2019-02-13T14:41:36.962Z,master,[],[],ssh://git@ohwr.org:7999/white-rabbit/tr-amc.git,https://ohwr.org/white-rabbit/tr-amc.git,https://ohwr.org/white-rabbit/tr-amc,https://ohwr.org/white-rabbit/tr-amc/-/blob/master/README,0.0,,0,2019-03-07T17:27:52.203Z,9352,white-rabbit,white-rabbit,group,white-rabbit,,,https://ohwr.org/groups/white-rabbit
11126,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,ptp-noposix,white-rabbit / ppsi / ptp-noposix,ptp-noposix,white-rabbit/ppsi/ptp-noposix,2019-02-13T14:41:36.667Z,holdover-hack,[],[],ssh://git@ohwr.org:7999/white-rabbit/ppsi/ptp-noposix.git,https://ohwr.org/white-rabbit/ppsi/ptp-noposix.git,https://ohwr.org/white-rabbit/ppsi/ptp-noposix,https://ohwr.org/white-rabbit/ppsi/ptp-noposix/-/blob/holdover-hack/README,0.0,,0,2019-03-07T17:27:40.295Z,9402,ppsi,ppsi,group,white-rabbit/ppsi,9352.0,,https://ohwr.org/groups/white-rabbit/ppsi
11124,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,maroc_csa,white-rabbit / maroc_csa,maroc_csa,white-rabbit/maroc_csa,2019-02-13T14:40:12.090Z,master,[],[],ssh://git@ohwr.org:7999/white-rabbit/maroc_csa.git,https://ohwr.org/white-rabbit/maroc_csa.git,https://ohwr.org/white-rabbit/maroc_csa,,0.0,,0,2019-03-07T17:28:45.594Z,9352,white-rabbit,white-rabbit,group,white-rabbit,,,https://ohwr.org/groups/white-rabbit
11123,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,list,white-rabbit / list,list,white-rabbit/list,2019-02-13T14:40:11.822Z,master,[],[],ssh://git@ohwr.org:7999/white-rabbit/list.git,https://ohwr.org/white-rabbit/list.git,https://ohwr.org/white-rabbit/list,https://ohwr.org/white-rabbit/list/-/blob/master/README.md,0.0,,0,2019-03-07T17:23:43.333Z,9352,white-rabbit,white-rabbit,group,white-rabbit,,,https://ohwr.org/groups/white-rabbit
11122,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,gsi-timing-starter-kit,white-rabbit / gsi-timing-starter-kit,gsi-timing-starter-kit,white-rabbit/gsi-timing-starter-kit,2019-02-13T14:40:11.561Z,master,[],[],ssh://git@ohwr.org:7999/white-rabbit/gsi-timing-starter-kit.git,https://ohwr.org/white-rabbit/gsi-timing-starter-kit.git,https://ohwr.org/white-rabbit/gsi-timing-starter-kit,,0.0,,0,2019-03-07T17:23:44.663Z,9352,white-rabbit,white-rabbit,group,white-rabbit,,,https://ohwr.org/groups/white-rabbit
11121,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,cute-wr,white-rabbit / cute-wr,cute-wr,white-rabbit/cute-wr,2019-02-13T14:40:11.281Z,cute-test,[],[],ssh://git@ohwr.org:7999/white-rabbit/cute-wr.git,https://ohwr.org/white-rabbit/cute-wr.git,https://ohwr.org/white-rabbit/cute-wr,https://ohwr.org/white-rabbit/cute-wr/-/blob/cute-test/README.md,0.0,,0,2019-03-07T17:27:14.069Z,9352,white-rabbit,white-rabbit,group,white-rabbit,,,https://ohwr.org/groups/white-rabbit
11120,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,cute-wr-dp,white-rabbit / cute-wr-dp,cute-wr-dp,white-rabbit/cute-wr-dp,2019-02-13T14:40:10.999Z,master,[],[],ssh://git@ohwr.org:7999/white-rabbit/cute-wr-dp.git,https://ohwr.org/white-rabbit/cute-wr-dp.git,https://ohwr.org/white-rabbit/cute-wr-dp,,0.0,,0,2019-03-07T17:28:08.164Z,9352,white-rabbit,white-rabbit,group,white-rabbit,,,https://ohwr.org/groups/white-rabbit
11119,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,crio-wr,white-rabbit / crio-wr,crio-wr,white-rabbit/crio-wr,2019-02-13T14:40:10.730Z,dlamprid-PMU_devel,[],[],ssh://git@ohwr.org:7999/white-rabbit/crio-wr.git,https://ohwr.org/white-rabbit/crio-wr.git,https://ohwr.org/white-rabbit/crio-wr,,0.0,,0,2019-03-07T17:27:34.083Z,9352,white-rabbit,white-rabbit,group,white-rabbit,,,https://ohwr.org/groups/white-rabbit
11117,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,usb-relay-box1,usb-projects / usb-relay-box1,usb-relay-box1,usb-projects/usb-relay-box1,2019-02-13T14:40:10.035Z,2.6.38-11-generic,[],[],ssh://git@ohwr.org:7999/usb-projects/usb-relay-box1.git,https://ohwr.org/usb-projects/usb-relay-box1.git,https://ohwr.org/usb-projects/usb-relay-box1,,0.0,,0,2019-03-07T17:28:06.202Z,9401,usb-projects,usb-projects,group,usb-projects,,,https://ohwr.org/groups/usb-projects
11116,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,usb-adc2k12b4ch-dac2k10b2ch-dio8ch,usb-projects / usb-adc2k12b4ch-dac2k10b2ch-dio8ch,usb-adc2k12b4ch-dac2k10b2ch-dio8ch,usb-projects/usb-adc2k12b4ch-dac2k10b2ch-dio8ch,2019-02-13T14:40:09.750Z,main,[],[],ssh://git@ohwr.org:7999/usb-projects/usb-adc2k12b4ch-dac2k10b2ch-dio8ch.git,https://ohwr.org/usb-projects/usb-adc2k12b4ch-dac2k10b2ch-dio8ch.git,https://ohwr.org/usb-projects/usb-adc2k12b4ch-dac2k10b2ch-dio8ch,,0.0,,0,2019-02-13T14:40:09.750Z,9401,usb-projects,usb-projects,group,usb-projects,,,https://ohwr.org/groups/usb-projects
11115,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,libsfp,sfp / sfp-plus-i2c / libsfp,libsfp,sfp/sfp-plus-i2c/libsfp,2019-02-13T14:40:09.210Z,main,[],[],ssh://git@ohwr.org:7999/sfp/sfp-plus-i2c/libsfp.git,https://ohwr.org/sfp/sfp-plus-i2c/libsfp.git,https://ohwr.org/sfp/sfp-plus-i2c/libsfp,,0.0,,0,2019-02-13T14:40:09.210Z,9400,sfp-plus-i2c,sfp-plus-i2c,group,sfp/sfp-plus-i2c,9399.0,,https://ohwr.org/groups/sfp/sfp-plus-i2c
11114,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,radtol-led-psu,rad-tol-projects / radtol-led-psu,radtol-led-psu,rad-tol-projects/radtol-led-psu,2019-02-13T14:40:08.577Z,main,[],[],ssh://git@ohwr.org:7999/rad-tol-projects/radtol-led-psu.git,https://ohwr.org/rad-tol-projects/radtol-led-psu.git,https://ohwr.org/rad-tol-projects/radtol-led-psu,,0.0,,0,2019-02-13T14:40:08.577Z,9398,rad-tol-projects,rad-tol-projects,group,rad-tol-projects,,,https://ohwr.org/groups/rad-tol-projects
11113,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,radtol-led-luminaire,rad-tol-projects / radtol-led-luminaire,radtol-led-luminaire,rad-tol-projects/radtol-led-luminaire,2019-02-13T14:40:08.307Z,main,[],[],ssh://git@ohwr.org:7999/rad-tol-projects/radtol-led-luminaire.git,https://ohwr.org/rad-tol-projects/radtol-led-luminaire.git,https://ohwr.org/rad-tol-projects/radtol-led-luminaire,,0.0,,0,2019-02-13T14:40:08.307Z,9398,rad-tol-projects,rad-tol-projects,group,rad-tol-projects,,,https://ohwr.org/groups/rad-tol-projects
11112,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,rf-mux-8ch,rack-19 / rf-mux-8ch,rf-mux-8ch,rack-19/rf-mux-8ch,2019-02-13T14:40:07.836Z,master,[],[],ssh://git@ohwr.org:7999/rack-19/rf-mux-8ch.git,https://ohwr.org/rack-19/rf-mux-8ch.git,https://ohwr.org/rack-19/rf-mux-8ch,https://ohwr.org/rack-19/rf-mux-8ch/-/blob/master/README.txt,0.0,,0,2019-03-07T17:27:31.351Z,9395,rack-19,rack-19,group,rack-19,,,https://ohwr.org/groups/rack-19
11111,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,fpb,rack-19 / r19-tdc-del-a / fpb,fpb,rack-19/r19-tdc-del-a/fpb,2019-02-13T14:40:07.516Z,main,[],[],ssh://git@ohwr.org:7999/rack-19/r19-tdc-del-a/fpb.git,https://ohwr.org/rack-19/r19-tdc-del-a/fpb.git,https://ohwr.org/rack-19/r19-tdc-del-a/fpb,,0.0,,0,2019-02-13T14:40:07.516Z,9397,r19-tdc-del-a,r19-tdc-del-a,group,rack-19/r19-tdc-del-a,9395.0,,https://ohwr.org/groups/rack-19/r19-tdc-del-a
11110,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,pda-8ch-fda-8ch,rack-19 / pda-8ch-fda-8ch,pda-8ch-fda-8ch,rack-19/pda-8ch-fda-8ch,2019-02-13T14:40:07.000Z,master,[],[],ssh://git@ohwr.org:7999/rack-19/pda-8ch-fda-8ch.git,https://ohwr.org/rack-19/pda-8ch-fda-8ch.git,https://ohwr.org/rack-19/pda-8ch-fda-8ch,https://ohwr.org/rack-19/pda-8ch-fda-8ch/-/blob/master/readme.txt,0.0,,0,2019-03-07T17:27:15.387Z,9395,rack-19,rack-19,group,rack-19,,,https://ohwr.org/groups/rack-19
11109,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,pandabox-tst,rack-19 / pandabox / pandabox-tst,pandabox-tst,rack-19/pandabox/pandabox-tst,2019-02-13T14:40:06.719Z,main,[],[],ssh://git@ohwr.org:7999/rack-19/pandabox/pandabox-tst.git,https://ohwr.org/rack-19/pandabox/pandabox-tst.git,https://ohwr.org/rack-19/pandabox/pandabox-tst,,0.0,,0,2019-02-13T14:40:06.719Z,9396,pandabox,pandabox,group,rack-19/pandabox,9395.0,,https://ohwr.org/groups/rack-19/pandabox
11108,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,pandabox-sw,rack-19 / pandabox / pandabox-sw,pandabox-sw,rack-19/pandabox/pandabox-sw,2019-02-13T14:40:06.381Z,main,[],[],ssh://git@ohwr.org:7999/rack-19/pandabox/pandabox-sw.git,https://ohwr.org/rack-19/pandabox/pandabox-sw.git,https://ohwr.org/rack-19/pandabox/pandabox-sw,,0.0,,0,2019-02-13T14:40:06.381Z,9396,pandabox,pandabox,group,rack-19/pandabox,9395.0,,https://ohwr.org/groups/rack-19/pandabox
11107,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,pandabox-hw,rack-19 / pandabox / pandabox-hw,pandabox-hw,rack-19/pandabox/pandabox-hw,2019-02-13T14:40:06.075Z,main,[],[],ssh://git@ohwr.org:7999/rack-19/pandabox/pandabox-hw.git,https://ohwr.org/rack-19/pandabox/pandabox-hw.git,https://ohwr.org/rack-19/pandabox/pandabox-hw,,0.0,,0,2019-02-13T14:40:06.075Z,9396,pandabox,pandabox,group,rack-19/pandabox,9395.0,,https://ohwr.org/groups/rack-19/pandabox
11106,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,pandabox-gw,rack-19 / pandabox / pandabox-gw,pandabox-gw,rack-19/pandabox/pandabox-gw,2019-02-13T14:40:05.723Z,main,[],[],ssh://git@ohwr.org:7999/rack-19/pandabox/pandabox-gw.git,https://ohwr.org/rack-19/pandabox/pandabox-gw.git,https://ohwr.org/rack-19/pandabox/pandabox-gw,,0.0,,0,2019-02-13T14:40:05.723Z,9396,pandabox,pandabox,group,rack-19/pandabox,9395.0,,https://ohwr.org/groups/rack-19/pandabox
11105,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,eez-psu,rack-19 / eez-psu,eez-psu,rack-19/eez-psu,2019-02-13T14:40:05.246Z,main,[],[],ssh://git@ohwr.org:7999/rack-19/eez-psu.git,https://ohwr.org/rack-19/eez-psu.git,https://ohwr.org/rack-19/eez-psu,,0.0,,0,2019-02-13T14:40:05.246Z,9395,rack-19,rack-19,group,rack-19,,,https://ohwr.org/groups/rack-19
11104,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,mrpc-25x18-24strip,p-det / mrpc-25x18-24strip,mrpc-25x18-24strip,p-det/mrpc-25x18-24strip,2019-02-13T14:40:04.847Z,master,[],[],ssh://git@ohwr.org:7999/p-det/mrpc-25x18-24strip.git,https://ohwr.org/p-det/mrpc-25x18-24strip.git,https://ohwr.org/p-det/mrpc-25x18-24strip,,0.0,,0,2019-03-07T17:28:21.819Z,9394,p-det,p-det,group,p-det,,,https://ohwr.org/groups/p-det
11103,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,ohr-deploy,ohr-support / ohr-deploy,ohr-deploy,ohr-support/ohr-deploy,2019-02-13T14:40:04.431Z,master,[],[],ssh://git@ohwr.org:7999/ohr-support/ohr-deploy.git,https://ohwr.org/ohr-support/ohr-deploy.git,https://ohwr.org/ohr-support/ohr-deploy,https://ohwr.org/ohr-support/ohr-deploy/-/blob/master/Readme,0.0,,0,2019-03-07T17:27:58.627Z,9393,ohr-support,ohr-support,group,ohr-support,,,https://ohwr.org/groups/ohr-support
11102,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,fmc-delay-1ns-8cha-sa,oh-applications / fmc-delay-1ns-8cha-sa,fmc-delay-1ns-8cha-sa,oh-applications/fmc-delay-1ns-8cha-sa,2019-02-13T14:40:04.011Z,master,[],[],ssh://git@ohwr.org:7999/oh-applications/fmc-delay-1ns-8cha-sa.git,https://ohwr.org/oh-applications/fmc-delay-1ns-8cha-sa.git,https://ohwr.org/oh-applications/fmc-delay-1ns-8cha-sa,https://ohwr.org/oh-applications/fmc-delay-1ns-8cha-sa/-/blob/master/README,0.0,,0,2019-03-07T17:28:15.896Z,9392,oh-applications,oh-applications,group,oh-applications,,,https://ohwr.org/groups/oh-applications
11101,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,zio,misc / zio,zio,misc/zio,2019-02-13T14:40:03.589Z,master,[],[],ssh://git@ohwr.org:7999/misc/zio.git,https://ohwr.org/misc/zio.git,https://ohwr.org/misc/zio,https://ohwr.org/misc/zio/-/blob/master/README,0.0,,0,2019-03-07T17:28:12.976Z,9391,misc,misc,group,misc,,,https://ohwr.org/groups/misc
11100,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,vhdl-style,misc / vhdl-style,vhdl-style,misc/vhdl-style,2019-02-13T14:40:03.296Z,master,[],[],ssh://git@ohwr.org:7999/misc/vhdl-style.git,https://ohwr.org/misc/vhdl-style.git,https://ohwr.org/misc/vhdl-style,https://ohwr.org/misc/vhdl-style/-/blob/master/README,0.0,,0,2019-03-07T17:27:01.272Z,9391,misc,misc,group,misc,,,https://ohwr.org/groups/misc
11099,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,soft-cpu-toolchains,misc / soft-cpu-toolchains,soft-cpu-toolchains,misc/soft-cpu-toolchains,2019-02-13T14:40:03.029Z,adam-riscv,[],[],ssh://git@ohwr.org:7999/misc/soft-cpu-toolchains.git,https://ohwr.org/misc/soft-cpu-toolchains.git,https://ohwr.org/misc/soft-cpu-toolchains,,0.0,,0,2019-03-07T17:29:41.291Z,9391,misc,misc,group,misc,,,https://ohwr.org/groups/misc
11098,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,sdb,misc / sdb,sdb,misc/sdb,2019-02-13T14:40:02.457Z,devfede,[],[],ssh://git@ohwr.org:7999/misc/sdb.git,https://ohwr.org/misc/sdb.git,https://ohwr.org/misc/sdb,https://ohwr.org/misc/sdb/-/blob/devfede/README,0.0,,0,2019-03-07T17:27:36.727Z,9391,misc,misc,group,misc,,,https://ohwr.org/groups/misc
11097,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,pts,misc / pts,pts,misc/pts,2019-02-13T14:40:02.195Z,common_modules,[],[],ssh://git@ohwr.org:7999/misc/pts.git,https://ohwr.org/misc/pts.git,https://ohwr.org/misc/pts,https://ohwr.org/misc/pts/-/blob/common_modules/README,0.0,,0,2019-03-07T17:28:37.212Z,9391,misc,misc,group,misc,,,https://ohwr.org/groups/misc
11096,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,pts-base,misc / pts-base,pts-base,misc/pts-base,2019-02-13T14:40:01.841Z,dlamprid-dev,[],[],ssh://git@ohwr.org:7999/misc/pts-base.git,https://ohwr.org/misc/pts-base.git,https://ohwr.org/misc/pts-base,https://ohwr.org/misc/pts-base/-/blob/dlamprid-dev/README,0.0,,0,2019-03-07T17:28:17.283Z,9391,misc,misc,group,misc,,,https://ohwr.org/groups/misc
11095,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,pmtlib,misc / pmtlib,pmtlib,misc/pmtlib,2019-02-13T14:40:01.441Z,master,[],[],ssh://git@ohwr.org:7999/misc/pmtlib.git,https://ohwr.org/misc/pmtlib.git,https://ohwr.org/misc/pmtlib,https://ohwr.org/misc/pmtlib/-/blob/master/README,0.0,,0,2019-03-07T17:12:28.239Z,9391,misc,misc,group,misc,,,https://ohwr.org/groups/misc
11094,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,panda,misc / panda,panda,misc/panda,2019-02-13T14:40:01.039Z,master,[],[],ssh://git@ohwr.org:7999/misc/panda.git,https://ohwr.org/misc/panda.git,https://ohwr.org/misc/panda,https://ohwr.org/misc/panda/-/blob/master/README,0.0,,0,2019-03-07T17:28:30.147Z,9391,misc,misc,group,misc,,,https://ohwr.org/groups/misc
11093,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,libre-fdatool,misc / libre-fdatool,libre-fdatool,misc/libre-fdatool,2019-02-13T14:40:00.746Z,master,[],[],ssh://git@ohwr.org:7999/misc/libre-fdatool.git,https://ohwr.org/misc/libre-fdatool.git,https://ohwr.org/misc/libre-fdatool,,0.0,,0,2019-03-07T17:28:43.905Z,9391,misc,misc,group,misc,,,https://ohwr.org/groups/misc
11092,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,hdl-make,misc / hdl-make,hdl-make,misc/hdl-make,2019-02-13T14:40:00.473Z,dag-solver,[],[],ssh://git@ohwr.org:7999/misc/hdl-make.git,https://ohwr.org/misc/hdl-make.git,https://ohwr.org/misc/hdl-make,,0.0,,0,2019-03-07T17:29:00.545Z,9391,misc,misc,group,misc,,,https://ohwr.org/groups/misc
11091,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,gts,misc / gts,gts,misc/gts,2019-02-13T14:40:00.211Z,main,[],[],ssh://git@ohwr.org:7999/misc/gts.git,https://ohwr.org/misc/gts.git,https://ohwr.org/misc/gts,,0.0,,0,2019-02-13T14:40:00.211Z,9391,misc,misc,group,misc,,,https://ohwr.org/groups/misc
11090,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,epics-wb,misc / epics-wb,epics-wb,misc/epics-wb,2019-02-13T14:39:59.900Z,epics-make,[],[],ssh://git@ohwr.org:7999/misc/epics-wb.git,https://ohwr.org/misc/epics-wb.git,https://ohwr.org/misc/epics-wb,https://ohwr.org/misc/epics-wb/-/blob/epics-make/README.md,0.0,,0,2019-03-07T17:29:51.374Z,9391,misc,misc,group,misc,,,https://ohwr.org/groups/misc
11089,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,embedded-linux,misc / embedded-linux,embedded-linux,misc/embedded-linux,2019-02-13T14:39:59.611Z,main,[],[],ssh://git@ohwr.org:7999/misc/embedded-linux.git,https://ohwr.org/misc/embedded-linux.git,https://ohwr.org/misc/embedded-linux,,0.0,,0,2019-02-13T14:39:59.611Z,9391,misc,misc,group,misc,,,https://ohwr.org/groups/misc
11088,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,ed,misc / ed,ed,misc/ed,2019-02-13T14:39:59.306Z,main,[],[],ssh://git@ohwr.org:7999/misc/ed.git,https://ohwr.org/misc/ed.git,https://ohwr.org/misc/ed,,0.0,,0,2019-02-13T14:39:59.306Z,9391,misc,misc,group,misc,,,https://ohwr.org/groups/misc
11087,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,adc-testing,misc / adc-testing,adc-testing,misc/adc-testing,2019-02-13T14:39:59.012Z,dlamprid-dev,[],[],ssh://git@ohwr.org:7999/misc/adc-testing.git,https://ohwr.org/misc/adc-testing.git,https://ohwr.org/misc/adc-testing,,0.0,,0,2019-03-07T17:27:11.235Z,9391,misc,misc,group,misc,,,https://ohwr.org/groups/misc
11086,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,adc-lib,misc / adc-lib,adc-lib,misc/adc-lib,2019-02-13T14:39:58.744Z,develop,[],[],ssh://git@ohwr.org:7999/misc/adc-lib.git,https://ohwr.org/misc/adc-lib.git,https://ohwr.org/misc/adc-lib,,0.0,,0,2019-03-07T17:28:40.132Z,9391,misc,misc,group,misc,,,https://ohwr.org/groups/misc
11085,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,fr_pcb_mm,machines-tools / fr_pcb_mm,fr_pcb_mm,machines-tools/fr_pcb_mm,2019-02-13T14:39:58.302Z,master,[],[],ssh://git@ohwr.org:7999/machines-tools/fr_pcb_mm.git,https://ohwr.org/machines-tools/fr_pcb_mm.git,https://ohwr.org/machines-tools/fr_pcb_mm,https://ohwr.org/machines-tools/fr_pcb_mm/-/blob/master/README.md,0.0,,0,2019-03-07T17:28:02.117Z,9390,machines-tools,machines-tools,group,machines-tools,,,https://ohwr.org/groups/machines-tools
11084,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,conv-ttl-rs485-tst,level-conversion / conv-ttl-rs485 / conv-ttl-rs485-tst,conv-ttl-rs485-tst,level-conversion/conv-ttl-rs485/conv-ttl-rs485-tst,2019-02-13T14:39:57.850Z,DB-dev,[],[],ssh://git@ohwr.org:7999/level-conversion/conv-ttl-rs485/conv-ttl-rs485-tst.git,https://ohwr.org/level-conversion/conv-ttl-rs485/conv-ttl-rs485-tst.git,https://ohwr.org/level-conversion/conv-ttl-rs485/conv-ttl-rs485-tst,https://ohwr.org/level-conversion/conv-ttl-rs485/conv-ttl-rs485-tst/-/blob/DB-dev/README,0.0,,0,2019-03-07T17:29:42.769Z,9389,conv-ttl-rs485,conv-ttl-rs485,group,level-conversion/conv-ttl-rs485,9387.0,,https://ohwr.org/groups/level-conversion/conv-ttl-rs485
11083,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,conv-ttl-rs485-hw,level-conversion / conv-ttl-rs485 / conv-ttl-rs485-hw,conv-ttl-rs485-hw,level-conversion/conv-ttl-rs485/conv-ttl-rs485-hw,2019-02-13T14:39:57.546Z,hw-v4,[],[],ssh://git@ohwr.org:7999/level-conversion/conv-ttl-rs485/conv-ttl-rs485-hw.git,https://ohwr.org/level-conversion/conv-ttl-rs485/conv-ttl-rs485-hw.git,https://ohwr.org/level-conversion/conv-ttl-rs485/conv-ttl-rs485-hw,https://ohwr.org/level-conversion/conv-ttl-rs485/conv-ttl-rs485-hw/-/blob/hw-v4/README,0.0,,0,2019-03-07T17:28:14.456Z,9389,conv-ttl-rs485,conv-ttl-rs485,group,level-conversion/conv-ttl-rs485,9387.0,,https://ohwr.org/groups/level-conversion/conv-ttl-rs485
11082,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,conv-ttl-rs485-gw,level-conversion / conv-ttl-rs485 / conv-ttl-rs485-gw,conv-ttl-rs485-gw,level-conversion/conv-ttl-rs485/conv-ttl-rs485-gw,2019-02-13T14:39:57.195Z,DB-Modified-ucf-opticalRTM-test,[],[],ssh://git@ohwr.org:7999/level-conversion/conv-ttl-rs485/conv-ttl-rs485-gw.git,https://ohwr.org/level-conversion/conv-ttl-rs485/conv-ttl-rs485-gw.git,https://ohwr.org/level-conversion/conv-ttl-rs485/conv-ttl-rs485-gw,,0.0,,0,2019-03-07T17:29:35.294Z,9389,conv-ttl-rs485,conv-ttl-rs485,group,level-conversion/conv-ttl-rs485,9387.0,,https://ohwr.org/groups/level-conversion/conv-ttl-rs485
11081,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,conv-ttl-blo-tst,level-conversion / conv-ttl-blo / conv-ttl-blo-tst,conv-ttl-blo-tst,level-conversion/conv-ttl-blo/conv-ttl-blo-tst,2019-02-13T14:39:56.598Z,denia-dev,[],[],ssh://git@ohwr.org:7999/level-conversion/conv-ttl-blo/conv-ttl-blo-tst.git,https://ohwr.org/level-conversion/conv-ttl-blo/conv-ttl-blo-tst.git,https://ohwr.org/level-conversion/conv-ttl-blo/conv-ttl-blo-tst,https://ohwr.org/level-conversion/conv-ttl-blo/conv-ttl-blo-tst/-/blob/denia-dev/README,0.0,,0,2019-03-07T17:27:20.393Z,9388,conv-ttl-blo,conv-ttl-blo,group,level-conversion/conv-ttl-blo,9387.0,,https://ohwr.org/groups/level-conversion/conv-ttl-blo
11080,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,conv-ttl-blo-hw,level-conversion / conv-ttl-blo / conv-ttl-blo-hw,conv-ttl-blo-hw,level-conversion/conv-ttl-blo/conv-ttl-blo-hw,2019-02-13T14:39:56.262Z,hw-v4,[],[],ssh://git@ohwr.org:7999/level-conversion/conv-ttl-blo/conv-ttl-blo-hw.git,https://ohwr.org/level-conversion/conv-ttl-blo/conv-ttl-blo-hw.git,https://ohwr.org/level-conversion/conv-ttl-blo/conv-ttl-blo-hw,https://ohwr.org/level-conversion/conv-ttl-blo/conv-ttl-blo-hw/-/blob/hw-v4/README,0.0,,0,2019-03-07T17:28:11.092Z,9388,conv-ttl-blo,conv-ttl-blo,group,level-conversion/conv-ttl-blo,9387.0,,https://ohwr.org/groups/level-conversion/conv-ttl-blo
11079,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,conv-ttl-blo-gw,level-conversion / conv-ttl-blo / conv-ttl-blo-gw,conv-ttl-blo-gw,level-conversion/conv-ttl-blo/conv-ttl-blo-gw,2019-02-13T14:39:55.850Z,db-release-41,[],[],ssh://git@ohwr.org:7999/level-conversion/conv-ttl-blo/conv-ttl-blo-gw.git,https://ohwr.org/level-conversion/conv-ttl-blo/conv-ttl-blo-gw.git,https://ohwr.org/level-conversion/conv-ttl-blo/conv-ttl-blo-gw,,0.0,,0,2019-03-07T17:29:03.181Z,9388,conv-ttl-blo,conv-ttl-blo,group,level-conversion/conv-ttl-blo,9387.0,,https://ohwr.org/groups/level-conversion/conv-ttl-blo
11078,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,conv-diff-se-cable-driver,level-conversion / conv-diff-se-cable-driver,conv-diff-se-cable-driver,level-conversion/conv-diff-se-cable-driver,2019-02-13T14:39:55.375Z,master,[],[],ssh://git@ohwr.org:7999/level-conversion/conv-diff-se-cable-driver.git,https://ohwr.org/level-conversion/conv-diff-se-cable-driver.git,https://ohwr.org/level-conversion/conv-diff-se-cable-driver,,0.0,,0,2019-03-07T17:26:59.998Z,9387,level-conversion,level-conversion,group,level-conversion,,,https://ohwr.org/groups/level-conversion
11077,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,conv-common-gw,level-conversion / conv-common-gw,conv-common-gw,level-conversion/conv-common-gw,2019-02-13T14:39:55.009Z,DB-rs485-integration,[],[],ssh://git@ohwr.org:7999/level-conversion/conv-common-gw.git,https://ohwr.org/level-conversion/conv-common-gw.git,https://ohwr.org/level-conversion/conv-common-gw,https://ohwr.org/level-conversion/conv-common-gw/-/blob/DB-rs485-integration/README,0.0,,0,2019-03-07T17:28:26.861Z,9387,level-conversion,level-conversion,group,level-conversion,,,https://ohwr.org/groups/level-conversion
11076,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,wrpc-sw,hdl-core-lib / wr-cores / wrpc-sw,wrpc-sw,hdl-core-lib/wr-cores/wrpc-sw,2019-02-13T14:39:54.419Z,ML-ISPCS-tests-151006,[],[],ssh://git@ohwr.org:7999/hdl-core-lib/wr-cores/wrpc-sw.git,https://ohwr.org/hdl-core-lib/wr-cores/wrpc-sw.git,https://ohwr.org/hdl-core-lib/wr-cores/wrpc-sw,,0.0,,0,2019-03-07T17:28:23.290Z,9386,wr-cores,wr-cores,group,hdl-core-lib/wr-cores,9383.0,,https://ohwr.org/groups/hdl-core-lib/wr-cores
11074,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,wishbone-gen,hdl-core-lib / wishbone-gen,wishbone-gen,hdl-core-lib/wishbone-gen,2019-02-13T14:38:31.176Z,epics-wb,[],[],ssh://git@ohwr.org:7999/hdl-core-lib/wishbone-gen.git,https://ohwr.org/hdl-core-lib/wishbone-gen.git,https://ohwr.org/hdl-core-lib/wishbone-gen,https://ohwr.org/hdl-core-lib/wishbone-gen/-/blob/epics-wb/README,0.0,,0,2019-03-07T17:27:07.126Z,9383,hdl-core-lib,hdl-core-lib,group,hdl-core-lib,,,https://ohwr.org/groups/hdl-core-lib
11071,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,urv-core,hdl-core-lib / urv-core,urv-core,hdl-core-lib/urv-core,2019-02-13T14:37:04.782Z,master,[],[],ssh://git@ohwr.org:7999/hdl-core-lib/urv-core.git,https://ohwr.org/hdl-core-lib/urv-core.git,https://ohwr.org/hdl-core-lib/urv-core,,0.0,,0,2019-03-07T17:28:20.007Z,9383,hdl-core-lib,hdl-core-lib,group,hdl-core-lib,,,https://ohwr.org/groups/hdl-core-lib
11070,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,tdc-core,hdl-core-lib / tdc-core,tdc-core,hdl-core-lib/tdc-core,2019-02-13T14:37:04.502Z,master,[],[],ssh://git@ohwr.org:7999/hdl-core-lib/tdc-core.git,https://ohwr.org/hdl-core-lib/tdc-core.git,https://ohwr.org/hdl-core-lib/tdc-core,https://ohwr.org/hdl-core-lib/tdc-core/-/blob/master/README,0.0,,0,2019-03-07T17:23:41.536Z,9383,hdl-core-lib,hdl-core-lib,group,hdl-core-lib,,,https://ohwr.org/groups/hdl-core-lib
11069,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,pcie-vme-bridge,hdl-core-lib / pcie-vme-bridge,pcie-vme-bridge,hdl-core-lib/pcie-vme-bridge,2019-02-13T14:37:04.216Z,greg-ci,[],[],ssh://git@ohwr.org:7999/hdl-core-lib/pcie-vme-bridge.git,https://ohwr.org/hdl-core-lib/pcie-vme-bridge.git,https://ohwr.org/hdl-core-lib/pcie-vme-bridge,https://ohwr.org/hdl-core-lib/pcie-vme-bridge/-/blob/greg-ci/README.md,0.0,,0,2019-03-07T17:28:18.609Z,9383,hdl-core-lib,hdl-core-lib,group,hdl-core-lib,,,https://ohwr.org/groups/hdl-core-lib
11068,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,pci-core,hdl-core-lib / pci-core,pci-core,hdl-core-lib/pci-core,2019-02-13T14:37:03.934Z,cores_pci_dusan,[],[],ssh://git@ohwr.org:7999/hdl-core-lib/pci-core.git,https://ohwr.org/hdl-core-lib/pci-core.git,https://ohwr.org/hdl-core-lib/pci-core,,0.0,,0,2019-03-07T17:29:49.069Z,9383,hdl-core-lib,hdl-core-lib,group,hdl-core-lib,,,https://ohwr.org/groups/hdl-core-lib
11067,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,mock-turtle,hdl-core-lib / mock-turtle,mock-turtle,hdl-core-lib/mock-turtle,2019-02-13T14:37:03.643Z,develop,[],[],ssh://git@ohwr.org:7999/hdl-core-lib/mock-turtle.git,https://ohwr.org/hdl-core-lib/mock-turtle.git,https://ohwr.org/hdl-core-lib/mock-turtle,https://ohwr.org/hdl-core-lib/mock-turtle/-/blob/develop/README.rst,0.0,,0,2019-03-07T17:28:41.510Z,9383,hdl-core-lib,hdl-core-lib,group,hdl-core-lib,,,https://ohwr.org/groups/hdl-core-lib
11066,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,gn4124-core,hdl-core-lib / gn4124-core,gn4124-core,hdl-core-lib/gn4124-core,2019-02-13T14:37:03.365Z,andrey_fix,[],[],ssh://git@ohwr.org:7999/hdl-core-lib/gn4124-core.git,https://ohwr.org/hdl-core-lib/gn4124-core.git,https://ohwr.org/hdl-core-lib/gn4124-core,,0.0,,0,2019-03-07T17:26:01.955Z,9383,hdl-core-lib,hdl-core-lib,group,hdl-core-lib,,,https://ohwr.org/groups/hdl-core-lib
11065,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,general-cores,hdl-core-lib / general-cores,general-cores,hdl-core-lib/general-cores,2019-02-13T14:37:03.102Z,WR-BTrain-VXS,[],[],ssh://git@ohwr.org:7999/hdl-core-lib/general-cores.git,https://ohwr.org/hdl-core-lib/general-cores.git,https://ohwr.org/hdl-core-lib/general-cores,,0.0,,0,2019-03-07T17:28:25.036Z,9383,hdl-core-lib,hdl-core-lib,group,hdl-core-lib,,,https://ohwr.org/groups/hdl-core-lib
11064,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,fpga-config-space,hdl-core-lib / fpga-config-space,fpga-config-space,hdl-core-lib/fpga-config-space,2019-02-13T14:37:02.827Z,TEMP-k-sdb,[],[],ssh://git@ohwr.org:7999/hdl-core-lib/fpga-config-space.git,https://ohwr.org/hdl-core-lib/fpga-config-space.git,https://ohwr.org/hdl-core-lib/fpga-config-space,https://ohwr.org/hdl-core-lib/fpga-config-space/-/blob/TEMP-k-sdb/README,0.0,,0,2019-03-07T17:27:26.369Z,9383,hdl-core-lib,hdl-core-lib,group,hdl-core-lib,,,https://ohwr.org/groups/hdl-core-lib
11063,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,etherbone-core,hdl-core-lib / etherbone-core,etherbone-core,hdl-core-lib/etherbone-core,2019-02-13T14:37:02.548Z,eb_fec_integration,[],[],ssh://git@ohwr.org:7999/hdl-core-lib/etherbone-core.git,https://ohwr.org/hdl-core-lib/etherbone-core.git,https://ohwr.org/hdl-core-lib/etherbone-core,,0.0,,0,2019-03-07T17:27:19.009Z,9383,hdl-core-lib,hdl-core-lib,group,hdl-core-lib,,,https://ohwr.org/groups/hdl-core-lib
11062,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,ddr3-sp6-core,hdl-core-lib / ddr3-sp6-core,ddr3-sp6-core,hdl-core-lib/ddr3-sp6-core,2019-02-13T14:37:02.283Z,dev_theim,[],[],ssh://git@ohwr.org:7999/hdl-core-lib/ddr3-sp6-core.git,https://ohwr.org/hdl-core-lib/ddr3-sp6-core.git,https://ohwr.org/hdl-core-lib/ddr3-sp6-core,,0.0,,0,2019-03-07T17:28:55.852Z,9383,hdl-core-lib,hdl-core-lib,group,hdl-core-lib,,,https://ohwr.org/groups/hdl-core-lib
11061,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,evo,hdl-core-lib / asyncart / evo,evo,hdl-core-lib/asyncart/evo,2019-02-13T14:37:02.009Z,main,[],[],ssh://git@ohwr.org:7999/hdl-core-lib/asyncart/evo.git,https://ohwr.org/hdl-core-lib/asyncart/evo.git,https://ohwr.org/hdl-core-lib/asyncart/evo,,0.0,,0,2019-02-13T14:37:02.009Z,9384,asyncart,asyncart,group,hdl-core-lib/asyncart,9383.0,,https://ohwr.org/groups/hdl-core-lib/asyncart
11060,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,absenc,hdl-core-lib / absenc,absenc,hdl-core-lib/absenc,2019-02-13T14:37:01.558Z,master,[],[],ssh://git@ohwr.org:7999/hdl-core-lib/absenc.git,https://ohwr.org/hdl-core-lib/absenc.git,https://ohwr.org/hdl-core-lib/absenc,https://ohwr.org/hdl-core-lib/absenc/-/blob/master/README,0.0,,0,2019-03-07T17:29:47.663Z,9383,hdl-core-lib,hdl-core-lib,group,hdl-core-lib,,,https://ohwr.org/groups/hdl-core-lib
11059,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,vfc-hd,fmc-projects / vfc-hd,vfc-hd,fmc-projects/vfc-hd,2019-02-13T14:37:01.113Z,main,[],[],ssh://git@ohwr.org:7999/fmc-projects/vfc-hd.git,https://ohwr.org/fmc-projects/vfc-hd.git,https://ohwr.org/fmc-projects/vfc-hd,,0.0,,0,2019-02-13T14:37:01.113Z,9368,fmc-projects,fmc-projects,group,fmc-projects,,,https://ohwr.org/groups/fmc-projects
11058,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,svec-sw,fmc-projects / svec / svec-sw,svec-sw,fmc-projects/svec/svec-sw,2019-02-13T14:37:00.785Z,aborted-130123,[],[],ssh://git@ohwr.org:7999/fmc-projects/svec/svec-sw.git,https://ohwr.org/fmc-projects/svec/svec-sw.git,https://ohwr.org/fmc-projects/svec/svec-sw,https://ohwr.org/fmc-projects/svec/svec-sw/-/blob/aborted-130123/README,0.0,,0,2019-03-07T17:27:05.784Z,9382,svec,svec,group,fmc-projects/svec,9368.0,,https://ohwr.org/groups/fmc-projects/svec
11057,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,svec-3v3,fmc-projects / svec / svec-3v3,svec-3v3,fmc-projects/svec/svec-3v3,2019-02-13T14:37:00.470Z,master,[],[],ssh://git@ohwr.org:7999/fmc-projects/svec/svec-3v3.git,https://ohwr.org/fmc-projects/svec/svec-3v3.git,https://ohwr.org/fmc-projects/svec/svec-3v3,,0.0,,0,2019-03-07T17:29:04.512Z,9382,svec,svec,group,fmc-projects/svec,9368.0,,https://ohwr.org/groups/fmc-projects/svec
11056,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,spexi,fmc-projects / spexi,spexi,fmc-projects/spexi,2019-02-13T14:36:59.964Z,main,[],[],ssh://git@ohwr.org:7999/fmc-projects/spexi.git,https://ohwr.org/fmc-projects/spexi.git,https://ohwr.org/fmc-projects/spexi,,0.0,,0,2019-02-13T14:36:59.964Z,9368,fmc-projects,fmc-projects,group,fmc-projects,,,https://ohwr.org/groups/fmc-projects
11055,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,spec-ticks,fmc-projects / spec-ticks,spec-ticks,fmc-projects/spec-ticks,2019-02-13T14:36:59.640Z,main,[],[],ssh://git@ohwr.org:7999/fmc-projects/spec-ticks.git,https://ohwr.org/fmc-projects/spec-ticks.git,https://ohwr.org/fmc-projects/spec-ticks,,0.0,,0,2019-02-13T14:36:59.640Z,9368,fmc-projects,fmc-projects,group,fmc-projects,,,https://ohwr.org/groups/fmc-projects
11054,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,spec-sw,fmc-projects / spec / spec-sw,spec-sw,fmc-projects/spec/spec-sw,2019-02-13T14:36:59.330Z,ML-tmp-btrain-tools,[],[],ssh://git@ohwr.org:7999/fmc-projects/spec/spec-sw.git,https://ohwr.org/fmc-projects/spec/spec-sw.git,https://ohwr.org/fmc-projects/spec/spec-sw,,0.0,,0,2019-03-07T17:27:09.883Z,9379,spec,spec,group,fmc-projects/spec,9368.0,,https://ohwr.org/groups/fmc-projects/spec
11053,,spec-stress-test,fmc-projects / spec / spec-getting-started / spec-stress-test,spec-stress-test,fmc-projects/spec/spec-getting-started/spec-stress-test,2019-02-13T14:36:42.963Z,main,[],[],ssh://git@ohwr.org:7999/fmc-projects/spec/spec-getting-started/spec-stress-test.git,https://ohwr.org/fmc-projects/spec/spec-getting-started/spec-stress-test.git,https://ohwr.org/fmc-projects/spec/spec-getting-started/spec-stress-test,,0.0,,0,2019-02-13T14:36:42.963Z,9380,spec-getting-started,spec-getting-started,group,fmc-projects/spec/spec-getting-started,9379.0,,https://ohwr.org/groups/fmc-projects/spec/spec-getting-started
11052,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,meta-spec,fmc-projects / spec / spec-getting-started / meta-spec,meta-spec,fmc-projects/spec/spec-getting-started/meta-spec,2019-02-13T14:32:10.266Z,main,[],[],ssh://git@ohwr.org:7999/fmc-projects/spec/spec-getting-started/meta-spec.git,https://ohwr.org/fmc-projects/spec/spec-getting-started/meta-spec.git,https://ohwr.org/fmc-projects/spec/spec-getting-started/meta-spec,,0.0,,0,2019-02-13T14:32:10.266Z,9380,spec-getting-started,spec-getting-started,group,fmc-projects/spec/spec-getting-started,9379.0,,https://ohwr.org/groups/fmc-projects/spec/spec-getting-started
11051,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,lpcfmc12pexp,fmc-projects / lpcfmc12pexp,lpcfmc12pexp,fmc-projects/lpcfmc12pexp,2019-02-13T14:32:09.648Z,main,[],[],ssh://git@ohwr.org:7999/fmc-projects/lpcfmc12pexp.git,https://ohwr.org/fmc-projects/lpcfmc12pexp.git,https://ohwr.org/fmc-projects/lpcfmc12pexp,,0.0,,0,2019-02-13T14:32:09.648Z,9368,fmc-projects,fmc-projects,group,fmc-projects,,,https://ohwr.org/groups/fmc-projects
11050,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,hicce-fmc-128,fmc-projects / hicce-fmc-128,hicce-fmc-128,fmc-projects/hicce-fmc-128,2019-02-13T14:32:09.107Z,main,[],[],ssh://git@ohwr.org:7999/fmc-projects/hicce-fmc-128.git,https://ohwr.org/fmc-projects/hicce-fmc-128.git,https://ohwr.org/fmc-projects/hicce-fmc-128,,0.0,,0,2019-02-13T14:32:09.107Z,9368,fmc-projects,fmc-projects,group,fmc-projects,,,https://ohwr.org/groups/fmc-projects
11049,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,gefe,fmc-projects / gefe,gefe,fmc-projects/gefe,2019-02-13T14:32:08.752Z,main,[],[],ssh://git@ohwr.org:7999/fmc-projects/gefe.git,https://ohwr.org/fmc-projects/gefe.git,https://ohwr.org/fmc-projects/gefe,,0.0,,0,2019-02-13T14:32:08.752Z,9368,fmc-projects,fmc-projects,group,fmc-projects,,,https://ohwr.org/groups/fmc-projects
11048,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,fmc-worldfip,fmc-projects / fmc-worldfip,fmc-worldfip,fmc-projects/fmc-worldfip,2019-02-13T14:32:08.470Z,main,[],[],ssh://git@ohwr.org:7999/fmc-projects/fmc-worldfip.git,https://ohwr.org/fmc-projects/fmc-worldfip.git,https://ohwr.org/fmc-projects/fmc-worldfip,,0.0,,0,2019-02-13T14:32:08.470Z,9368,fmc-projects,fmc-projects,group,fmc-projects,,,https://ohwr.org/groups/fmc-projects
11047,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,fmc-tdc-sw,fmc-projects / fmc-tdc / fmc-tdc-sw,fmc-tdc-sw,fmc-projects/fmc-tdc/fmc-tdc-sw,2019-02-13T14:32:08.175Z,backport-tdc-v1.0,[],[],ssh://git@ohwr.org:7999/fmc-projects/fmc-tdc/fmc-tdc-sw.git,https://ohwr.org/fmc-projects/fmc-tdc/fmc-tdc-sw.git,https://ohwr.org/fmc-projects/fmc-tdc/fmc-tdc-sw,https://ohwr.org/fmc-projects/fmc-tdc/fmc-tdc-sw/-/blob/backport-tdc-v1.0/README,0.0,,0,2019-03-07T17:28:28.586Z,9378,fmc-tdc,fmc-tdc,group,fmc-projects/fmc-tdc,9368.0,,https://ohwr.org/groups/fmc-projects/fmc-tdc
11046,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,fmc-tdc-1ns-5cha-tst,fmc-projects / fmc-tdc / fmc-tdc-1ns-5cha-tst,fmc-tdc-1ns-5cha-tst,fmc-projects/fmc-tdc/fmc-tdc-1ns-5cha-tst,2019-02-13T14:32:07.747Z,master,[],[],ssh://git@ohwr.org:7999/fmc-projects/fmc-tdc/fmc-tdc-1ns-5cha-tst.git,https://ohwr.org/fmc-projects/fmc-tdc/fmc-tdc-1ns-5cha-tst.git,https://ohwr.org/fmc-projects/fmc-tdc/fmc-tdc-1ns-5cha-tst,,0.0,,0,2019-03-07T17:28:38.489Z,9378,fmc-tdc,fmc-tdc,group,fmc-projects/fmc-tdc,9368.0,,https://ohwr.org/groups/fmc-projects/fmc-tdc
11045,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,fmc-tdc-1ns-5cha-hw,fmc-projects / fmc-tdc / fmc-tdc-1ns-5cha-hw,fmc-tdc-1ns-5cha-hw,fmc-projects/fmc-tdc/fmc-tdc-1ns-5cha-hw,2019-02-13T14:32:07.447Z,master,[],[],ssh://git@ohwr.org:7999/fmc-projects/fmc-tdc/fmc-tdc-1ns-5cha-hw.git,https://ohwr.org/fmc-projects/fmc-tdc/fmc-tdc-1ns-5cha-hw.git,https://ohwr.org/fmc-projects/fmc-tdc/fmc-tdc-1ns-5cha-hw,,0.0,,0,2019-03-07T17:28:35.272Z,9378,fmc-tdc,fmc-tdc,group,fmc-projects/fmc-tdc,9368.0,,https://ohwr.org/groups/fmc-projects/fmc-tdc
11044,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,fmc-tdc-1ns-5cha-gw,fmc-projects / fmc-tdc / fmc-tdc-1ns-5cha-gw,fmc-tdc-1ns-5cha-gw,fmc-projects/fmc-tdc/fmc-tdc-1ns-5cha-gw,2019-02-13T14:32:07.142Z,master,[],[],ssh://git@ohwr.org:7999/fmc-projects/fmc-tdc/fmc-tdc-1ns-5cha-gw.git,https://ohwr.org/fmc-projects/fmc-tdc/fmc-tdc-1ns-5cha-gw.git,https://ohwr.org/fmc-projects/fmc-tdc/fmc-tdc-1ns-5cha-gw,,0.0,,0,2019-03-07T17:23:38.048Z,9378,fmc-tdc,fmc-tdc,group,fmc-projects/fmc-tdc,9368.0,,https://ohwr.org/groups/fmc-projects/fmc-tdc
11043,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,fmc-sfp-4cha,fmc-projects / fmc-sfp-4cha,fmc-sfp-4cha,fmc-projects/fmc-sfp-4cha,2019-02-13T14:32:06.704Z,main,[],[],ssh://git@ohwr.org:7999/fmc-projects/fmc-sfp-4cha.git,https://ohwr.org/fmc-projects/fmc-sfp-4cha.git,https://ohwr.org/fmc-projects/fmc-sfp-4cha,,0.0,,0,2019-02-13T14:32:06.704Z,9368,fmc-projects,fmc-projects,group,fmc-projects,,,https://ohwr.org/groups/fmc-projects
11042,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,fmc-pof-10m-r4ch,fmc-projects / fmc-pof-10m-r4ch,fmc-pof-10m-r4ch,fmc-projects/fmc-pof-10m-r4ch,2019-02-13T14:32:06.462Z,main,[],[],ssh://git@ohwr.org:7999/fmc-projects/fmc-pof-10m-r4ch.git,https://ohwr.org/fmc-projects/fmc-pof-10m-r4ch.git,https://ohwr.org/fmc-projects/fmc-pof-10m-r4ch,,0.0,,0,2019-02-13T14:32:06.462Z,9368,fmc-projects,fmc-projects,group,fmc-projects,,,https://ohwr.org/groups/fmc-projects
11041,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,fmc-pof-10m-r3ch-t1ch,fmc-projects / fmc-pof-10m-r3ch-t1ch,fmc-pof-10m-r3ch-t1ch,fmc-projects/fmc-pof-10m-r3ch-t1ch,2019-02-13T14:32:06.110Z,main,[],[],ssh://git@ohwr.org:7999/fmc-projects/fmc-pof-10m-r3ch-t1ch.git,https://ohwr.org/fmc-projects/fmc-pof-10m-r3ch-t1ch.git,https://ohwr.org/fmc-projects/fmc-pof-10m-r3ch-t1ch,,0.0,,0,2019-02-13T14:32:06.110Z,9368,fmc-projects,fmc-projects,group,fmc-projects,,,https://ohwr.org/groups/fmc-projects
11040,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,fmc-mtlu-tst,fmc-projects / fmc-mtlu / fmc-mtlu-tst,fmc-mtlu-tst,fmc-projects/fmc-mtlu/fmc-mtlu-tst,2019-02-13T14:32:05.852Z,main,[],[],ssh://git@ohwr.org:7999/fmc-projects/fmc-mtlu/fmc-mtlu-tst.git,https://ohwr.org/fmc-projects/fmc-mtlu/fmc-mtlu-tst.git,https://ohwr.org/fmc-projects/fmc-mtlu/fmc-mtlu-tst,,0.0,,0,2019-02-13T14:32:05.852Z,9377,fmc-mtlu,fmc-mtlu,group,fmc-projects/fmc-mtlu,9368.0,,https://ohwr.org/groups/fmc-projects/fmc-mtlu
11039,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,fmc-mtlu-sw,fmc-projects / fmc-mtlu / fmc-mtlu-sw,fmc-mtlu-sw,fmc-projects/fmc-mtlu/fmc-mtlu-sw,2019-02-13T14:32:05.458Z,main,[],[],ssh://git@ohwr.org:7999/fmc-projects/fmc-mtlu/fmc-mtlu-sw.git,https://ohwr.org/fmc-projects/fmc-mtlu/fmc-mtlu-sw.git,https://ohwr.org/fmc-projects/fmc-mtlu/fmc-mtlu-sw,,0.0,,0,2019-02-13T14:32:05.458Z,9377,fmc-mtlu,fmc-mtlu,group,fmc-projects/fmc-mtlu,9368.0,,https://ohwr.org/groups/fmc-projects/fmc-mtlu
11038,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,fmc-mtlu-hw,fmc-projects / fmc-mtlu / fmc-mtlu-hw,fmc-mtlu-hw,fmc-projects/fmc-mtlu/fmc-mtlu-hw,2019-02-13T14:32:05.151Z,master,[],[],ssh://git@ohwr.org:7999/fmc-projects/fmc-mtlu/fmc-mtlu-hw.git,https://ohwr.org/fmc-projects/fmc-mtlu/fmc-mtlu-hw.git,https://ohwr.org/fmc-projects/fmc-mtlu/fmc-mtlu-hw,https://ohwr.org/fmc-projects/fmc-mtlu/fmc-mtlu-hw/-/blob/master/README,0.0,,0,2019-03-07T17:27:46.820Z,9377,fmc-mtlu,fmc-mtlu,group,fmc-projects/fmc-mtlu,9368.0,,https://ohwr.org/groups/fmc-projects/fmc-mtlu
11037,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,fmc-mtlu-gw,fmc-projects / fmc-mtlu / fmc-mtlu-gw,fmc-mtlu-gw,fmc-projects/fmc-mtlu/fmc-mtlu-gw,2019-02-13T14:32:04.825Z,master,[],[],ssh://git@ohwr.org:7999/fmc-projects/fmc-mtlu/fmc-mtlu-gw.git,https://ohwr.org/fmc-projects/fmc-mtlu/fmc-mtlu-gw.git,https://ohwr.org/fmc-projects/fmc-mtlu/fmc-mtlu-gw,,0.0,,0,2019-03-07T17:27:50.698Z,9377,fmc-mtlu,fmc-mtlu,group,fmc-projects/fmc-mtlu,9368.0,,https://ohwr.org/groups/fmc-projects/fmc-mtlu
11036,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,fmc-fe-l-band-2ch,fmc-projects / fmc-fe-l-band-2ch,fmc-fe-l-band-2ch,fmc-projects/fmc-fe-l-band-2ch,2019-02-13T14:32:04.271Z,main,[],[],ssh://git@ohwr.org:7999/fmc-projects/fmc-fe-l-band-2ch.git,https://ohwr.org/fmc-projects/fmc-fe-l-band-2ch.git,https://ohwr.org/fmc-projects/fmc-fe-l-band-2ch,,0.0,,0,2019-02-13T14:32:04.271Z,9368,fmc-projects,fmc-projects,group,fmc-projects,,,https://ohwr.org/groups/fmc-projects
11035,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,fmc-dio-32chttla-sw,fmc-projects / fmc-dio-32chttla / fmc-dio-32chttla-sw,fmc-dio-32chttla-sw,fmc-projects/fmc-dio-32chttla/fmc-dio-32chttla-sw,2019-02-13T14:32:04.014Z,main,[],[],ssh://git@ohwr.org:7999/fmc-projects/fmc-dio-32chttla/fmc-dio-32chttla-sw.git,https://ohwr.org/fmc-projects/fmc-dio-32chttla/fmc-dio-32chttla-sw.git,https://ohwr.org/fmc-projects/fmc-dio-32chttla/fmc-dio-32chttla-sw,,0.0,,0,2019-02-13T14:32:04.014Z,9376,fmc-dio-32chttla,fmc-dio-32chttla,group,fmc-projects/fmc-dio-32chttla,9368.0,,https://ohwr.org/groups/fmc-projects/fmc-dio-32chttla
11034,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,fmc-dio-32chlvdsa,fmc-projects / fmc-dio-32chlvdsa,fmc-dio-32chlvdsa,fmc-projects/fmc-dio-32chlvdsa,2019-02-13T14:32:03.552Z,main,[],[],ssh://git@ohwr.org:7999/fmc-projects/fmc-dio-32chlvdsa.git,https://ohwr.org/fmc-projects/fmc-dio-32chlvdsa.git,https://ohwr.org/fmc-projects/fmc-dio-32chlvdsa,,0.0,,0,2019-02-13T14:32:03.552Z,9368,fmc-projects,fmc-projects,group,fmc-projects,,,https://ohwr.org/groups/fmc-projects
11033,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,fmc-dio-16ch-lvds-a,fmc-projects / fmc-dio-16ch-lvds-a,fmc-dio-16ch-lvds-a,fmc-projects/fmc-dio-16ch-lvds-a,2019-02-13T14:32:03.172Z,main,[],[],ssh://git@ohwr.org:7999/fmc-projects/fmc-dio-16ch-lvds-a.git,https://ohwr.org/fmc-projects/fmc-dio-16ch-lvds-a.git,https://ohwr.org/fmc-projects/fmc-dio-16ch-lvds-a,,0.0,,0,2019-02-13T14:32:03.172Z,9368,fmc-projects,fmc-projects,group,fmc-projects,,,https://ohwr.org/groups/fmc-projects
11032,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,fmc-dio-10i-8o,fmc-projects / fmc-dio-10i-8o,fmc-dio-10i-8o,fmc-projects/fmc-dio-10i-8o,2019-02-13T14:32:02.865Z,main,[],[],ssh://git@ohwr.org:7999/fmc-projects/fmc-dio-10i-8o.git,https://ohwr.org/fmc-projects/fmc-dio-10i-8o.git,https://ohwr.org/fmc-projects/fmc-dio-10i-8o,,0.0,,0,2019-02-13T14:32:02.865Z,9368,fmc-projects,fmc-projects,group,fmc-projects,,,https://ohwr.org/groups/fmc-projects
11031,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,fine-delay-sw,fmc-projects / fmc-delay-1ns-8cha / fine-delay-sw,fine-delay-sw,fmc-projects/fmc-delay-1ns-8cha/fine-delay-sw,2019-02-13T14:32:02.589Z,backport-rc,[],[],ssh://git@ohwr.org:7999/fmc-projects/fmc-delay-1ns-8cha/fine-delay-sw.git,https://ohwr.org/fmc-projects/fmc-delay-1ns-8cha/fine-delay-sw.git,https://ohwr.org/fmc-projects/fmc-delay-1ns-8cha/fine-delay-sw,https://ohwr.org/fmc-projects/fmc-delay-1ns-8cha/fine-delay-sw/-/blob/backport-rc/README,0.0,,0,2019-03-07T17:27:35.422Z,9375,fmc-delay-1ns-8cha,fmc-delay-1ns-8cha,group,fmc-projects/fmc-delay-1ns-8cha,9368.0,,https://ohwr.org/groups/fmc-projects/fmc-delay-1ns-8cha
11030,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,fmc-del-1ns-2cha,fmc-projects / fmc-del-1ns-2cha,fmc-del-1ns-2cha,fmc-projects/fmc-del-1ns-2cha,2019-02-13T14:32:02.023Z,main,[],[],ssh://git@ohwr.org:7999/fmc-projects/fmc-del-1ns-2cha.git,https://ohwr.org/fmc-projects/fmc-del-1ns-2cha.git,https://ohwr.org/fmc-projects/fmc-del-1ns-2cha,,0.0,,0,2019-02-13T14:32:02.023Z,9368,fmc-projects,fmc-projects,group,fmc-projects,,,https://ohwr.org/groups/fmc-projects
11029,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,fmc-dac-600m-12b-1cha-tst,fmc-projects / fmc-dac-600m-12b-1cha-dds / fmc-dac-600m-12b-1cha-tst,fmc-dac-600m-12b-1cha-tst,fmc-projects/fmc-dac-600m-12b-1cha-dds/fmc-dac-600m-12b-1cha-tst,2019-02-13T14:32:01.744Z,dev,[],[],ssh://git@ohwr.org:7999/fmc-projects/fmc-dac-600m-12b-1cha-dds/fmc-dac-600m-12b-1cha-tst.git,https://ohwr.org/fmc-projects/fmc-dac-600m-12b-1cha-dds/fmc-dac-600m-12b-1cha-tst.git,https://ohwr.org/fmc-projects/fmc-dac-600m-12b-1cha-dds/fmc-dac-600m-12b-1cha-tst,,0.0,,0,2019-03-07T17:27:03.493Z,9374,fmc-dac-600m-12b-1cha-dds,fmc-dac-600m-12b-1cha-dds,group,fmc-projects/fmc-dac-600m-12b-1cha-dds,9368.0,,https://ohwr.org/groups/fmc-projects/fmc-dac-600m-12b-1cha-dds
11028,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,fmc-dac100m14b16cha-adc2m14b4cha,fmc-projects / fmc-dac100m14b16cha-adc2m14b4cha,fmc-dac100m14b16cha-adc2m14b4cha,fmc-projects/fmc-dac100m14b16cha-adc2m14b4cha,2019-02-13T14:32:01.283Z,main,[],[],ssh://git@ohwr.org:7999/fmc-projects/fmc-dac100m14b16cha-adc2m14b4cha.git,https://ohwr.org/fmc-projects/fmc-dac100m14b16cha-adc2m14b4cha.git,https://ohwr.org/fmc-projects/fmc-dac100m14b16cha-adc2m14b4cha,,0.0,,0,2019-02-13T14:32:01.283Z,9368,fmc-projects,fmc-projects,group,fmc-projects,,,https://ohwr.org/groups/fmc-projects
11027,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,fmc-bus,fmc-projects / fmc-bus,fmc-bus,fmc-projects/fmc-bus,2019-02-13T14:32:00.186Z,master,[],[],ssh://git@ohwr.org:7999/fmc-projects/fmc-bus.git,https://ohwr.org/fmc-projects/fmc-bus.git,https://ohwr.org/fmc-projects/fmc-bus,,0.0,,0,2019-02-13T14:32:00.186Z,9368,fmc-projects,fmc-projects,group,fmc-projects,,,https://ohwr.org/groups/fmc-projects
11026,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,fmc-adc-subsamp125m14b4cha,fmc-projects / fmc-adc-subsamp125m14b4cha,fmc-adc-subsamp125m14b4cha,fmc-projects/fmc-adc-subsamp125m14b4cha,2019-02-13T14:31:59.921Z,main,[],[],ssh://git@ohwr.org:7999/fmc-projects/fmc-adc-subsamp125m14b4cha.git,https://ohwr.org/fmc-projects/fmc-adc-subsamp125m14b4cha.git,https://ohwr.org/fmc-projects/fmc-adc-subsamp125m14b4cha,,0.0,,0,2019-02-13T14:31:59.921Z,9368,fmc-projects,fmc-projects,group,fmc-projects,,,https://ohwr.org/groups/fmc-projects
11025,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,fmc-adc-400k18b4cha-iso-sw,fmc-projects / fmc-adc-400k18b4cha-iso / fmc-adc-400k18b4cha-iso-sw,fmc-adc-400k18b4cha-iso-sw,fmc-projects/fmc-adc-400k18b4cha-iso/fmc-adc-400k18b4cha-iso-sw,2019-02-13T14:31:59.594Z,master,[],[],ssh://git@ohwr.org:7999/fmc-projects/fmc-adc-400k18b4cha-iso/fmc-adc-400k18b4cha-iso-sw.git,https://ohwr.org/fmc-projects/fmc-adc-400k18b4cha-iso/fmc-adc-400k18b4cha-iso-sw.git,https://ohwr.org/fmc-projects/fmc-adc-400k18b4cha-iso/fmc-adc-400k18b4cha-iso-sw,https://ohwr.org/fmc-projects/fmc-adc-400k18b4cha-iso/fmc-adc-400k18b4cha-iso-sw/-/blob/master/README.txt,0.0,,0,2019-03-07T17:26:03.779Z,9373,fmc-adc-400k18b4cha-iso,fmc-adc-400k18b4cha-iso,group,fmc-projects/fmc-adc-400k18b4cha-iso,9368.0,,https://ohwr.org/groups/fmc-projects/fmc-adc-400k18b4cha-iso
11024,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,fmc-adc-400k18b4cha-iso-hw,fmc-projects / fmc-adc-400k18b4cha-iso / fmc-adc-400k18b4cha-iso-hw,fmc-adc-400k18b4cha-iso-hw,fmc-projects/fmc-adc-400k18b4cha-iso/fmc-adc-400k18b4cha-iso-hw,2019-02-13T14:31:59.233Z,main,[],[],ssh://git@ohwr.org:7999/fmc-projects/fmc-adc-400k18b4cha-iso/fmc-adc-400k18b4cha-iso-hw.git,https://ohwr.org/fmc-projects/fmc-adc-400k18b4cha-iso/fmc-adc-400k18b4cha-iso-hw.git,https://ohwr.org/fmc-projects/fmc-adc-400k18b4cha-iso/fmc-adc-400k18b4cha-iso-hw,,0.0,,0,2019-02-13T14:31:59.233Z,9373,fmc-adc-400k18b4cha-iso,fmc-adc-400k18b4cha-iso,group,fmc-projects/fmc-adc-400k18b4cha-iso,9368.0,,https://ohwr.org/groups/fmc-projects/fmc-adc-400k18b4cha-iso
11023,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,fmc-adc-400k18b4cha-iso-gw,fmc-projects / fmc-adc-400k18b4cha-iso / fmc-adc-400k18b4cha-iso-gw,fmc-adc-400k18b4cha-iso-gw,fmc-projects/fmc-adc-400k18b4cha-iso/fmc-adc-400k18b4cha-iso-gw,2019-02-13T14:31:58.947Z,master,[],[],ssh://git@ohwr.org:7999/fmc-projects/fmc-adc-400k18b4cha-iso/fmc-adc-400k18b4cha-iso-gw.git,https://ohwr.org/fmc-projects/fmc-adc-400k18b4cha-iso/fmc-adc-400k18b4cha-iso-gw.git,https://ohwr.org/fmc-projects/fmc-adc-400k18b4cha-iso/fmc-adc-400k18b4cha-iso-gw,https://ohwr.org/fmc-projects/fmc-adc-400k18b4cha-iso/fmc-adc-400k18b4cha-iso-gw/-/blob/master/README,0.0,,0,2019-03-07T17:28:54.405Z,9373,fmc-adc-400k18b4cha-iso,fmc-adc-400k18b4cha-iso,group,fmc-projects/fmc-adc-400k18b4cha-iso,9368.0,,https://ohwr.org/groups/fmc-projects/fmc-adc-400k18b4cha-iso
11022,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,fmc-adc-2k24b8cha,fmc-projects / fmc-adc-2k24b8cha,fmc-adc-2k24b8cha,fmc-projects/fmc-adc-2k24b8cha,2019-02-13T14:31:58.488Z,main,[],[],ssh://git@ohwr.org:7999/fmc-projects/fmc-adc-2k24b8cha.git,https://ohwr.org/fmc-projects/fmc-adc-2k24b8cha.git,https://ohwr.org/fmc-projects/fmc-adc-2k24b8cha,,0.0,,0,2019-02-13T14:31:58.488Z,9368,fmc-projects,fmc-projects,group,fmc-projects,,,https://ohwr.org/groups/fmc-projects
11021,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,fmc-adc-250m-16b-4cha-sw,fmc-projects / fmc-adc-250m-16b-4cha / fmc-adc-250m-16b-4cha-sw,fmc-adc-250m-16b-4cha-sw,fmc-projects/fmc-adc-250m-16b-4cha/fmc-adc-250m-16b-4cha-sw,2019-02-13T14:31:58.128Z,main,[],[],ssh://git@ohwr.org:7999/fmc-projects/fmc-adc-250m-16b-4cha/fmc-adc-250m-16b-4cha-sw.git,https://ohwr.org/fmc-projects/fmc-adc-250m-16b-4cha/fmc-adc-250m-16b-4cha-sw.git,https://ohwr.org/fmc-projects/fmc-adc-250m-16b-4cha/fmc-adc-250m-16b-4cha-sw,,0.0,,0,2019-02-13T14:31:58.128Z,9372,fmc-adc-250m-16b-4cha,fmc-adc-250m-16b-4cha,group,fmc-projects/fmc-adc-250m-16b-4cha,9368.0,,https://ohwr.org/groups/fmc-projects/fmc-adc-250m-16b-4cha
11020,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,fmc-adc-250m12b2cha,fmc-projects / fmc-adc-250m12b2cha,fmc-adc-250m12b2cha,fmc-projects/fmc-adc-250m12b2cha,2019-02-13T14:31:57.691Z,main,[],[],ssh://git@ohwr.org:7999/fmc-projects/fmc-adc-250m12b2cha.git,https://ohwr.org/fmc-projects/fmc-adc-250m12b2cha.git,https://ohwr.org/fmc-projects/fmc-adc-250m12b2cha,,0.0,,0,2019-02-13T14:31:57.691Z,9368,fmc-projects,fmc-projects,group,fmc-projects,,,https://ohwr.org/groups/fmc-projects
11019,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,fmc-adc-1g8b2cha,fmc-projects / fmc-adc-1g8b2cha,fmc-adc-1g8b2cha,fmc-projects/fmc-adc-1g8b2cha,2019-02-13T14:31:57.405Z,main,[],[],ssh://git@ohwr.org:7999/fmc-projects/fmc-adc-1g8b2cha.git,https://ohwr.org/fmc-projects/fmc-adc-1g8b2cha.git,https://ohwr.org/fmc-projects/fmc-adc-1g8b2cha,,0.0,,0,2019-02-13T14:31:57.405Z,9368,fmc-projects,fmc-projects,group,fmc-projects,,,https://ohwr.org/groups/fmc-projects
11018,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,fmc-adc-130m-16b-4cha-sw,fmc-projects / fmc-adc-130m-16b-4cha / fmc-adc-130m-16b-4cha-sw,fmc-adc-130m-16b-4cha-sw,fmc-projects/fmc-adc-130m-16b-4cha/fmc-adc-130m-16b-4cha-sw,2019-02-13T14:31:57.072Z,main,[],[],ssh://git@ohwr.org:7999/fmc-projects/fmc-adc-130m-16b-4cha/fmc-adc-130m-16b-4cha-sw.git,https://ohwr.org/fmc-projects/fmc-adc-130m-16b-4cha/fmc-adc-130m-16b-4cha-sw.git,https://ohwr.org/fmc-projects/fmc-adc-130m-16b-4cha/fmc-adc-130m-16b-4cha-sw,,0.0,,0,2019-02-13T14:31:57.072Z,9371,fmc-adc-130m-16b-4cha,fmc-adc-130m-16b-4cha,group,fmc-projects/fmc-adc-130m-16b-4cha,9368.0,,https://ohwr.org/groups/fmc-projects/fmc-adc-130m-16b-4cha
11017,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,fmc-adc125m14b1ch-dac600m14b1ch-sw,fmc-projects / fmc-adc125m14b1ch-dac600m14b1ch / fmc-adc125m14b1ch-dac600m14b1ch-sw,fmc-adc125m14b1ch-dac600m14b1ch-sw,fmc-projects/fmc-adc125m14b1ch-dac600m14b1ch/fmc-adc125m14b1ch-dac600m14b1ch-sw,2019-02-13T14:31:56.531Z,main,[],[],ssh://git@ohwr.org:7999/fmc-projects/fmc-adc125m14b1ch-dac600m14b1ch/fmc-adc125m14b1ch-dac600m14b1ch-sw.git,https://ohwr.org/fmc-projects/fmc-adc125m14b1ch-dac600m14b1ch/fmc-adc125m14b1ch-dac600m14b1ch-sw.git,https://ohwr.org/fmc-projects/fmc-adc125m14b1ch-dac600m14b1ch/fmc-adc125m14b1ch-dac600m14b1ch-sw,,0.0,,0,2019-02-13T14:31:56.531Z,9370,fmc-adc125m14b1ch-dac600m14b1ch,fmc-adc125m14b1ch-dac600m14b1ch,group,fmc-projects/fmc-adc125m14b1ch-dac600m14b1ch,9368.0,,https://ohwr.org/groups/fmc-projects/fmc-adc125m14b1ch-dac600m14b1ch
11016,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,fmc-adc125m14b12ch-dac1250m16b2ch,fmc-projects / fmc-adc125m14b12ch-dac1250m16b2ch,fmc-adc125m14b12ch-dac1250m16b2ch,fmc-projects/fmc-adc125m14b12ch-dac1250m16b2ch,2019-02-13T14:31:56.039Z,main,[],[],ssh://git@ohwr.org:7999/fmc-projects/fmc-adc125m14b12ch-dac1250m16b2ch.git,https://ohwr.org/fmc-projects/fmc-adc125m14b12ch-dac1250m16b2ch.git,https://ohwr.org/fmc-projects/fmc-adc125m14b12ch-dac1250m16b2ch,,0.0,,0,2019-02-13T14:31:56.039Z,9368,fmc-projects,fmc-projects,group,fmc-projects,,,https://ohwr.org/groups/fmc-projects
11015,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,fmc-adc-100m14b4cha-tst,fmc-projects / fmc-adc-100m14b4cha / fmc-adc-100m14b4cha-tst,fmc-adc-100m14b4cha-tst,fmc-projects/fmc-adc-100m14b4cha/fmc-adc-100m14b4cha-tst,2019-02-13T14:29:52.785Z,master,[],[],ssh://git@ohwr.org:7999/fmc-projects/fmc-adc-100m14b4cha/fmc-adc-100m14b4cha-tst.git,https://ohwr.org/fmc-projects/fmc-adc-100m14b4cha/fmc-adc-100m14b4cha-tst.git,https://ohwr.org/fmc-projects/fmc-adc-100m14b4cha/fmc-adc-100m14b4cha-tst,,0.0,,0,2019-03-07T17:28:47.794Z,9369,fmc-adc-100m14b4cha,fmc-adc-100m14b4cha,group,fmc-projects/fmc-adc-100m14b4cha,9368.0,,https://ohwr.org/groups/fmc-projects/fmc-adc-100m14b4cha
11014,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,fmc-adc-100m14b4cha-sw,fmc-projects / fmc-adc-100m14b4cha / fmc-adc-100m14b4cha-sw,fmc-adc-100m14b4cha-sw,fmc-projects/fmc-adc-100m14b4cha/fmc-adc-100m14b4cha-sw,2019-02-13T14:29:52.437Z,develop,[],[],ssh://git@ohwr.org:7999/fmc-projects/fmc-adc-100m14b4cha/fmc-adc-100m14b4cha-sw.git,https://ohwr.org/fmc-projects/fmc-adc-100m14b4cha/fmc-adc-100m14b4cha-sw.git,https://ohwr.org/fmc-projects/fmc-adc-100m14b4cha/fmc-adc-100m14b4cha-sw,,0.0,,0,2019-03-07T17:28:50.211Z,9369,fmc-adc-100m14b4cha,fmc-adc-100m14b4cha,group,fmc-projects/fmc-adc-100m14b4cha,9368.0,,https://ohwr.org/groups/fmc-projects/fmc-adc-100m14b4cha
11013,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,fmc-adc-100m14b4cha-hw,fmc-projects / fmc-adc-100m14b4cha / fmc-adc-100m14b4cha-hw,fmc-adc-100m14b4cha-hw,fmc-projects/fmc-adc-100m14b4cha/fmc-adc-100m14b4cha-hw,2019-02-13T14:29:52.113Z,master,[],[],ssh://git@ohwr.org:7999/fmc-projects/fmc-adc-100m14b4cha/fmc-adc-100m14b4cha-hw.git,https://ohwr.org/fmc-projects/fmc-adc-100m14b4cha/fmc-adc-100m14b4cha-hw.git,https://ohwr.org/fmc-projects/fmc-adc-100m14b4cha/fmc-adc-100m14b4cha-hw,,0.0,,0,2019-03-07T17:27:08.585Z,9369,fmc-adc-100m14b4cha,fmc-adc-100m14b4cha,group,fmc-projects/fmc-adc-100m14b4cha,9368.0,,https://ohwr.org/groups/fmc-projects/fmc-adc-100m14b4cha
11012,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,fmc-adc-100m14b4cha-gw,fmc-projects / fmc-adc-100m14b4cha / fmc-adc-100m14b4cha-gw,fmc-adc-100m14b4cha-gw,fmc-projects/fmc-adc-100m14b4cha/fmc-adc-100m14b4cha-gw,2019-02-13T14:29:51.624Z,master,[],[],ssh://git@ohwr.org:7999/fmc-projects/fmc-adc-100m14b4cha/fmc-adc-100m14b4cha-gw.git,https://ohwr.org/fmc-projects/fmc-adc-100m14b4cha/fmc-adc-100m14b4cha-gw.git,https://ohwr.org/fmc-projects/fmc-adc-100m14b4cha/fmc-adc-100m14b4cha-gw,,0.0,,0,2019-03-07T17:27:48.993Z,9369,fmc-adc-100m14b4cha,fmc-adc-100m14b4cha,group,fmc-projects/fmc-adc-100m14b4cha,9368.0,,https://ohwr.org/groups/fmc-projects/fmc-adc-100m14b4cha
11011,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,fmc-adc100m14b16cha-dac2m14b4cha,fmc-projects / fmc-adc100m14b16cha-dac2m14b4cha,fmc-adc100m14b16cha-dac2m14b4cha,fmc-projects/fmc-adc100m14b16cha-dac2m14b4cha,2019-02-13T14:29:51.048Z,main,[],[],ssh://git@ohwr.org:7999/fmc-projects/fmc-adc100m14b16cha-dac2m14b4cha.git,https://ohwr.org/fmc-projects/fmc-adc100m14b16cha-dac2m14b4cha.git,https://ohwr.org/fmc-projects/fmc-adc100m14b16cha-dac2m14b4cha,,0.0,,0,2019-02-13T14:29:51.048Z,9368,fmc-projects,fmc-projects,group,fmc-projects,,,https://ohwr.org/groups/fmc-projects
11010,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,fmc-72chopt480-8chopt1600,fmc-projects / fmc-72chopt480-8chopt1600,fmc-72chopt480-8chopt1600,fmc-projects/fmc-72chopt480-8chopt1600,2019-02-13T14:29:50.745Z,main,[],[],ssh://git@ohwr.org:7999/fmc-projects/fmc-72chopt480-8chopt1600.git,https://ohwr.org/fmc-projects/fmc-72chopt480-8chopt1600.git,https://ohwr.org/fmc-projects/fmc-72chopt480-8chopt1600,,0.0,,0,2019-02-13T14:29:50.745Z,9368,fmc-projects,fmc-projects,group,fmc-projects,,,https://ohwr.org/groups/fmc-projects
11009,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,fasec,fmc-projects / fasec,fasec,fmc-projects/fasec,2019-02-13T14:29:50.480Z,main,[],[],ssh://git@ohwr.org:7999/fmc-projects/fasec.git,https://ohwr.org/fmc-projects/fasec.git,https://ohwr.org/fmc-projects/fasec,,0.0,,0,2019-02-13T14:29:50.480Z,9368,fmc-projects,fmc-projects,group,fmc-projects,,,https://ohwr.org/groups/fmc-projects
11008,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,atfc,fmc-projects / atfc,atfc,fmc-projects/atfc,2019-02-13T14:29:50.054Z,main,[],[],ssh://git@ohwr.org:7999/fmc-projects/atfc.git,https://ohwr.org/fmc-projects/atfc.git,https://ohwr.org/fmc-projects/atfc,,0.0,,0,2019-02-13T14:29:50.054Z,9368,fmc-projects,fmc-projects,group,fmc-projects,,,https://ohwr.org/groups/fmc-projects
11007,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,afck,fmc-projects / afck,afck,fmc-projects/afck,2019-02-13T14:29:49.573Z,main,[],[],ssh://git@ohwr.org:7999/fmc-projects/afck.git,https://ohwr.org/fmc-projects/afck.git,https://ohwr.org/fmc-projects/afck,,0.0,,0,2019-02-13T14:29:49.573Z,9368,fmc-projects,fmc-projects,group,fmc-projects,,,https://ohwr.org/groups/fmc-projects
11006,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,afc,fmc-projects / afc,afc,fmc-projects/afc,2019-02-13T14:29:49.260Z,main,[],[],ssh://git@ohwr.org:7999/fmc-projects/afc.git,https://ohwr.org/fmc-projects/afc.git,https://ohwr.org/fmc-projects/afc,,0.0,,0,2019-02-13T14:29:49.260Z,9368,fmc-projects,fmc-projects,group,fmc-projects,,,https://ohwr.org/groups/fmc-projects
11005,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,euro-adc-65m-14b-40cha-tst,eurocard / euro-adc-65m-14b-40cha / euro-adc-65m-14b-40cha-tst,euro-adc-65m-14b-40cha-tst,eurocard/euro-adc-65m-14b-40cha/euro-adc-65m-14b-40cha-tst,2019-02-13T14:29:48.717Z,main,[],[],ssh://git@ohwr.org:7999/eurocard/euro-adc-65m-14b-40cha/euro-adc-65m-14b-40cha-tst.git,https://ohwr.org/eurocard/euro-adc-65m-14b-40cha/euro-adc-65m-14b-40cha-tst.git,https://ohwr.org/eurocard/euro-adc-65m-14b-40cha/euro-adc-65m-14b-40cha-tst,,0.0,,0,2019-02-13T14:29:48.717Z,9367,euro-adc-65m-14b-40cha,euro-adc-65m-14b-40cha,group,eurocard/euro-adc-65m-14b-40cha,9366.0,,https://ohwr.org/groups/eurocard/euro-adc-65m-14b-40cha
11004,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,euro-adc-65m-14b-40cha-sw,eurocard / euro-adc-65m-14b-40cha / euro-adc-65m-14b-40cha-sw,euro-adc-65m-14b-40cha-sw,eurocard/euro-adc-65m-14b-40cha/euro-adc-65m-14b-40cha-sw,2019-02-13T14:29:48.346Z,main,[],[],ssh://git@ohwr.org:7999/eurocard/euro-adc-65m-14b-40cha/euro-adc-65m-14b-40cha-sw.git,https://ohwr.org/eurocard/euro-adc-65m-14b-40cha/euro-adc-65m-14b-40cha-sw.git,https://ohwr.org/eurocard/euro-adc-65m-14b-40cha/euro-adc-65m-14b-40cha-sw,,0.0,,0,2019-02-13T14:29:48.346Z,9367,euro-adc-65m-14b-40cha,euro-adc-65m-14b-40cha,group,eurocard/euro-adc-65m-14b-40cha,9366.0,,https://ohwr.org/groups/eurocard/euro-adc-65m-14b-40cha
11003,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,euro-adc-65m-14b-40cha-hw,eurocard / euro-adc-65m-14b-40cha / euro-adc-65m-14b-40cha-hw,euro-adc-65m-14b-40cha-hw,eurocard/euro-adc-65m-14b-40cha/euro-adc-65m-14b-40cha-hw,2019-02-13T14:29:47.669Z,cpld_hacking,[],[],ssh://git@ohwr.org:7999/eurocard/euro-adc-65m-14b-40cha/euro-adc-65m-14b-40cha-hw.git,https://ohwr.org/eurocard/euro-adc-65m-14b-40cha/euro-adc-65m-14b-40cha-hw.git,https://ohwr.org/eurocard/euro-adc-65m-14b-40cha/euro-adc-65m-14b-40cha-hw,,0.0,,0,2019-03-07T17:26:00.543Z,9367,euro-adc-65m-14b-40cha,euro-adc-65m-14b-40cha,group,eurocard/euro-adc-65m-14b-40cha,9366.0,,https://ohwr.org/groups/eurocard/euro-adc-65m-14b-40cha
11002,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,euro-adc-65m-14b-40cha-gw,eurocard / euro-adc-65m-14b-40cha / euro-adc-65m-14b-40cha-gw,euro-adc-65m-14b-40cha-gw,eurocard/euro-adc-65m-14b-40cha/euro-adc-65m-14b-40cha-gw,2019-02-13T14:29:47.298Z,master,[],[],ssh://git@ohwr.org:7999/eurocard/euro-adc-65m-14b-40cha/euro-adc-65m-14b-40cha-gw.git,https://ohwr.org/eurocard/euro-adc-65m-14b-40cha/euro-adc-65m-14b-40cha-gw.git,https://ohwr.org/eurocard/euro-adc-65m-14b-40cha/euro-adc-65m-14b-40cha-gw,https://ohwr.org/eurocard/euro-adc-65m-14b-40cha/euro-adc-65m-14b-40cha-gw/-/blob/master/README.md,0.0,,0,2019-03-07T17:28:04.883Z,9367,euro-adc-65m-14b-40cha,euro-adc-65m-14b-40cha,group,eurocard/euro-adc-65m-14b-40cha,9366.0,,https://ohwr.org/groups/eurocard/euro-adc-65m-14b-40cha
11001,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,wandadapter,edm / wandadapter,wandadapter,edm/wandadapter,2019-02-13T14:29:46.529Z,main,[],[],ssh://git@ohwr.org:7999/edm/wandadapter.git,https://ohwr.org/edm/wandadapter.git,https://ohwr.org/edm/wandadapter,,0.0,,0,2019-02-13T14:29:46.529Z,9365,edm,edm,group,edm,,,https://ohwr.org/groups/edm
11000,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,diot-wic-gw,diot / diot-wic-gw,diot-wic-gw,diot/diot-wic-gw,2019-02-13T14:29:46.025Z,denia-tb,[],[],ssh://git@ohwr.org:7999/diot/diot-wic-gw.git,https://ohwr.org/diot/diot-wic-gw.git,https://ohwr.org/diot/diot-wic-gw,,0.0,,0,2019-03-07T17:26:05.129Z,9364,diot,diot,group,diot,,,https://ohwr.org/groups/diot
10999,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,diot-dio-16ch-opt-24v,diot / diot-dio-16ch-opt-24v,diot-dio-16ch-opt-24v,diot/diot-dio-16ch-opt-24v,2019-02-13T14:29:45.733Z,main,[],[],ssh://git@ohwr.org:7999/diot/diot-dio-16ch-opt-24v.git,https://ohwr.org/diot/diot-dio-16ch-opt-24v.git,https://ohwr.org/diot/diot-dio-16ch-opt-24v,,0.0,,0,2019-02-13T14:29:45.733Z,9364,diot,diot,group,diot,,,https://ohwr.org/groups/diot
10998,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,dces-dtrhf-ser1ch-v1,dces / dces-dtrhf-ser1ch-v1,dces-dtrhf-ser1ch-v1,dces/dces-dtrhf-ser1ch-v1,2019-02-13T14:29:45.223Z,master,[],[],ssh://git@ohwr.org:7999/dces/dces-dtrhf-ser1ch-v1.git,https://ohwr.org/dces/dces-dtrhf-ser1ch-v1.git,https://ohwr.org/dces/dces-dtrhf-ser1ch-v1,https://ohwr.org/dces/dces-dtrhf-ser1ch-v1/-/blob/master/README.rst,0.0,,0,2019-03-07T17:28:03.499Z,9363,dces,dces,group,dces,,,https://ohwr.org/groups/dces
10997,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,nanofip-gateware,cern-fip / nanofip / nanofip-gateware,nanofip-gateware,cern-fip/nanofip/nanofip-gateware,2019-02-13T14:29:44.500Z,master,[],[],ssh://git@ohwr.org:7999/cern-fip/nanofip/nanofip-gateware.git,https://ohwr.org/cern-fip/nanofip/nanofip-gateware.git,https://ohwr.org/cern-fip/nanofip/nanofip-gateware,https://ohwr.org/cern-fip/nanofip/nanofip-gateware/-/blob/master/README,0.0,,0,2019-03-07T17:27:17.650Z,9362,nanofip,nanofip,group,cern-fip/nanofip,9359.0,,https://ohwr.org/groups/cern-fip/nanofip
10996,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,masterfip-tst,cern-fip / masterfip / masterfip-tst,masterfip-tst,cern-fip/masterfip/masterfip-tst,2019-02-13T14:29:43.593Z,master,[],[],ssh://git@ohwr.org:7999/cern-fip/masterfip/masterfip-tst.git,https://ohwr.org/cern-fip/masterfip/masterfip-tst.git,https://ohwr.org/cern-fip/masterfip/masterfip-tst,,0.0,,0,2019-03-07T17:28:57.233Z,9361,masterfip,masterfip,group,cern-fip/masterfip,9359.0,,https://ohwr.org/groups/cern-fip/masterfip
10995,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,masterfip-sw,cern-fip / masterfip / masterfip-sw,masterfip-sw,cern-fip/masterfip/masterfip-sw,2019-02-13T14:29:39.433Z,main,[],[],ssh://git@ohwr.org:7999/cern-fip/masterfip/masterfip-sw.git,https://ohwr.org/cern-fip/masterfip/masterfip-sw.git,https://ohwr.org/cern-fip/masterfip/masterfip-sw,,0.0,,0,2019-02-13T14:29:39.433Z,9361,masterfip,masterfip,group,cern-fip/masterfip,9359.0,,https://ohwr.org/groups/cern-fip/masterfip
10994,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,masterfip-gw,cern-fip / masterfip / masterfip-gw,masterfip-gw,cern-fip/masterfip/masterfip-gw,2019-02-13T14:29:29.072Z,adam-proposed_master,[],[],ssh://git@ohwr.org:7999/cern-fip/masterfip/masterfip-gw.git,https://ohwr.org/cern-fip/masterfip/masterfip-gw.git,https://ohwr.org/cern-fip/masterfip/masterfip-gw,,0.0,,0,2019-03-07T17:27:32.769Z,9361,masterfip,masterfip,group,cern-fip/masterfip,9359.0,,https://ohwr.org/groups/cern-fip/masterfip
10992,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,cape-pwr-12b-6cha,cape / cape-pwr-12b-6cha,cape-pwr-12b-6cha,cape/cape-pwr-12b-6cha,2019-02-13T12:46:19.355Z,main,[],[],ssh://git@ohwr.org:7999/cape/cape-pwr-12b-6cha.git,https://ohwr.org/cape/cape-pwr-12b-6cha.git,https://ohwr.org/cape/cape-pwr-12b-6cha,,0.0,,0,2019-02-13T12:46:19.355Z,9358,cape,cape,group,cape,,,https://ohwr.org/groups/cape
10991,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,bpm-sw,bpm / bpm-sw,bpm-sw,bpm/bpm-sw,2019-02-13T12:46:15.306Z,devel,[],[],ssh://git@ohwr.org:7999/bpm/bpm-sw.git,https://ohwr.org/bpm/bpm-sw.git,https://ohwr.org/bpm/bpm-sw,https://ohwr.org/bpm/bpm-sw/-/blob/devel/README.md,0.0,,0,2019-03-07T17:23:39.900Z,9357,bpm,bpm,group,bpm,,,https://ohwr.org/groups/bpm
10990,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,bpm-rffe,bpm / bpm-rffe,bpm-rffe,bpm/bpm-rffe,2019-02-13T12:46:02.332Z,master,[],[],ssh://git@ohwr.org:7999/bpm/bpm-rffe.git,https://ohwr.org/bpm/bpm-rffe.git,https://ohwr.org/bpm/bpm-rffe,,0.0,,0,2019-03-07T17:27:28.411Z,9357,bpm,bpm,group,bpm,,,https://ohwr.org/groups/bpm
10989,READ-ONLY PROJECT TO PRESERVE EXISTING REMOTE URLS,bpm-gw,bpm / bpm-gw,bpm-gw,bpm/bpm-gw,2019-02-13T12:45:35.418Z,acq-post-mortem,[],[],ssh://git@ohwr.org:7999/bpm/bpm-gw.git,https://ohwr.org/bpm/bpm-gw.git,https://ohwr.org/bpm/bpm-gw,https://ohwr.org/bpm/bpm-gw/-/blob/acq-post-mortem/README,0.0,,0,2019-03-07T17:28:00.518Z,9357,bpm,bpm,group,bpm,,,https://ohwr.org/groups/bpm
10987,,wr-switch-hdl,white-rabbit / wr-switch-hdl,wr-switch-hdl,white-rabbit/wr-switch-hdl,2019-02-13T10:44:13.117Z,HW-QoS-support,[],[],ssh://git@ohwr.org:7999/white-rabbit/wr-switch-hdl.git,https://ohwr.org/white-rabbit/wr-switch-hdl.git,https://ohwr.org/white-rabbit/wr-switch-hdl,https://ohwr.org/white-rabbit/wr-switch-hdl/-/blob/HW-QoS-support/README,0.0,,0,2019-03-07T17:27:45.400Z,9352,white-rabbit,white-rabbit,group,white-rabbit,,,https://ohwr.org/groups/white-rabbit
10985,Open hardware licences,Licences,Projects / Licences,licences,project/licences,2019-02-12T12:32:39.389Z,master,[],[],ssh://git@ohwr.org:7999/project/licences.git,https://ohwr.org/project/licences.git,https://ohwr.org/project/licences,,0.0,,0,2024-10-02T10:15:07.771Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10984,Companies using the Open Hardware Repository,Companies,Projects / Companies,companies,project/companies,2019-02-12T12:32:16.648Z,master,[],[],ssh://git@ohwr.org:7999/project/companies.git,https://ohwr.org/project/companies.git,https://ohwr.org/project/companies,,0.0,,1,2024-10-02T10:15:09.301Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10983,,Euro ADC 65M 14b 40cha tst PUMA-tst,Projects / Euro ADC 65M 14b 40cha tst PUMA-tst,euro-adc-65m-14b-40cha-tst,project/euro-adc-65m-14b-40cha-tst,2019-02-12T12:32:10.324Z,master,[],[],ssh://git@ohwr.org:7999/project/euro-adc-65m-14b-40cha-tst.git,https://ohwr.org/project/euro-adc-65m-14b-40cha-tst.git,https://ohwr.org/project/euro-adc-65m-14b-40cha-tst,,0.0,,0,2024-09-26T09:58:38.692Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10982,,Euro ADC 65M 14b 40cha sw PUMA-sw,Projects / Euro ADC 65M 14b 40cha sw PUMA-sw,euro-adc-65m-14b-40cha-sw,project/euro-adc-65m-14b-40cha-sw,2019-02-12T12:32:03.719Z,master,[],[],ssh://git@ohwr.org:7999/project/euro-adc-65m-14b-40cha-sw.git,https://ohwr.org/project/euro-adc-65m-14b-40cha-sw.git,https://ohwr.org/project/euro-adc-65m-14b-40cha-sw,,0.0,,0,2024-09-26T09:58:40.941Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10981,,Euro ADC 65M 14b 40cha hw PUMA-hw,Projects / Euro ADC 65M 14b 40cha hw PUMA-hw,euro-adc-65m-14b-40cha-hw,project/euro-adc-65m-14b-40cha-hw,2019-02-12T12:30:55.558Z,master,[],[],ssh://git@ohwr.org:7999/project/euro-adc-65m-14b-40cha-hw.git,https://ohwr.org/project/euro-adc-65m-14b-40cha-hw.git,https://ohwr.org/project/euro-adc-65m-14b-40cha-hw,,0.0,,0,2024-10-02T10:16:34.498Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10980,,Euro ADC 65M 14b 40cha gw PUMA-gw,Projects / Euro ADC 65M 14b 40cha gw PUMA-gw,euro-adc-65m-14b-40cha-gw,project/euro-adc-65m-14b-40cha-gw,2019-02-12T12:30:48.508Z,master,[],[],ssh://git@ohwr.org:7999/project/euro-adc-65m-14b-40cha-gw.git,https://ohwr.org/project/euro-adc-65m-14b-40cha-gw.git,https://ohwr.org/project/euro-adc-65m-14b-40cha-gw,https://ohwr.org/project/euro-adc-65m-14b-40cha-gw/-/blob/master/README.md,0.0,,0,2024-10-02T10:16:36.646Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10979,"Placeholder for cards in Eurocard format

",Eurocard,Projects / Eurocard,eurocard,project/eurocard,2019-02-12T12:30:47.037Z,main,[],[],ssh://git@ohwr.org:7999/project/eurocard.git,https://ohwr.org/project/eurocard.git,https://ohwr.org/project/eurocard,,0.0,,0,2019-02-12T12:30:47.037Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10978,"PUMA (Plataforma Utilizada para el Muestreo de Arapuca) is a
multi-channel digitizer designed to instrument the photon detection
system for the DUNE Photon Detection System. However, it may be useful
for other applications that require 40 - 64 channels of 14-bit digitzier
sampling at 10MSample/s - 65MSample/s.  
PUMA is based on the digitizer designed for the SoLiD short baseline
reactor neutrino detector. It is designed to be connected to external
signal conditioning modules, which are controlled by I2C.  
[More info at the Wiki
page](https://www.ohwr.org/project/euro-adc-65m-14b-40cha/wiki)

",Euro ADC 65M 14b 40cha PUMA,Projects / Euro ADC 65M 14b 40cha PUMA,euro-adc-65m-14b-40cha,project/euro-adc-65m-14b-40cha,2019-02-12T12:30:42.537Z,master,[],[],ssh://git@ohwr.org:7999/project/euro-adc-65m-14b-40cha.git,https://ohwr.org/project/euro-adc-65m-14b-40cha.git,https://ohwr.org/project/euro-adc-65m-14b-40cha,,0.0,,0,2024-10-02T10:16:38.612Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10977,,AIDA-2020 TLU - Testing,Projects / AIDA-2020 TLU - Testing,fmc-mtlu-tst,project/fmc-mtlu-tst,2019-02-12T12:30:40.802Z,main,[],[],ssh://git@ohwr.org:7999/project/fmc-mtlu-tst.git,https://ohwr.org/project/fmc-mtlu-tst.git,https://ohwr.org/project/fmc-mtlu-tst,,0.0,,0,2019-02-12T12:30:40.802Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10976,,AIDA-2020 TLU - Software,Projects / AIDA-2020 TLU - Software,fmc-mtlu-sw,project/fmc-mtlu-sw,2019-02-12T12:30:39.160Z,master,[],[],ssh://git@ohwr.org:7999/project/fmc-mtlu-sw.git,https://ohwr.org/project/fmc-mtlu-sw.git,https://ohwr.org/project/fmc-mtlu-sw,https://ohwr.org/project/fmc-mtlu-sw/-/blob/master/README.md,0.0,,1,2023-06-01T09:07:14.469Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10975,,AIDA-2020 TLU - Hardware,Projects / AIDA-2020 TLU - Hardware,fmc-mtlu-hw,project/fmc-mtlu-hw,2019-02-12T12:30:01.704Z,master,[],[],ssh://git@ohwr.org:7999/project/fmc-mtlu-hw.git,https://ohwr.org/project/fmc-mtlu-hw.git,https://ohwr.org/project/fmc-mtlu-hw,https://ohwr.org/project/fmc-mtlu-hw/-/blob/master/README.md,0.0,,1,2020-10-08T15:07:45.656Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10974,"FPGA Firmware ( ""Gateware"" ) for AIDA-2020 TLU and AIDA mini-TLU

Uses ""IPBus Build"" ( ipbb )

Build instructions at Instructions
[here](https://ohwr.org/project/fmc-mtlu-gw/wikis/Building-AIDA-2020-TLU-firmware)

",AIDA-2020 TLU - Gateware,Projects / AIDA-2020 TLU - Gateware,fmc-mtlu-gw,project/fmc-mtlu-gw,2019-02-12T12:29:50.683Z,master,[],[],ssh://git@ohwr.org:7999/project/fmc-mtlu-gw.git,https://ohwr.org/project/fmc-mtlu-gw.git,https://ohwr.org/project/fmc-mtlu-gw,,1.0,,1,2024-10-02T10:16:42.744Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10973,"TiCkS is a flexible White Rabbit based time-stamping board. It is based
on the SPEC board developed for the CTA collaboration. It provides an
interface to a CTA camera (Inputs: Read-out Trigger signals, Busy
Trigger), (Outputs: PPS signal , 10MHz clock, External trigger signal).

[More info at the Wiki
page](https://www.ohwr.org/project/spec-ticks/wiki)

",TiCkS,Projects / TiCkS,spec-ticks,project/spec-ticks,2019-02-12T12:29:44.950Z,master,[],[],ssh://git@ohwr.org:7999/project/spec-ticks.git,https://ohwr.org/project/spec-ticks.git,https://ohwr.org/project/spec-ticks,https://ohwr.org/project/spec-ticks/-/blob/master/README.md,0.0,,0,2024-10-02T10:16:47.121Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10972,"White Rabbit Switch WRS-3/18 (hardware version 3.4) with modified SCB
prepared for the low-jitter daughterboard and modified backplane.  
Commercially available.  
[More info at the Wiki
page](https://www.ohwr.org/project/wrs-ljdprep-hw/wiki)

",WRS-318 with LJD prepared hardware,Projects / WRS-318 with LJD prepared hardware,wrs-ljdprep-hw,project/wrs-ljdprep-hw,2019-02-12T12:29:22.539Z,master,[],[],ssh://git@ohwr.org:7999/project/wrs-ljdprep-hw.git,https://ohwr.org/project/wrs-ljdprep-hw.git,https://ohwr.org/project/wrs-ljdprep-hw,,0.0,,0,2024-10-02T10:16:48.585Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10971,"This project covers the hardware development of version 4 of the White Rabbit switch (WRS-v4).  
[More info at the Wiki
page](https://www.ohwr.org/project/wr-switch-hw-v4/wiki)

",White Rabbit Switch - Hardware V4,Projects / White Rabbit Switch - Hardware V4,wr-switch-hw-v4,project/wr-switch-hw-v4,2019-02-12T12:29:18.247Z,master,[],[],ssh://git@ohwr.org:7999/project/wr-switch-hw-v4.git,https://ohwr.org/project/wr-switch-hw-v4.git,https://ohwr.org/project/wr-switch-hw-v4,https://ohwr.org/project/wr-switch-hw-v4/-/blob/master/README.md,0.0,,1,2025-02-04T15:18:12.557Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10970,"VME projects are sub-projects of this ohwr project.  
See all sub-projects for more information.

",VME,Projects / VME,vme,project/vme,2019-02-12T12:29:16.555Z,main,[],[],ssh://git@ohwr.org:7999/project/vme.git,https://ohwr.org/project/vme.git,https://ohwr.org/project/vme,,0.0,,0,2019-02-12T12:29:16.555Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10968,"FMC 4 channel Serial link transceiver with differential LEMO connectors.
Differential signalling with Vh=3.3V and Vl=1.7V.  
[More info at the Wiki
page](https://www.ohwr.org/project/fmc-dtxrx-4cha/wiki)

",FMC-DTXRX-4CHA,Projects / FMC-DTXRX-4CHA,fmc-dtxrx-4cha,project/fmc-dtxrx-4cha,2019-02-12T12:28:55.075Z,master,[],[],ssh://git@ohwr.org:7999/project/fmc-dtxrx-4cha.git,https://ohwr.org/project/fmc-dtxrx-4cha.git,https://ohwr.org/project/fmc-dtxrx-4cha,,0.0,,0,2024-10-02T10:16:58.347Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10966,"Training project to learn about Power Delivery Network measurements and
simulations. With a PDN usually the power distribution on a PCB is
meant.  
This project describes a PCB with additional connectors to measure the
power distribution quality.  
[More info at the Wiki page](https://www.ohwr.org/project/hellopdn/wiki)

",Hello PDN,Projects / Hello PDN,hellopdn,project/hellopdn,2019-02-12T12:28:23.653Z,master,[],[],ssh://git@ohwr.org:7999/project/hellopdn.git,https://ohwr.org/project/hellopdn.git,https://ohwr.org/project/hellopdn,,0.0,,0,2024-10-02T10:16:59.742Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10965,"Placeholder for projects where its main purpose is training

",Training projects,Projects / Training projects,training,project/training,2019-02-12T12:28:22.089Z,main,[],[],ssh://git@ohwr.org:7999/project/training.git,https://ohwr.org/project/training.git,https://ohwr.org/project/training,,0.0,,0,2019-02-12T12:28:22.089Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10964,"This is a PCB-design + Arduino firmware for an Ethernet-controlled 1:8
RF-multiplexer. It allows selecting as output one of eight
input-channels, as commonly used e.g. in timing-laboratories when one
wants to measure many RF-sources (clock outputs like 1PPS or 10MHz) with
a single instrument (frequency or time-interval counter).  
The design is for two independent MUX-boards to fit in a 1U 19” rack
enclosure.  
For more information, see the
[wiki](https://www.ohwr.org/project/rf-mux-8ch/wikis/)

",RF Multiplexer 8ch 1GHz,Projects / RF Multiplexer 8ch 1GHz,rf-mux-8ch,project/rf-mux-8ch,2019-02-12T12:28:05.123Z,master,[],[],ssh://git@ohwr.org:7999/project/rf-mux-8ch.git,https://ohwr.org/project/rf-mux-8ch.git,https://ohwr.org/project/rf-mux-8ch,https://ohwr.org/project/rf-mux-8ch/-/blob/master/README.txt,0.0,,1,2024-10-02T10:17:02.805Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10963,"LIST is a trigger distribution system based on White Rabbit. It can
receive a trigger from a “cloud” of devices and distribute it to all
relevant devices to for example freeze their acquisition buffers. The
latency between reception and transmission of a trigger is done with a
low and notably **fixed latency**, with an accuracy of better than 1
ns.  
The hardware of the LIST nodes is based on the SVEC FMC carrier equipped
with a FMC TDC mezzanine and a Fine Delay mezzanine.  
[More info at the Wiki page](https://www.ohwr.org/project/list/wiki)

",LHC Instability Trigger Distribution LIST,Projects / LHC Instability Trigger Distribution LIST,list,project/list,2019-02-12T12:27:53.411Z,master,[],[],ssh://git@ohwr.org:7999/project/list.git,https://ohwr.org/project/list.git,https://ohwr.org/project/list,https://ohwr.org/project/list/-/blob/master/README.md,0.0,,0,2024-10-02T10:17:05.160Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10962,"This project contains gateware for the Distributed IO Tier demonstrator
according to the CERN Warm Interlocks specification

",DIOT WIC Gateware,Projects / DIOT WIC Gateware,diot-wic-gw,project/diot-wic-gw,2019-02-12T12:27:44.620Z,master,[],[],ssh://git@ohwr.org:7999/project/diot-wic-gw.git,https://ohwr.org/project/diot-wic-gw.git,https://ohwr.org/project/diot-wic-gw,https://ohwr.org/project/diot-wic-gw/-/blob/master/README,0.0,https://ohwr.org/uploads/-/system/project/avatar/10962/logo_black_1_.png,0,2024-10-02T10:17:06.580Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10961,"Intel Arria V based VME64x carrier for one **FMC+** mezzanine with six SFP connectors, DDR3 memory and clocking resources to support White Rabbit. For more details please refer to the [wiki pages](https://ohwr.org/project/vfc-hs/wikis/home).",VME FMC Carrier - VFC-HS,Projects / VME FMC Carrier - VFC-HS,vfc-hs,project/vfc-hs,2019-02-12T12:27:29.664Z,master,[],[],ssh://git@ohwr.org:7999/project/vfc-hs.git,https://ohwr.org/project/vfc-hs.git,https://ohwr.org/project/vfc-hs,,0.0,,2,2024-10-02T10:17:08.276Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10960,"The OPT ADC 10k 32b 1cha is a single channel 10kSPS 32 bit ADC card in
the format defined by the CERN TE-EPC group for use with the Function
Generator Controller (FGC 3.2) . It is also known under the name
HPM7177.

",OPT-ADC-10k-32b-1cha HPM7177,Projects / OPT-ADC-10k-32b-1cha HPM7177,opt-adc-10k-32b-1cha,project/opt-adc-10k-32b-1cha,2019-02-12T12:27:09.024Z,master,[],[],ssh://git@ohwr.org:7999/project/opt-adc-10k-32b-1cha.git,https://ohwr.org/project/opt-adc-10k-32b-1cha.git,https://ohwr.org/project/opt-adc-10k-32b-1cha,,0.0,,0,2025-02-03T14:21:52.712Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10959,"A radiation-tolerant digital I/O module with sixteen 24 Volt optically
isolated inputs and outputs. 3U module with AirMax backplane connector
for DIOT crate.

",DIOT DIO 16ch opt 24V,Projects / DIOT DIO 16ch opt 24V,diot-dio-16ch-opt-24v,project/diot-dio-16ch-opt-24v,2019-02-12T12:26:57.050Z,master,[],[],ssh://git@ohwr.org:7999/project/diot-dio-16ch-opt-24v.git,https://ohwr.org/project/diot-dio-16ch-opt-24v.git,https://ohwr.org/project/diot-dio-16ch-opt-24v,,0.0,https://ohwr.org/uploads/-/system/project/avatar/10959/logo_black_1_.png,0,2024-10-02T10:17:11.992Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10958,"Distributed I/O Tier - these are electronics modules installed close to
a particle accelerator in radiation-exposed or radiation-free areas
controlled by the master in the Front-end tier over the fieldbus.  
These are usually FPGA-based boards sampling digital and analog inputs,
driving outputs and performing various safety critical operations.  
[More info at the Wiki page](https://www.ohwr.org/project/diot/wiki)

",DIOT - Distributed IO Tier,Projects / DIOT - Distributed IO Tier,diot,project/diot,2019-02-12T12:26:50.515Z,master,[],[],ssh://git@ohwr.org:7999/project/diot.git,https://ohwr.org/project/diot.git,https://ohwr.org/project/diot,,0.0,https://ohwr.org/uploads/-/system/project/avatar/10958/logo_black.png,2,2025-01-30T10:42:32.322Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10957,"The CTR FMC is an FMC card that can be used, in conjunction with the
Simple PCIe FMC carrier (SPEC), to design a General Machine Timing (GMT)
Receiver.  
[More info at the Wiki
page](https://www.ohwr.org/project/ctr-fmc-5chttla/wiki)

",CTR FMC 5 CH TTL RS485,Projects / CTR FMC 5 CH TTL RS485,ctr-fmc-5chttla,project/ctr-fmc-5chttla,2019-02-12T12:26:17.627Z,master,[],[],ssh://git@ohwr.org:7999/project/ctr-fmc-5chttla.git,https://ohwr.org/project/ctr-fmc-5chttla.git,https://ohwr.org/project/ctr-fmc-5chttla,,0.0,,0,2024-10-02T10:17:15.984Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10956,"Radiation tolerant LED luminaires. Currently in production with two manufacturers.
[More info at the Wiki
page](https://www.ohwr.org/project/radtol-led-luminaire/wiki)

",Radiation Tolerant LED Luminaire,Projects / Radiation Tolerant LED Luminaire,radtol-led-luminaire,project/radtol-led-luminaire,2019-02-12T12:25:58.271Z,master,"['GaN', 'LED', 'hard-hard', 'lighting', 'rad hard', 'radiation', 'tolerant', 'wide bandgap']","['GaN', 'LED', 'hard-hard', 'lighting', 'rad hard', 'radiation', 'tolerant', 'wide bandgap']",ssh://git@ohwr.org:7999/project/radtol-led-luminaire.git,https://ohwr.org/project/radtol-led-luminaire.git,https://ohwr.org/project/radtol-led-luminaire,,0.0,,0,2024-10-02T10:17:17.708Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10955,"A plug\&play mini-module for flexible White Rabbit integration. The SFP
fibre-optic module should be implemented on the carrier board.  
[More info at the Wiki
page](https://www.ohwr.org/project/mini-wr/wiki)

",Mini-WR,Projects / Mini-WR,mini-wr,project/mini-wr,2019-02-12T12:25:10.932Z,master,[],[],ssh://git@ohwr.org:7999/project/mini-wr.git,https://ohwr.org/project/mini-wr.git,https://ohwr.org/project/mini-wr,,0.0,,0,2024-10-02T10:17:18.999Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10954,"Fanless version of the White Rabbit Switch WRS-3/18 (hardware version
3.4) with the low-jitter daughterboard integrated.  
[More info at the Wiki
page](https://www.ohwr.org/project/wrs-fl-hw/wiki)

",WRS Fan-less hardware,Projects / WRS Fan-less hardware,wrs-fl-hw,project/wrs-fl-hw,2019-02-12T12:22:47.668Z,master,[],[],ssh://git@ohwr.org:7999/project/wrs-fl-hw.git,https://ohwr.org/project/wrs-fl-hw.git,https://ohwr.org/project/wrs-fl-hw,,0.0,,0,2024-10-02T10:17:27.961Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10953,"VHDL coding style document to be used at ohwr.org  
The project contains also a tool to automatically check the coding
style.  
[More info at the Wiki
page](https://www.ohwr.org/project/vhdl-style/wiki)

",VHDL Coding Style,Projects / VHDL Coding Style,vhdl-style,project/vhdl-style,2019-02-12T12:22:33.062Z,master,[],[],ssh://git@ohwr.org:7999/project/vhdl-style.git,https://ohwr.org/project/vhdl-style.git,https://ohwr.org/project/vhdl-style,https://ohwr.org/project/vhdl-style/-/blob/master/README,0.0,,0,2024-10-02T10:17:30.085Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10952,"A simple 4-lane PCIe carrier for a FPGA Mezzanine Card (VITA 57). It
supports the White Rabbit timing and control network.  
[More info at the Wiki page](https://www.ohwr.org/project/spec7/wiki)

",SPEC7,Projects / SPEC7,spec7,project/spec7,2019-02-12T12:20:57.203Z,master,[],[],ssh://git@ohwr.org:7999/project/spec7.git,https://ohwr.org/project/spec7.git,https://ohwr.org/project/spec7,https://ohwr.org/project/spec7/-/blob/master/README.md,0.0,,1,2024-10-02T10:17:33.850Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10951,"The High Performance WR Receiver module is an MTCA eRTM (slots 14-15) WR receiver with redundant uplinks, providing a variety of ultra-low jitter clock signals.

[More info at the Wiki
page](https://www.ohwr.org/project/ertm15-llrf-wr/wiki)

",High Performance MTCA.4 White Rabbit Receiver,Projects / High Performance MTCA.4 White Rabbit Receiver,ertm15-llrf-wr,project/ertm15-llrf-wr,2019-02-12T12:19:54.310Z,master,['wr mtca'],['wr mtca'],ssh://git@ohwr.org:7999/project/ertm15-llrf-wr.git,https://ohwr.org/project/ertm15-llrf-wr.git,https://ohwr.org/project/ertm15-llrf-wr,https://ohwr.org/project/ertm15-llrf-wr/-/blob/master/README,0.0,,3,2024-10-02T10:17:38.056Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10950,"PCIe to VME bridge. [More info at the Wiki page](https://www.ohwr.org/project/pcie-vme-bridge/wiki)

",VME SBC A25 PCIe to VME bridge,Projects / VME SBC A25 PCIe to VME bridge,vme-sbc-a25-pcie-vme-bridge,project/vme-sbc-a25-pcie-vme-bridge,2019-02-12T12:19:35.503Z,master,[],[],ssh://git@ohwr.org:7999/project/vme-sbc-a25-pcie-vme-bridge.git,https://ohwr.org/project/vme-sbc-a25-pcie-vme-bridge.git,https://ohwr.org/project/vme-sbc-a25-pcie-vme-bridge,https://ohwr.org/project/vme-sbc-a25-pcie-vme-bridge/-/blob/master/README.md,0.0,,0,2024-10-02T10:17:42.525Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10948,"High performance pulse and frequency distribution amplifier for time and
frequency metrology. The pulse distribution board is an 1:8-channel (1
Hz and up) logic-level distribution amplifier, while the frequency
distribution board is an 1:8-channel sine-wave (1-30 MHz) distribution
amplifier. Two 1:8 boards fit side-by-sides in a 1U 19"" rack enclosure,
with either BNC or SMA connectors.

For more information, see the
[wiki](https://www.ohwr.org/project/pda-8ch-fda-8ch/wiki)

",1-to-8 Pulse and Frequency Distribution Amplifier,Projects / 1-to-8 Pulse and Frequency Distribution Amplifier,pda-8ch-fda-8ch,project/pda-8ch-fda-8ch,2019-02-12T12:18:56.078Z,master,[],[],ssh://git@ohwr.org:7999/project/pda-8ch-fda-8ch.git,https://ohwr.org/project/pda-8ch-fda-8ch.git,https://ohwr.org/project/pda-8ch-fda-8ch,https://ohwr.org/project/pda-8ch-fda-8ch/-/blob/master/readme.txt,0.0,,0,2024-10-02T10:17:43.081Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10947,"A VME rear transition module providing fibre-optic and electrical
(RS485) inputs and outputs. Uses the
[CONV-TTL-RS485](https://www.ohwr.org/project/conv-ttl-rs485/wiki) as
front-module.  
[More info at the Wiki
page](https://www.ohwr.org/project/conv-rs485-opt-rtm/wiki)

",Conv RS485 OPT RTM,Projects / Conv RS485 OPT RTM,conv-rs485-opt-rtm,project/conv-rs485-opt-rtm,2019-02-12T12:18:06.003Z,master,"['RTM', 'VME']","['RTM', 'VME']",ssh://git@ohwr.org:7999/project/conv-rs485-opt-rtm.git,https://ohwr.org/project/conv-rs485-opt-rtm.git,https://ohwr.org/project/conv-rs485-opt-rtm,https://ohwr.org/project/conv-rs485-opt-rtm/-/blob/master/README.md,0.0,,0,2024-10-02T10:17:45.445Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10946,"FMC prototype board fmc-prt-lpc is providing means to develop FMC
systems for later integration to standard FMC Low-Pin Count form factor.
Breadboard area connecting LPC pins.  
[More info at the Wiki
page](https://www.ohwr.org/project/fmc-prt-lpc/wiki)

",FMC Prototype Board - LPC,Projects / FMC Prototype Board - LPC,fmc-prt-lpc,project/fmc-prt-lpc,2019-02-12T12:17:53.292Z,master,[],[],ssh://git@ohwr.org:7999/project/fmc-prt-lpc.git,https://ohwr.org/project/fmc-prt-lpc.git,https://ohwr.org/project/fmc-prt-lpc,,0.0,,0,2024-10-02T10:17:46.743Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10945,"*YAM* is a micro-controller core aiming at simple yet fast IO sequencing
with integer processing capabilities.  
*YAM* parameters may be assigned to fit many applications.  
The data width is scalable from 8 to any value (like 32 or larger) size.

",YAM  Yet Another Micro-controller,Projects / YAM  Yet Another Micro-controller,yam,project/yam,2019-02-12T12:17:38.215Z,master,[],[],ssh://git@ohwr.org:7999/project/yam.git,https://ohwr.org/project/yam.git,https://ohwr.org/project/yam,,0.0,,0,2024-10-02T10:17:48.170Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10944,"PC/104 OneBank Carrier for SoC Modules. The EMC2-DP is a PCIe/104
OneBank Carrier for a Trenz compatible SoC Module and has expansion for
a VITA57.1 FMC LPC I/O board and also has I/O pins, using a 100-way
Samtec RazorBeam connectors system.  
Board developed with EU funding on the [Artemis
EMC2](http://www.artemis-emc2.eu/) project.  
[More info at the Wiki page](https://www.ohwr.org/project/emc2-dp/wiki)

",EMC2-DP,Projects / EMC2-DP,emc2-dp,project/emc2-dp,2019-02-12T12:16:38.921Z,master,[],[],ssh://git@ohwr.org:7999/project/emc2-dp.git,https://ohwr.org/project/emc2-dp.git,https://ohwr.org/project/emc2-dp,,0.0,,1,2024-10-02T10:17:49.768Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10943,"PC/104 modules. PC/104 (or PC104) is a family of embedded computer
standards which define both form factors and computer buses. The
standard is modular, and allows to stack together boards from a variety
of COTS manufacturers to produce a customized embedded system.  
The designs are in sub-projects.

",PC104,Projects / PC104,pc104,project/pc104,2019-02-12T12:16:37.081Z,main,[],[],ssh://git@ohwr.org:7999/project/pc104.git,https://ohwr.org/project/pc104.git,https://ohwr.org/project/pc104,,0.0,,0,2019-02-12T12:16:37.081Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10942,"FMC nanoFIP is an interface card for the
[WorldFIP](https://www.ohwr.org/project/cern-fip/wikis/WorldFIP) network
in an LPC FMC form-factor.  
[More info at the Wiki
page](https://www.ohwr.org/project/fmc-nanofip/wiki)

",fmc-nanofip,Projects / fmc-nanofip,fmc-nanofip,project/fmc-nanofip,2019-02-12T12:15:16.322Z,master,[],[],ssh://git@ohwr.org:7999/project/fmc-nanofip.git,https://ohwr.org/project/fmc-nanofip.git,https://ohwr.org/project/fmc-nanofip,https://ohwr.org/project/fmc-nanofip/-/blob/master/README.md,0.0,,0,2024-04-11T15:24:54.185Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10941,"FMC VHDCI is a simple breakout board that connects signals from an Low
Pin Count (LPC) FMC connector to an VHDCI connector. The signals are not
buffered.  
[More info at the Wiki
page](https://www.ohwr.org/project/fmc-vhdci/wiki)

",FMC VHDCI,Projects / FMC VHDCI,fmc-vhdci,project/fmc-vhdci,2019-02-12T12:15:05.507Z,master,[],[],ssh://git@ohwr.org:7999/project/fmc-vhdci.git,https://ohwr.org/project/fmc-vhdci.git,https://ohwr.org/project/fmc-vhdci,,0.0,,0,2024-10-02T10:17:51.718Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10940,"A low cost, low complexity FMC carrier based on Xilinx Artix-7

",Artix Trivial FMC Carrier  ATFC ,Projects / Artix Trivial FMC Carrier  ATFC ,atfc,project/atfc,2019-02-12T12:14:42.992Z,master,[],[],ssh://git@ohwr.org:7999/project/atfc.git,https://ohwr.org/project/atfc.git,https://ohwr.org/project/atfc,https://ohwr.org/project/atfc/-/blob/master/README,0.0,,0,2024-10-02T10:18:01.751Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10939,"The differential to single ended cable driver is an active electronics
circuit that implements a high-current differential receiver, with
optional attenuation (0dB, 6dB, 10dB and 12dB available), polarity
inversion and ground lifting on input and output.  
[More info at the Wiki
page](https://www.ohwr.org/project/conv-diff-se-cable-driver/wiki)

",Conv-diff-se-cable-driver,Projects / Conv-diff-se-cable-driver,conv-diff-se-cable-driver,project/conv-diff-se-cable-driver,2019-02-12T12:14:25.957Z,master,[],[],ssh://git@ohwr.org:7999/project/conv-diff-se-cable-driver.git,https://ohwr.org/project/conv-diff-se-cable-driver.git,https://ohwr.org/project/conv-diff-se-cable-driver,,0.0,,0,2024-10-02T10:18:03.856Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10938,"LIBSFP is a software library that contains generic functions to access
SFP devices via I2C.

More info can be found on this
[wiki](https://www.ohwr.org/project/libsfp/wiki) page.

",libsfp,Projects / libsfp,libsfp,project/libsfp,2019-02-12T12:14:15.532Z,master,[],[],ssh://git@ohwr.org:7999/project/libsfp.git,https://ohwr.org/project/libsfp.git,https://ohwr.org/project/libsfp,https://ohwr.org/project/libsfp/-/blob/master/Readme.txt,0.0,,0,2024-10-02T10:18:04.934Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10937,"The aim of the board is to improve the performance of the WR Switch
using an external PLL and a new VCTCXO.  
[More info at the Wiki
page](https://www.ohwr.org/project/wrs-low-jitter/wiki)

",WRS Low Jitter Daughterboard,Projects / WRS Low Jitter Daughterboard,wrs-low-jitter,project/wrs-low-jitter,2019-02-12T12:12:55.963Z,master,[],[],ssh://git@ohwr.org:7999/project/wrs-low-jitter.git,https://ohwr.org/project/wrs-low-jitter.git,https://ohwr.org/project/wrs-low-jitter,,0.0,,0,2025-01-27T10:09:43.000Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10936,"[More info at the Wiki
page](https://www.ohwr.org/project/gw-sw-dev-framework/wiki)

",GWSW Development Framework,Projects / GWSW Development Framework,gw-sw-dev-framework,project/gw-sw-dev-framework,2019-02-12T12:12:47.785Z,master,[],[],ssh://git@ohwr.org:7999/project/gw-sw-dev-framework.git,https://ohwr.org/project/gw-sw-dev-framework.git,https://ohwr.org/project/gw-sw-dev-framework,,0.0,,0,2024-10-02T10:18:08.418Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10935,"fmc-adc-subsamp125m14b4cha is a 4 channel 125MSPS 14 bit ADC low pin
count FPGA Mezzanine Card (VITA 57). It is designed for undersampling
signals with a frequency higher than 125 MHz.  
[More info at the Wiki
page](https://www.ohwr.org/project/fmc-adc-subsamp125m14b4cha/wiki)

",FMC ADC subsamp 125M 14b 4cha,Projects / FMC ADC subsamp 125M 14b 4cha,fmc-adc-subsamp125m14b4cha,project/fmc-adc-subsamp125m14b4cha,2019-02-12T12:12:33.952Z,master,[],[],ssh://git@ohwr.org:7999/project/fmc-adc-subsamp125m14b4cha.git,https://ohwr.org/project/fmc-adc-subsamp125m14b4cha.git,https://ohwr.org/project/fmc-adc-subsamp125m14b4cha,https://ohwr.org/project/fmc-adc-subsamp125m14b4cha/-/blob/master/README,0.0,,0,2024-10-02T10:18:10.249Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10934,"Board to prototype different filters to be used with the Multi-channel
Time Interval Counter.

",Filter-prototype-board,Projects / Filter-prototype-board,fpb,project/fpb,2019-02-12T12:12:21.944Z,master,[],[],ssh://git@ohwr.org:7999/project/fpb.git,https://ohwr.org/project/fpb.git,https://ohwr.org/project/fpb,,0.0,,0,2024-10-02T10:18:11.685Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10933,"The programmable bench power supply project was an attempt to create
reliable, modular, open and programmable power supply. Various voltage
single range operation (i.e. 0 – 30 V, 0 – 40 V or 0 – 50 V per
channel). Various current single range operation (i.e. 0 – 3 A or 0 – 5
A per channel)

[More info at the Wiki page](https://www.ohwr.org/project/eez-psu/wiki)

",eez-psu,Projects / eez-psu,eez-psu,project/eez-psu,2019-02-12T12:12:12.988Z,master,[],[],ssh://git@ohwr.org:7999/project/eez-psu.git,https://ohwr.org/project/eez-psu.git,https://ohwr.org/project/eez-psu,,0.0,,0,2024-10-02T10:18:13.198Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10932,"Production and functional tests for PandABox.

[More info at the Wiki
page](https://www.ohwr.org/project/pandabox-tst/wiki)

",PandABox-tst,Projects / PandABox-tst,pandabox-tst,project/pandabox-tst,2019-02-12T12:11:47.882Z,master,[],[],ssh://git@ohwr.org:7999/project/pandabox-tst.git,https://ohwr.org/project/pandabox-tst.git,https://ohwr.org/project/pandabox-tst,https://ohwr.org/project/pandabox-tst/-/blob/master/README.md,0.0,,0,2024-10-02T10:18:15.022Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10931,"Gateware (HDL design) for PandABox is common between all platforms using
the PandABlocks framework and is developed on Github:

[PandABlocks-FPGA Github
repository](https://github.com/PandABlocks/PandABlocks-FPGA)

",PandABox-gw,Projects / PandABox-gw,pandabox-gw,project/pandabox-gw,2019-02-12T12:11:46.032Z,main,[],[],ssh://git@ohwr.org:7999/project/pandabox-gw.git,https://ohwr.org/project/pandabox-gw.git,https://ohwr.org/project/pandabox-gw,,0.0,,0,2019-02-12T12:11:46.032Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10930,"Software to support the PandABox is common between all platforms using
the PandABlocks framework and is developed on Github:

[PandABlocks-rootfs: Github repository for building onboard rootfs from
source](https://github.com/PandABlocks/PandABlocks-rootfs)  
[PandABlocks-server: Github repository for onboard TCP
server](https://github.com/PandABlocks/PandABlocks-server)  
[PandABlocks-webserver: Github repository for onboard
webserver](https://github.com/PandABlocks/PandABlocks-webserver)  
[PandABlocks-client: Github repository for Python client side
tools](https://github.com/PandABlocks/PandABlocks-client)  
[ADPandABlocks: Github repository for EPICS areaDetector
driver](https://github.com/PandABlocks/ADPandABlocks)

",PandABox-sw,Projects / PandABox-sw,pandabox-sw,project/pandabox-sw,2019-02-12T12:11:44.118Z,main,[],[],ssh://git@ohwr.org:7999/project/pandabox-sw.git,https://ohwr.org/project/pandabox-sw.git,https://ohwr.org/project/pandabox-sw,,0.0,,0,2019-02-12T12:11:44.118Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10929,"Hardware design of the PandABox. Includes schematics, PCB layout and
manufacturing files.

",PandABox-hw,Projects / PandABox-hw,pandabox-hw,project/pandabox-hw,2019-02-12T12:11:09.537Z,master,[],[],ssh://git@ohwr.org:7999/project/pandabox-hw.git,https://ohwr.org/project/pandabox-hw.git,https://ohwr.org/project/pandabox-hw,https://ohwr.org/project/pandabox-hw/-/blob/master/README.md,0.0,,0,2024-05-27T14:46:16.026Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10928,"PandA Motion Project is a collaboration between SOLEIL and DIAMOND to
upgrade their “Position and Acquisition” processing platform. PandA will
provide a common encoder processing platform based on Zynq 7030 and
supporting multiple encoder standards (incremental, SSI, BISS...). It
will deliver synchronous triggering and data capture capabilities.

[More info at the Wiki page](https://www.ohwr.org/project/pandabox/wiki)

",PandABox,Projects / PandABox,pandabox,project/pandabox,2019-02-12T12:10:14.316Z,master,[],[],ssh://git@ohwr.org:7999/project/pandabox.git,https://ohwr.org/project/pandabox.git,https://ohwr.org/project/pandabox,,0.0,,0,2024-10-02T10:18:17.339Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10927,"A White Rabbit Timing Receiver in AMC (Advanced Mezzanine Card,
AdvancedMC) format.  
[More info at the Wiki page](https://www.ohwr.org/project/tr-amc/wiki)

",tr-amc,Projects / tr-amc,tr-amc,project/tr-amc,2019-02-12T12:09:43.936Z,master,[],[],ssh://git@ohwr.org:7999/project/tr-amc.git,https://ohwr.org/project/tr-amc.git,https://ohwr.org/project/tr-amc,https://ohwr.org/project/tr-amc/-/blob/master/README.md,0.0,,1,2024-10-02T10:18:23.005Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10926,"WRAP, White RAbbit Pluggable, is a plug-in board providing easy-to-use
WR functionality. Among others it provides direct 10MHz and PPS (pulse
per second) outputs.

",WRAP,Projects / WRAP,wrap,project/wrap,2019-02-12T12:09:00.060Z,master,[],[],ssh://git@ohwr.org:7999/project/wrap.git,https://ohwr.org/project/wrap.git,https://ohwr.org/project/wrap,,0.0,,1,2024-10-02T10:18:24.586Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10925,"FMC DIO 32CH LVDS is a universal 32-channel bi-directional LVDS card. It
uses a VHDCI connector compatible with standard SCSI cables. There is
also micro-HDMI connector on the front panel with I2C and some LVDS
signals so that standard HDMI cables can be used. Each channel may be
optionally AC-coupled (0R resistors need to be removed) and is
ESD-protected. All channels are terminated to 1.65V by two 50 Ohm
resistors. The direction of each channel is programmed via a serial
interface.  
The VHDCI connector has also 3.3V supply and buffered I2C interface. The
direction of each channel is programmed via a serial interface.  
[More info at the Wiki
page](https://www.ohwr.org/project/fmc-dio-32chlvdsa/wiki)

",FMC DIO 32ch lvds a,Projects / FMC DIO 32ch lvds a,fmc-dio-32chlvdsa,project/fmc-dio-32chlvdsa,2019-02-12T12:08:44.103Z,master,[],[],ssh://git@ohwr.org:7999/project/fmc-dio-32chlvdsa.git,https://ohwr.org/project/fmc-dio-32chlvdsa.git,https://ohwr.org/project/fmc-dio-32chlvdsa,,0.0,,0,2024-10-02T10:18:27.023Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10924,"Project exploring the current limits of White Rabbit timing distribution
and how to obtain the best possible jitter and Allan Deviation
performance

",White Rabbit low jitter,Projects / White Rabbit low jitter,wr-low-jitter,project/wr-low-jitter,2019-02-12T12:08:12.212Z,master,[],[],ssh://git@ohwr.org:7999/project/wr-low-jitter.git,https://ohwr.org/project/wr-low-jitter.git,https://ohwr.org/project/wr-low-jitter,,0.0,,1,2024-10-02T10:18:28.710Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10923,"Hardware and software (libraries and GUI) to implement the SFF-8472
standard “Diagnostic Monitoring Interface for Optical Transceivers”. The
hardware implements four SFP+s that can be exercised in parallel. To
access the I2C interfaces a USB to I2C chip is used.  
[More info at the Wiki
page](https://www.ohwr.org/project/sfp-plus-i2c/wiki)

",sfp-plus-i2c,Projects / sfp-plus-i2c,sfp-plus-i2c,project/sfp-plus-i2c,2019-02-12T12:06:53.476Z,master,[],[],ssh://git@ohwr.org:7999/project/sfp-plus-i2c.git,https://ohwr.org/project/sfp-plus-i2c.git,https://ohwr.org/project/sfp-plus-i2c,https://ohwr.org/project/sfp-plus-i2c/-/blob/master/README,0.0,,0,2024-12-09T10:29:21.805Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10922,"Projects around SFP modules (Small-Form-factor Pluggable optical
transceivers) are subprojects of this project.

",SFP,Projects / SFP,sfp,project/sfp,2019-02-12T12:06:51.784Z,main,[],[],ssh://git@ohwr.org:7999/project/sfp.git,https://ohwr.org/project/sfp.git,https://ohwr.org/project/sfp,,0.0,,0,2019-02-12T12:06:51.784Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10921,"Project containing information about how to calibrate White Rabbit
gear.  
See also https://www.ohwr.org/project/white-rabbit/wikis/Calibration  
[More info at the Wiki
page](https://www.ohwr.org/project/wr-calibration/wiki)

",White Rabbit Calibration,Projects / White Rabbit Calibration,wr-calibration,project/wr-calibration,2019-02-12T12:05:44.005Z,master,[],[],ssh://git@ohwr.org:7999/project/wr-calibration.git,https://ohwr.org/project/wr-calibration.git,https://ohwr.org/project/wr-calibration,https://ohwr.org/project/wr-calibration/-/blob/master/README,0.0,,0,2024-10-02T10:18:35.748Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10920,,spec-stress-test,Projects / spec-stress-test,spec-stress-test,project/spec-stress-test,2019-02-12T12:05:41.025Z,master,[],[],ssh://git@ohwr.org:7999/project/spec-stress-test.git,https://ohwr.org/project/spec-stress-test.git,https://ohwr.org/project/spec-stress-test,,0.0,,0,2019-02-12T12:05:41.025Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10919,"On the Open Hardware Repository you can find projects which use soft-cpu
(e.g. mock-turtle, white-rabbit-core, wr-switch). This project offers a
toolchain that you can use to compile your code for the soft-cpu target
(only LM32 for the time being).  
The project provides only the necessary makefiles to build the
toolchain, so it will be necessary to compile the toolchain.

",soft-cpu toolchains,Projects / soft-cpu toolchains,soft-cpu-toolchains,project/soft-cpu-toolchains,2019-02-12T12:05:32.951Z,master,[],[],ssh://git@ohwr.org:7999/project/soft-cpu-toolchains.git,https://ohwr.org/project/soft-cpu-toolchains.git,https://ohwr.org/project/soft-cpu-toolchains,,0.0,,0,2024-10-02T10:18:37.666Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10918,"MMC firmware written in C, running on a microcontroller inside the
board. Written first for the [AFC
boards](https://www.ohwr.org/project/afc/wiki). This firmware is thought
to be generic enough so other AMC boards could reuse a large part of it.
For now, the only ""port"" is for the LPC1764 chip, but more are planned.

",openMMC,Projects / openMMC,afc-ipmi-sw,project/afc-ipmi-sw,2019-02-12T12:05:18.366Z,master,[],[],ssh://git@ohwr.org:7999/project/afc-ipmi-sw.git,https://ohwr.org/project/afc-ipmi-sw.git,https://ohwr.org/project/afc-ipmi-sw,https://ohwr.org/project/afc-ipmi-sw/-/blob/master/README.md,0.0,,0,2024-10-02T10:18:39.773Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10917,"Multi-channel Time Interval Counter and fine delay generator. Housed in
a 19"" module. Research project.  
[More info at the Wiki
page](https://www.ohwr.org/project/r19-tdc-del-a/wiki)

",Multi-channel Time Interval Counter and fine delay generator,Projects / Multi-channel Time Interval Counter and fine delay generator,r19-tdc-del-a,project/r19-tdc-del-a,2019-02-12T12:01:52.578Z,master,[],[],ssh://git@ohwr.org:7999/project/r19-tdc-del-a.git,https://ohwr.org/project/r19-tdc-del-a.git,https://ohwr.org/project/r19-tdc-del-a,https://ohwr.org/project/r19-tdc-del-a/-/blob/master/README,0.0,,0,2024-09-23T15:23:55.563Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10916,"Projects that fit in 19 inch racks. Also known as pizza-box projects.

",Rackable 19 projects,Projects / Rackable 19 projects,rack-19,project/rack-19,2019-02-12T12:01:49.801Z,main,[],[],ssh://git@ohwr.org:7999/project/rack-19.git,https://ohwr.org/project/rack-19.git,https://ohwr.org/project/rack-19,,0.0,,0,2019-02-12T12:01:49.801Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10915,"The Dual AMC carrier enables stand-alone operation of an AMC FMC carrier
or any other AMC board. It has 4 SFP connectors, 2 QSFP cages, 8 trigger
I/O routed to the MLVDS ports and power entry. Two versions, allowing
the use of a RTM or not.  
[More info at the Wiki
page](https://www.ohwr.org/project/amc-carrier-2-sl/wiki)

",Dual AMC Carrier,Projects / Dual AMC Carrier,amc-carrier-2-sl,project/amc-carrier-2-sl,2019-02-12T12:01:34.992Z,master,[],[],ssh://git@ohwr.org:7999/project/amc-carrier-2-sl.git,https://ohwr.org/project/amc-carrier-2-sl.git,https://ohwr.org/project/amc-carrier-2-sl,,0.0,,0,2024-10-02T10:18:47.291Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10914,"Control of instrumentation over a White Rabbit network. Define and
implement a standardized communication protocol for instrumentation over
a White Rabbit network (precise synchronization and timestamping; remote
control and test sequence programming; message exchanging and event
distribution).

[More info at the Wiki page](https://www.ohwr.org/project/wrxi/wiki)

",WRXI - White Rabbit eXtensions for Instrumentation,Projects / WRXI - White Rabbit eXtensions for Instrumentation,wrxi,project/wrxi,2019-02-12T12:00:56.988Z,master,[],[],ssh://git@ohwr.org:7999/project/wrxi.git,https://ohwr.org/project/wrxi.git,https://ohwr.org/project/wrxi,,0.0,,0,2024-10-02T10:18:48.794Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10913,"A fine delay generator in FMC LPC format with 1 input and 2 outputs. The
resolution is 1 ns. Optimized for high frequency pulse repetition rates
synchronized to an external clock.  
[More info at the Wiki
page](https://www.ohwr.org/project/fmc-del-1ns-2cha/wiki)

",FMC DEL 1ns 2cha,Projects / FMC DEL 1ns 2cha,fmc-del-1ns-2cha,project/fmc-del-1ns-2cha,2019-02-12T12:00:19.217Z,master,[],[],ssh://git@ohwr.org:7999/project/fmc-del-1ns-2cha.git,https://ohwr.org/project/fmc-del-1ns-2cha.git,https://ohwr.org/project/fmc-del-1ns-2cha,https://ohwr.org/project/fmc-del-1ns-2cha/-/blob/master/README.txt,0.0,,2,2024-10-24T12:55:52.029Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10912,"A carrier for two low pin count FPGA Mezzanine Cards (VITA 57), analog
inputs and fail-safe functionality. It has memory and clocking resources
and supports the White Rabbit timing and control network. Stand-alone
board for use in a 'pizza-box'.  
[More info at the Wiki page](https://www.ohwr.org/project/fasec/wiki)

",FPGA and ARM SoC FMC Carrier FASEC,Projects / FPGA and ARM SoC FMC Carrier FASEC,fasec,project/fasec,2019-02-12T11:58:51.038Z,master,[],[],ssh://git@ohwr.org:7999/project/fasec.git,https://ohwr.org/project/fasec.git,https://ohwr.org/project/fasec,https://ohwr.org/project/fasec/-/blob/master/README.md,0.0,,1,2024-10-02T10:18:55.775Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10911,"FMC with 4 SFPs.  
[More info at the Wiki
page](https://www.ohwr.org/project/fmc-sfp-4cha/wiki)

",FMC SFP 4cha,Projects / FMC SFP 4cha,fmc-sfp-4cha,project/fmc-sfp-4cha,2019-02-12T11:58:39.770Z,master,[],[],ssh://git@ohwr.org:7999/project/fmc-sfp-4cha.git,https://ohwr.org/project/fmc-sfp-4cha.git,https://ohwr.org/project/fmc-sfp-4cha,,0.0,,0,2024-10-02T10:18:57.642Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10910,"Data centre environmental sensor - Dust, Temperature, Relative Humidity,
Fan - Serial 1 channel - version 1.  
An environmental sensor for Data Centers that continuously measures
airborne particle density in high airflow as well as temperature and
relative humidity. It can control its fan speed if needed (PWM
controlled fans) and monitors FAN rotational speed (tachometer equipped
fans) for precise airflow control and monitoring. It is close to
maintenance free and can be integrated in compact enclosures (for
example tape drive tray or even an ATX PSU case...).  
[More info at the Wiki
page](https://www.ohwr.org/project/dces-dtrhf-ser1ch-v1/wiki)

",DCES-DTRHF-SER1CH-v1 ,Projects / DCES-DTRHF-SER1CH-v1 ,dces-dtrhf-ser1ch-v1,project/dces-dtrhf-ser1ch-v1,2019-02-12T11:58:12.477Z,master,[],[],ssh://git@ohwr.org:7999/project/dces-dtrhf-ser1ch-v1.git,https://ohwr.org/project/dces-dtrhf-ser1ch-v1.git,https://ohwr.org/project/dces-dtrhf-ser1ch-v1,https://ohwr.org/project/dces-dtrhf-ser1ch-v1/-/blob/master/README.rst,0.0,,0,2024-10-02T10:18:59.155Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10909,"Project holding Data centre environmental sensor projects. E.g.
measuring humidity, dust, temperature etc.

",Data centre environmental sensors,Projects / Data centre environmental sensors,dces,project/dces,2019-02-12T11:58:10.899Z,main,[],[],ssh://git@ohwr.org:7999/project/dces.git,https://ohwr.org/project/dces.git,https://ohwr.org/project/dces,,0.0,,0,2019-02-12T11:58:10.899Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10908,"FMC WorldFIP is an interface card for the
[WorldFIP](https://www.ohwr.org/project/cern-fip/wikis/WorldFIP) network
in an LPC FMC form-factor.  
The hardware is described in the [FMC WorldFIP
project](https://www.ohwr.org/project/fmc-masterfip/wiki).

",MasterFIP - Hardware,Projects / MasterFIP - Hardware,masterfip-hw,project/masterfip-hw,2019-02-12T11:58:01.103Z,master,[],[],ssh://git@ohwr.org:7999/project/masterfip-hw.git,https://ohwr.org/project/masterfip-hw.git,https://ohwr.org/project/masterfip-hw,,0.0,,0,2024-10-02T10:19:00.850Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10907,"A VME rear transition module providing 24 Dry Contact Inputs. Dry
contact switch connecting 24V to ground (limited to 20mA). Uses the
[SVEC](https://www.ohwr.org/project/svec/wiki) as front-module.  
[More info at the Wiki
page](https://www.ohwr.org/project/vmr-dio-24ch-dci/wiki) *CANCELLED
PROJECT*

",VMR-DIO-24ch-DCI,Projects / VMR-DIO-24ch-DCI,vmr-dio-24ch-dci,project/vmr-dio-24ch-dci,2019-02-12T11:57:24.457Z,master,[],[],ssh://git@ohwr.org:7999/project/vmr-dio-24ch-dci.git,https://ohwr.org/project/vmr-dio-24ch-dci.git,https://ohwr.org/project/vmr-dio-24ch-dci,,0.0,,0,2024-10-02T10:19:03.230Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10906,"VME Rear Transition Modules. These are modules that go on the back of a
VME64x crate and connect to another module on the front, such as the
SVEC. The designs are in sub-projects.

",VME RTM,Projects / VME RTM,vme-rtm,project/vme-rtm,2019-02-12T11:57:20.134Z,master,[],[],ssh://git@ohwr.org:7999/project/vme-rtm.git,https://ohwr.org/project/vme-rtm.git,https://ohwr.org/project/vme-rtm,,0.0,,0,2024-10-02T10:19:04.903Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10905,"VHDL core for absolute position encoders (SSI, BISS, ENDAT).

  - [More info at the Wiki
    page](https://www.ohwr.org/project/absenc/wiki)

",Absolute Encoder VHDL core,Projects / Absolute Encoder VHDL core,absenc,project/absenc,2019-02-12T11:57:01.492Z,master,[],[],ssh://git@ohwr.org:7999/project/absenc.git,https://ohwr.org/project/absenc.git,https://ohwr.org/project/absenc,https://ohwr.org/project/absenc/-/blob/master/README,0.0,,0,2024-10-02T10:19:06.370Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10904,"Production and functional tests for fmc-dac-600m-12b-1cha-dds

",fmc dac 600m 12b 1cha dds - Testing,Projects / fmc dac 600m 12b 1cha dds - Testing,fmc-dac-600m-12b-1cha-tst,project/fmc-dac-600m-12b-1cha-tst,2019-02-12T11:56:38.536Z,master,[],[],ssh://git@ohwr.org:7999/project/fmc-dac-600m-12b-1cha-tst.git,https://ohwr.org/project/fmc-dac-600m-12b-1cha-tst.git,https://ohwr.org/project/fmc-dac-600m-12b-1cha-tst,,0.0,,1,2024-10-02T10:19:11.592Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10903,"A UV-mask meant for people with a highly sensitive skin. It features
100% protection from UV and has an integrated fan. The design is fully
open.  
[More info at the Wiki page](https://www.ohwr.org/project/uv-mask/wiki)

",UV-mask,Projects / UV-mask,uv-mask,project/uv-mask,2019-02-12T11:55:11.117Z,master,[],[],ssh://git@ohwr.org:7999/project/uv-mask.git,https://ohwr.org/project/uv-mask.git,https://ohwr.org/project/uv-mask,,0.0,,0,2025-02-03T14:17:28.889Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10902,"A fully open electronic watch-like device that will signal a too
high-level of UV light. It is meant for people with a highly sensitive
skin.  
[More info at the Wiki page](https://www.ohwr.org/project/uv-watch/wiki)

",UV-watch,Projects / UV-watch,uv-watch,project/uv-watch,2019-02-12T11:55:05.628Z,master,[],[],ssh://git@ohwr.org:7999/project/uv-watch.git,https://ohwr.org/project/uv-watch.git,https://ohwr.org/project/uv-watch,,0.0,,0,2024-10-02T10:19:15.661Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10901,"Humanitarian projects contains projects that are developed in the Open
Hardware Repository context.  
Please look at the sub-projects for details.

",Humanitarian projects,Projects / Humanitarian projects,humanitarian,project/humanitarian,2019-02-12T11:55:03.939Z,main,[],[],ssh://git@ohwr.org:7999/project/humanitarian.git,https://ohwr.org/project/humanitarian.git,https://ohwr.org/project/humanitarian,,0.0,,0,2019-02-12T11:55:03.939Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10900,"FmcDIO10i8o is an I/O card in FMC form-factor. Its 10 inputs use fast
differential comparators (propagation delay \< 1 ns) with individual
8-bit DACs of minimum 1 MSPS output settling. The 8 outputs are TTL
level.  
[More info at the Wiki
page](https://www.ohwr.org/project/fmc-dio-10i-8o/wiki)

",FMC DIO 10I 8O,Projects / FMC DIO 10I 8O,fmc-dio-10i-8o,project/fmc-dio-10i-8o,2019-02-12T11:52:36.225Z,master,[],[],ssh://git@ohwr.org:7999/project/fmc-dio-10i-8o.git,https://ohwr.org/project/fmc-dio-10i-8o.git,https://ohwr.org/project/fmc-dio-10i-8o,,0.0,,1,2024-10-02T10:19:17.299Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10899,"Software to support the FMC ADC 400k 18b 4cha iso mezzanine, including
Linux device driver, library and test program.

",FMC ADC 400k 18b 4cha iso - Software,Projects / FMC ADC 400k 18b 4cha iso - Software,fmc-adc-400k18b4cha-iso-sw,project/fmc-adc-400k18b4cha-iso-sw,2019-02-12T11:52:25.074Z,master,[],[],ssh://git@ohwr.org:7999/project/fmc-adc-400k18b4cha-iso-sw.git,https://ohwr.org/project/fmc-adc-400k18b4cha-iso-sw.git,https://ohwr.org/project/fmc-adc-400k18b4cha-iso-sw,https://ohwr.org/project/fmc-adc-400k18b4cha-iso-sw/-/blob/master/README.txt,0.0,,0,2024-10-02T10:19:19.735Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10898,"Hardware design of FMC ADC 400k 18b 4cha iso.  
Includes schematics, PCB layout and manufacturing files.

",FMC ADC 400k 18b 4cha iso - Hardware,Projects / FMC ADC 400k 18b 4cha iso - Hardware,fmc-adc-400k18b4cha-iso-hw,project/fmc-adc-400k18b4cha-iso-hw,2019-02-12T11:52:12.005Z,master,[],[],ssh://git@ohwr.org:7999/project/fmc-adc-400k18b4cha-iso-hw.git,https://ohwr.org/project/fmc-adc-400k18b4cha-iso-hw.git,https://ohwr.org/project/fmc-adc-400k18b4cha-iso-hw,,0.0,,0,2024-10-02T10:19:21.030Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10897,"Gateware (HDL design) for FMC ADC 400k 18b 4cha iso on SPEC and SVEC
carriers.

",FMC ADC 400k 18b 4cha iso - Gateware,Projects / FMC ADC 400k 18b 4cha iso - Gateware,fmc-adc-400k18b4cha-iso-gw,project/fmc-adc-400k18b4cha-iso-gw,2019-02-12T11:51:54.076Z,master,[],[],ssh://git@ohwr.org:7999/project/fmc-adc-400k18b4cha-iso-gw.git,https://ohwr.org/project/fmc-adc-400k18b4cha-iso-gw.git,https://ohwr.org/project/fmc-adc-400k18b4cha-iso-gw,https://ohwr.org/project/fmc-adc-400k18b4cha-iso-gw/-/blob/master/README,0.0,,0,2024-10-02T10:19:22.833Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10896,"Fmc-adc-iso-400k18b4cha is a 4 channel 400kSps 18 bit ADC low pin count
FPGA Mezzanine Card (VITA 57). The ground reference used for the analog
inputs and the ADC is isolated from the ground reference of the FMC
connector. Digital Isolators included allow the data transmission
between two isolated areas. Voltage Bias between two grounds of up to
1kV can be applied, which is measured with a 100MOhm resistor connected
between two grounds and an additional 10 bit ADC. Analog input voltage
ranges: */-5V,*/-10V.  
[More info at the Wiki
page](https://www.ohwr.org/project/fmc-adc-400k18b4cha-iso/wiki)

",FMC ADC 400k 18b 4cha iso,Projects / FMC ADC 400k 18b 4cha iso,fmc-adc-400k18b4cha-iso,project/fmc-adc-400k18b4cha-iso,2019-02-12T11:51:48.499Z,master,[],[],ssh://git@ohwr.org:7999/project/fmc-adc-400k18b4cha-iso.git,https://ohwr.org/project/fmc-adc-400k18b4cha-iso.git,https://ohwr.org/project/fmc-adc-400k18b4cha-iso,,0.0,,0,2024-10-02T10:19:24.323Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10895,"The uRV (Micro RISC-V) core is a small-sized implementation of a 32-bit
RISC-V core, targeted specifically at FPGAs.  
[More info at the Wiki page](https://www.ohwr.org/project/urv-core/wiki)

",urv-core,Projects / urv-core,urv-core,project/urv-core,2019-02-12T11:51:33.814Z,master,[],[],ssh://git@ohwr.org:7999/project/urv-core.git,https://ohwr.org/project/urv-core.git,https://ohwr.org/project/urv-core,,1.0,,1,2024-12-20T09:21:30.528Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10894,"Mock Turtle is an HDL core of a generic control system node, based on a
deterministic multicore CPU architecture.  
Mock Turtle can use White Rabbit as the means of communication and
synchronization in a distributed system.  
[More info at the Wiki
page](https://www.ohwr.org/project/mock-turtle/wiki)

",Mock Turtle,Projects / Mock Turtle,mock-turtle,project/mock-turtle,2019-02-12T11:51:02.366Z,master,[],[],ssh://git@ohwr.org:7999/project/mock-turtle.git,https://ohwr.org/project/mock-turtle.git,https://ohwr.org/project/mock-turtle,https://ohwr.org/project/mock-turtle/-/blob/master/README.rst,0.0,,0,2025-02-04T16:55:52.898Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10893,"embedded-linux is a project explaining how to make embedded-Linux work
on different FPGA platforms.  
[More info at the Wiki
page](https://www.ohwr.org/project/embedded-linux/wiki)

",embedded-linux,Projects / embedded-linux,embedded-linux,project/embedded-linux,2019-02-12T11:50:40.876Z,master,[],[],ssh://git@ohwr.org:7999/project/embedded-linux.git,https://ohwr.org/project/embedded-linux.git,https://ohwr.org/project/embedded-linux,,0.0,,0,2024-10-02T10:19:31.470Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10891,"This library provides a generic API for ADC devices, so that
applications can use this API to access any of the supported ADC
boards.  
Currently the library supports the following boards:

  - fmc-adc-100m14b14cha

For testing and debugging purpose it supports also a couple of virtual
boards that you can use to start the development of your application.

[More info at the Wiki page](https://www.ohwr.org/project/adc-lib/wiki)

",adc-lib,Projects / adc-lib,adc-lib,project/adc-lib,2019-02-12T11:49:21.529Z,master,[],[],ssh://git@ohwr.org:7999/project/adc-lib.git,https://ohwr.org/project/adc-lib.git,https://ohwr.org/project/adc-lib,,1.0,,0,2024-10-02T10:19:33.834Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10890,"SDB (Self-describing Bus) allows to enumerate the cores that are live in
the current FPGA binary, either from the host computer or from the
internal soft-core CPU in the FPGA itself. The project provides the
software support and the specification.  
[More info at the Wiki page](https://www.ohwr.org/project/sdb/wiki)

",SDB - Self-describing Bus,Projects / SDB - Self-describing Bus,sdb,project/sdb,2019-02-12T11:49:07.933Z,master,[],[],ssh://git@ohwr.org:7999/project/sdb.git,https://ohwr.org/project/sdb.git,https://ohwr.org/project/sdb,https://ohwr.org/project/sdb/-/blob/master/README,0.0,,0,2024-10-02T10:19:34.848Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10887,"The Multigap RPC is a high precision timing and tracking detector with
an active area of 25.6cm x 18.2cm and readout with 24 strips.  
Charged particles ionise gas in gaps between glass plates in a stack. A
large electric field causes small avalanches of ionisation in each gap.
The moving charges are picked up on readout strips and the timing of the
charge deposition is to be read out on each side of each strip. The
differential timing of the ionisation reveals the position along the
strip and the precise arrival time of the particle. Multiple MRPCs can
be used to measure particle time of flight (ToF).  
This design is based on the [ALICE ToF
detector](http://aliceinfo.cern.ch/Public/en/Chapter2/Chap2_TOF.html)
and was built for the [Beamline for Schools
project](http://cern.ch/bl4s).  
[More info at the Wiki
page](https://www.ohwr.org/project/mrpc-25x18-24strip/wiki)

",MRPC 25x18 24strip,Projects / MRPC 25x18 24strip,mrpc-25x18-24strip,project/mrpc-25x18-24strip,2019-02-12T11:48:49.219Z,master,[],[],ssh://git@ohwr.org:7999/project/mrpc-25x18-24strip.git,https://ohwr.org/project/mrpc-25x18-24strip.git,https://ohwr.org/project/mrpc-25x18-24strip,,0.0,,0,2024-10-02T10:19:36.808Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10886,"Project hosting different types of Physics Particle Detectors and their
associated electronics (breakout cables, read-out circuits).  
The Sub-projects are the actual projects.

",Particle Detectors,Projects / Particle Detectors,p-det,project/p-det,2019-02-12T11:48:47.494Z,main,[],[],ssh://git@ohwr.org:7999/project/p-det.git,https://ohwr.org/project/p-det.git,https://ohwr.org/project/p-det,,0.0,,0,2019-02-12T11:48:47.494Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10885,"WR-HSR is a research project to implement the High-availability Seamless
Redundancy (HSR) protocol on White Rabbit switches and dual-port end
nodes.  
The implementation is *not* part of the roadmap of the White Rabbit
project.

",White Rabbit High-availability Seamless Redundancy WR-HSR,Projects / White Rabbit High-availability Seamless Redundancy WR-HSR,wr-hsr,project/wr-hsr,2019-02-12T11:47:57.115Z,master,[],[],ssh://git@ohwr.org:7999/project/wr-hsr.git,https://ohwr.org/project/wr-hsr.git,https://ohwr.org/project/wr-hsr,https://ohwr.org/project/wr-hsr/-/blob/master/README,0.0,,0,2024-10-02T10:19:38.508Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10884,"Cosmic Pi - a low cost distributed cosmic ray detector, based on
Raspberry Pi.  
It makes the detection and analysis of cosmic rays accessible to
students, educators and ordinary people. It uses a specially designed
detector combined with the low cost hardware of the Raspberry Pi
computer for data storage and online analysis.  
[More info at the Wiki
page](https://www.ohwr.org/project/cosmic-pi/wiki)

If you're looking for the V1 prototype schematics and PCB layouts you
can find them [here](https://www.ohwr.org/project/cosmic-pi/wikis/documents)  
Our more recent hardware (V1.5 and V2) plus all code is stored on
[github and can be found here](http://github.com/cosmicpi)  
To learn about the project, have a [look at our
blog](http://cosmicpi.org)

You can also follow us on [Facebook.](http://www.facebook.com/cosmicpi/)

The project hardware is currently being developed in
[EagleCAD](http://www.cadsoftusa.com/) but we'll be moving to KiCAD
fairly soon.

",Cosmic Pi,Projects / Cosmic Pi,cosmic-pi,project/cosmic-pi,2019-02-12T11:47:24.691Z,master,[],[],ssh://git@ohwr.org:7999/project/cosmic-pi.git,https://ohwr.org/project/cosmic-pi.git,https://ohwr.org/project/cosmic-pi,,0.0,,0,2024-10-02T10:19:39.720Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10883,"Power supply unit for emergency luminaires that may need to be used in
areas with radiation. The power supply consists of a transformer, a
diode bridge, capacitors and an optional voltage stabilisation device.
It converts a 207V to 253V 50Hz AC to a stable DC voltage and current,
as required by the LED load. Due to design constraints this is best for
loads under 7-8W.  
[More info at the Wiki
page](https://www.ohwr.org/project/radtol-led-psu/wiki)

",Radiation Tolerant LED PSU,Projects / Radiation Tolerant LED PSU,radtol-led-psu,project/radtol-led-psu,2019-02-12T11:47:02.302Z,master,[],[],ssh://git@ohwr.org:7999/project/radtol-led-psu.git,https://ohwr.org/project/radtol-led-psu.git,https://ohwr.org/project/radtol-led-psu,,0.0,,0,2024-10-02T10:19:41.232Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10882,"Radiation tolerant projects. Projects specifically designed for
radiation tolerance will be sub-projects of this umbrella project.

",Rad-tol projects,Projects / Rad-tol projects,rad-tol-projects,project/rad-tol-projects,2019-02-12T11:47:00.546Z,main,[],[],ssh://git@ohwr.org:7999/project/rad-tol-projects.git,https://ohwr.org/project/rad-tol-projects.git,https://ohwr.org/project/rad-tol-projects,,0.0,,0,2019-02-12T11:47:00.546Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10881,"FMC mezzanine board that connects to an Xilinx Virtex-6 FPGA ML605
evaluation board that allows *transmitting* through 12-channel MPO
optical devices a set of 72 links aimed for low-speed (general I/O from
the Virtex 6, up to 480 Mbps) and 8 links for high-speed multigigabit
*transmitters* of the Virtex 6 (up to 1600 Mbps). This boards is used
for testing other devices.  
[More info at the Wiki
page](https://www.ohwr.org/project/fmc-72chopt480-8chopt1600/wiki)

",FMC optical TX 72ls 8hs,Projects / FMC optical TX 72ls 8hs,fmc-72chopt480-8chopt1600,project/fmc-72chopt480-8chopt1600,2019-02-12T11:46:30.615Z,master,[],[],ssh://git@ohwr.org:7999/project/fmc-72chopt480-8chopt1600.git,https://ohwr.org/project/fmc-72chopt480-8chopt1600.git,https://ohwr.org/project/fmc-72chopt480-8chopt1600,https://ohwr.org/project/fmc-72chopt480-8chopt1600/-/blob/master/README,0.0,,0,2024-10-02T10:19:43.586Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10880,"Gateware (HDL design) for nanoFIP.

",nanoFIP - Gateware,Projects / nanoFIP - Gateware,nanofip-gateware,project/nanofip-gateware,2019-02-12T11:46:25.796Z,master,[],[],ssh://git@ohwr.org:7999/project/nanofip-gateware.git,https://ohwr.org/project/nanofip-gateware.git,https://ohwr.org/project/nanofip-gateware,https://ohwr.org/project/nanofip-gateware/-/blob/master/README,0.0,,0,2024-04-08T08:19:39.791Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10879,"[WorldFIP](https://www.ohwr.org/project/cern-fip/wikis/WorldFIP) is a
deterministic rad-tol fieldbus used at CERN's LHC for a variety of
control systems.  
Cryogenics, Power Converters, Beam Instrumentation and other critical
systems are using WorldFIP for the exchange of data between their
sensors and actuators and the control and supervision level.  
With [Alstom](http://www.alstom.com) phasing out WorldFIP support in
2009, it was decided to
[insource](https://ohwr.org/project/nanofip/wikis/WorkPackages) this technology at
CERN.

The insourcing project has started with
![](https://www.ohwr.org/attachments/623/nanoFIP_logo.png), a rad-tol
FPGA that acts as an agent in the communication over the WorldFIP
fieldbus.

-----

[nanoFIP project details, specifications, design and users
information](https://ohwr.org/project/nanofip/wikis)

-----

*In view of reorganizing the project, the nanoFIP project contains a
copy of the CERNFIP wiki pages, Documents and Issues made on 24 March
2015*
",nanoFIP,Projects / nanoFIP,nanofip,project/nanofip,2019-02-12T11:45:19.531Z,master,[],[],ssh://git@ohwr.org:7999/project/nanofip.git,https://ohwr.org/project/nanofip.git,https://ohwr.org/project/nanofip,,0.0,,0,2024-10-02T10:19:45.876Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10878,"Couples a MAROC ASIC (64 channels each with a fixed threshold
discriminator and a slow shaper + sample-and-hold + 12-bit ADC) to a
FPGA. Read-out by Gigabit Ethernet (firmware supplied supports IPBus).
Multiple boards can be plugged together to increase the channel count.
Clocking circuitry compatible with the White Rabbit implementation of
PTP.  
[More info at the Wiki
page](https://www.ohwr.org/project/maroc_csa/wiki)

",Scalable  MAROC Charge Sensitive Readout,Projects / Scalable  MAROC Charge Sensitive Readout,maroc_csa,project/maroc_csa,2019-02-12T11:44:43.640Z,master,[],[],ssh://git@ohwr.org:7999/project/maroc_csa.git,https://ohwr.org/project/maroc_csa.git,https://ohwr.org/project/maroc_csa,,0.0,,0,2024-10-02T10:20:00.501Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10877,"The GBT-based Expandable Front-End (GEFE) is a multipurpose FPGA-based
radiation tolerant card. It is foreseen to be the new standard FMC
carrier for digital front-end applications in the CERN BE-BI group. Its
intended use ranges from fast data acquisition systems to slow control
installed close to the beamlines, in a radioactive environment exposed
to total ionizing doses of up to 750 Gy.  
[More info at the Wiki page](https://www.ohwr.org/project/gefe/wiki)

",GBT-based Expandable Front-End GEFE,Projects / GBT-based Expandable Front-End GEFE,gefe,project/gefe,2019-02-12T11:43:57.496Z,master,[],[],ssh://git@ohwr.org:7999/project/gefe.git,https://ohwr.org/project/gefe.git,https://ohwr.org/project/gefe,,0.0,,0,2024-10-02T10:20:01.803Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10876,"Intel Arria V based VME64x carrier for one high pin count FMC with six SFP connectors, DDR3 memory and clocking resources to support White Rabbit. For more details please refer to the [wiki pages](https://ohwr.org/project/vfc-hd/wikis/home).",VME FMC Carrier - VFC-HD,Projects / VME FMC Carrier - VFC-HD,vfc-hd,project/vfc-hd,2019-02-12T11:43:26.349Z,master,[],[],ssh://git@ohwr.org:7999/project/vfc-hd.git,https://ohwr.org/project/vfc-hd.git,https://ohwr.org/project/vfc-hd,https://ohwr.org/project/vfc-hd/-/blob/master/README,0.0,,2,2024-10-02T10:20:03.832Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10875,"FMC MasterFIP is an interface card for the
[WorldFIP](https://www.ohwr.org/project/cern-fip/wikis/WorldFIP) network
in an LPC FMC form-factor.  
[More info at the Wiki
page](https://www.ohwr.org/project/fmc-masterfip/wiki)

",FMC MasterFIP,Projects / FMC MasterFIP,fmc-masterfip,project/fmc-masterfip,2019-02-12T11:42:09.190Z,master,[],[],ssh://git@ohwr.org:7999/project/fmc-masterfip.git,https://ohwr.org/project/fmc-masterfip.git,https://ohwr.org/project/fmc-masterfip,,0.0,,0,2024-10-02T10:20:05.517Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10874,"A White Rabbit Timing Receiver in PMC (PCI Mezzanine Card) format.  
[More info at the Wiki page](https://www.ohwr.org/project/tr-pmc/wiki)

",tr-pmc,Projects / tr-pmc,tr-pmc,project/tr-pmc,2019-02-12T11:41:00.666Z,master,[],[],ssh://git@ohwr.org:7999/project/tr-pmc.git,https://ohwr.org/project/tr-pmc.git,https://ohwr.org/project/tr-pmc,https://ohwr.org/project/tr-pmc/-/blob/master/README.md,0.0,,1,2024-10-02T10:20:12.974Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10873,"A VHDL core for a PCI slave. The other side behaves like a Wishbone
master.

  - [More info at the Wiki
    page](https://www.ohwr.org/project/pci-core/wiki)

",PCI core,Projects / PCI core,pci-core,project/pci-core,2019-02-12T11:40:42.140Z,master,[],[],ssh://git@ohwr.org:7999/project/pci-core.git,https://ohwr.org/project/pci-core.git,https://ohwr.org/project/pci-core,https://ohwr.org/project/pci-core/-/blob/master/README,0.0,,0,2024-10-02T10:20:16.006Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10872,"[Yocto Project](https://www.yoctoproject.org/) /
[OpenEmbedded](http://www.openembedded.org/wikis/Main_Page) meta layer
supporting the use of the Simple PCIe Carrier (SPEC) in x86 and x86-64
embedded Linux hosts. It features:

  - SPEC software (kernel, userspace, library, gateware)
  - White Rabbit Interface Card support.
  - White Rabbit Starting Kit demos.
  - Getting started with the SPEC demos (python, gateware)
  - Ready to go **minimal** and **sato** image recipes.

",meta-spec,Projects / meta-spec,meta-spec,project/meta-spec,2019-02-12T11:40:20.968Z,master,[],[],ssh://git@ohwr.org:7999/project/meta-spec.git,https://ohwr.org/project/meta-spec.git,https://ohwr.org/project/meta-spec,https://ohwr.org/project/meta-spec/-/blob/master/README,0.0,,0,2024-10-02T10:20:17.509Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10871,"A low-pin-count (LPC) FMC board with 16 LVDS inputs. A possible
application is to connect a CMOS image sensor such as the 4 Mpx sensor
CMV4000.

  - [More info at the Wiki
    page](https://www.ohwr.org/project/fmc-dio-16ch-lvds-a/wiki)

",FMC DIO 16ch lvds a,Projects / FMC DIO 16ch lvds a,fmc-dio-16ch-lvds-a,project/fmc-dio-16ch-lvds-a,2019-02-12T11:40:11.673Z,master,[],[],ssh://git@ohwr.org:7999/project/fmc-dio-16ch-lvds-a.git,https://ohwr.org/project/fmc-dio-16ch-lvds-a.git,https://ohwr.org/project/fmc-dio-16ch-lvds-a,,0.0,,0,2024-10-02T10:20:19.860Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10870,"EPICS support for Wishbone peripherals: This project consist of a
Generic EPICS IOC AsynDriver to support wishbone peripheral. It include
the following features:

  - Driver for X1052, Gennum, Etherbone WB master.
  - Direct access to any register in the wishbone bus
  - Auto-generation of EPICS Database file using wbgen2
  - Automatic real number convertion (2 complements, fixed point,
    signess) using .wb file
  - Support for WR Core and other internal bus protocols (i2c, spi,
    etc.)

[More info at the Wiki page](https://www.ohwr.org/project/epics-wb/wiki)

",EPICS support for Wishbone peripherals,Projects / EPICS support for Wishbone peripherals,epics-wb,project/epics-wb,2019-02-12T11:40:02.226Z,master,[],[],ssh://git@ohwr.org:7999/project/epics-wb.git,https://ohwr.org/project/epics-wb.git,https://ohwr.org/project/epics-wb,https://ohwr.org/project/epics-wb/-/blob/master/README.md,0.0,,0,2024-10-02T10:20:21.844Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10869,"The WandAdapter is a simple PCI-Express x1 card which allows a Wandboard
(or any other EDM compatible device) to be connected via it's
PCI-Express interface to a mainboard. The card provides power to the
Wandboard and breaks out the gigabit ethernet, serial and both USB host
and device interfaces.  
[More info at the Wiki
page](https://www.ohwr.org/project/wandadapter/wiki)

",WandAdapter,Projects / WandAdapter,wandadapter,project/wandadapter,2019-02-12T11:39:57.783Z,master,[],[],ssh://git@ohwr.org:7999/project/wandadapter.git,https://ohwr.org/project/wandadapter.git,https://ohwr.org/project/wandadapter,,0.0,,0,2024-10-02T10:20:23.744Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10868,"EDM is a Embedded Design Module standard under the Creative Commons
license targeting on embedded applications and controllers which are
being actively developed by many embedded companies. See
http://www.edm-standard.org.  
This projects holds all EDM compatible boards.

",EDM Boards,Projects / EDM Boards,edm,project/edm,2019-02-12T11:39:56.231Z,main,[],[],ssh://git@ohwr.org:7999/project/edm.git,https://ohwr.org/project/edm.git,https://ohwr.org/project/edm,,0.0,,0,2019-02-12T11:39:56.231Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10867,"The Furnarius Rufus PCB Milling Machine is an open-source digital
fabrication tool designed to lower the costs of prototyping and small
scale manufacturing of scientific and educational instruments.  
[More info at the Wiki
page](https://www.ohwr.org/project/fr_pcb_mm/wiki)

",Furnarius Rufus PCB Milling Machine,Projects / Furnarius Rufus PCB Milling Machine,fr_pcb_mm,project/fr_pcb_mm,2019-02-12T11:39:40.608Z,master,[],[],ssh://git@ohwr.org:7999/project/fr_pcb_mm.git,https://ohwr.org/project/fr_pcb_mm.git,https://ohwr.org/project/fr_pcb_mm,https://ohwr.org/project/fr_pcb_mm/-/blob/master/README.md,0.0,,0,2024-10-02T10:20:27.099Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10866,"Project holding machines and mechanical hardware tools as subproject.

",Machines and tools,Projects / Machines and tools,machines-tools,project/machines-tools,2019-02-12T11:39:38.977Z,main,[],[],ssh://git@ohwr.org:7999/project/machines-tools.git,https://ohwr.org/project/machines-tools.git,https://ohwr.org/project/machines-tools,,0.0,,0,2019-02-12T11:39:38.977Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10865,"USB-controlled data acquisition and instrument controller, 4 analog
inputs, 2 analog outputs, 4 digital inputs and 4 digital outputs.  
Maximum sampling rate of 3000 samples per seconds in continuous stream
mode.  
On-board averaging at 50000 samples per seconds max.  
Available in 3 versions:

  - BNC connectors
  - Terminal Block connections
  - OEM Header

[More info at the Wiki
page](https://www.ohwr.org/project/usb-adc2k12b4ch-dac2k10b2ch-dio8ch/wiki)

![](https://www.ohwr.org/attachments/3441/PDAQ-protos-350.jpg)

",USB ADC 2k 12b 4ch DAC 2k 10b 2ch dio 8ch,Projects / USB ADC 2k 12b 4ch DAC 2k 10b 2ch dio 8ch,usb-adc2k12b4ch-dac2k10b2ch-dio8ch,project/usb-adc2k12b4ch-dac2k10b2ch-dio8ch,2019-02-12T11:39:06.057Z,master,[],[],ssh://git@ohwr.org:7999/project/usb-adc2k12b4ch-dac2k10b2ch-dio8ch.git,https://ohwr.org/project/usb-adc2k12b4ch-dac2k10b2ch-dio8ch.git,https://ohwr.org/project/usb-adc2k12b4ch-dac2k10b2ch-dio8ch,,0.0,,0,2024-10-02T10:20:28.473Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10864,"The Fmc DAC 100M 14b 16cha ADC 2M 14B 4cha is a 16 channel 100MSPS 14
bit DAC and 4 channel 2MSPS 14 bit ADC card in FMC (FPGA Mezzanine Card)
format. The board is also equipped with 4 DIO channels.

",FMC DAC 100M 14b 16cha ADC 2M 14B 4 cha,Projects / FMC DAC 100M 14b 16cha ADC 2M 14B 4 cha,fmc-dac100m14b16cha-adc2m14b4cha,project/fmc-dac100m14b16cha-adc2m14b4cha,2019-02-12T11:38:56.301Z,master,[],[],ssh://git@ohwr.org:7999/project/fmc-dac100m14b16cha-adc2m14b4cha.git,https://ohwr.org/project/fmc-dac100m14b16cha-adc2m14b4cha.git,https://ohwr.org/project/fmc-dac100m14b16cha-adc2m14b4cha,,0.0,,0,2024-10-02T10:20:30.559Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10863,"The Fmc ADC 100M 14b 16cha DAC 2M 14B 4cha is a 16 channel 100MSPS 14
bit ADC and 4 channel 2MSPS 14 bit DAC card in FMC (FPGA Mezzanine Card)
format. The board is also equipped with 4 DIO channels.

",FMC ADC 100M 14b 16cha DAC 2M 14B 4 cha ,Projects / FMC ADC 100M 14b 16cha DAC 2M 14B 4 cha ,fmc-adc100m14b16cha-dac2m14b4cha,project/fmc-adc100m14b16cha-dac2m14b4cha,2019-02-12T11:38:47.413Z,master,[],[],ssh://git@ohwr.org:7999/project/fmc-adc100m14b16cha-dac2m14b4cha.git,https://ohwr.org/project/fmc-adc100m14b16cha-dac2m14b4cha.git,https://ohwr.org/project/fmc-adc100m14b16cha-dac2m14b4cha,,0.0,,0,2024-10-02T10:20:32.595Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10862,"A small PCB that generates 3.3 Volt so that a SVEC can work in older
type of VME crates. The SVEC is a VME64x board where usually the 3.3
Volt supply is delivered by the crate itself. Older VME types do not
generate this 3.3 Volt.

",3.3V adapter for SVEC,Projects / 3.3V adapter for SVEC,svec-3v3,project/svec-3v3,2019-02-12T11:38:39.291Z,master,[],[],ssh://git@ohwr.org:7999/project/svec-3v3.git,https://ohwr.org/project/svec-3v3.git,https://ohwr.org/project/svec-3v3,,0.0,,0,2024-10-02T10:20:34.649Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10861,"CompactRIO module with White Rabbit functionality. LabVIEW support,
front-panel connector with 10 I/O lines.

[More info at the Wiki page](https://www.ohwr.org/project/crio-wr/wiki)

",CompactRIO White Rabbit CRIO-WR,Projects / CompactRIO White Rabbit CRIO-WR,crio-wr,project/crio-wr,2019-02-12T11:37:18.826Z,master,[],[],ssh://git@ohwr.org:7999/project/crio-wr.git,https://ohwr.org/project/crio-wr.git,https://ohwr.org/project/crio-wr,,0.0,,0,2024-10-02T10:20:36.247Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10860,"General application FMC card that can be used to acquire signals from a
variety of sensors - thermopiles, RTDs, resistive bridges, etc.  
It has a SCSI-type input connector and uses an SPI interface connected
to the LA lanes.

",FMC ADC 2k 24b 8cha,Projects / FMC ADC 2k 24b 8cha,fmc-adc-2k24b8cha,project/fmc-adc-2k24b8cha,2019-02-12T11:37:08.499Z,master,[],[],ssh://git@ohwr.org:7999/project/fmc-adc-2k24b8cha.git,https://ohwr.org/project/fmc-adc-2k24b8cha.git,https://ohwr.org/project/fmc-adc-2k24b8cha,,0.0,,0,2024-10-02T10:20:37.991Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10859,"Production and functional tests for [Conv TTL
RS485](https://www.ohwr.org/project/conv-ttl-rs485/wiki)

",Conv TTL RS485 - Testing,Projects / Conv TTL RS485 - Testing,conv-ttl-rs485-tst,project/conv-ttl-rs485-tst,2019-02-12T11:36:31.654Z,master,[],[],ssh://git@ohwr.org:7999/project/conv-ttl-rs485-tst.git,https://ohwr.org/project/conv-ttl-rs485-tst.git,https://ohwr.org/project/conv-ttl-rs485-tst,https://ohwr.org/project/conv-ttl-rs485-tst/-/blob/master/README,0.0,,0,2024-10-02T10:20:45.353Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10858,"Hardware design of [Conv TTL
RS485](https://www.ohwr.org/project/conv-ttl-rs485/wiki)

",Conv TTL RS485 - Hardware,Projects / Conv TTL RS485 - Hardware,conv-ttl-rs485-hw,project/conv-ttl-rs485-hw,2019-02-12T11:35:47.100Z,master,[],[],ssh://git@ohwr.org:7999/project/conv-ttl-rs485-hw.git,https://ohwr.org/project/conv-ttl-rs485-hw.git,https://ohwr.org/project/conv-ttl-rs485-hw,https://ohwr.org/project/conv-ttl-rs485-hw/-/blob/master/README,0.0,,0,2024-10-02T10:20:46.994Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10857,"Gateware (HDL design) for [Conv TTL
RS485](https://www.ohwr.org/project/conv-ttl-rs485/wiki)

",Conv TTL RS485 - Gateware,Projects / Conv TTL RS485 - Gateware,conv-ttl-rs485-gw,project/conv-ttl-rs485-gw,2019-02-12T11:35:01.807Z,master,[],[],ssh://git@ohwr.org:7999/project/conv-ttl-rs485-gw.git,https://ohwr.org/project/conv-ttl-rs485-gw.git,https://ohwr.org/project/conv-ttl-rs485-gw,,0.0,,0,2024-10-02T10:20:49.473Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10856,"Production and functional tests for [Conv TTL
Blocking](https://www.ohwr.org/project/conv-ttl-blo/wiki).  
[More info at the Wiki
page](https://www.ohwr.org/project/conv-ttl-blo-tst/wiki)

",Conv TTL Blocking - Testing,Projects / Conv TTL Blocking - Testing,conv-ttl-blo-tst,project/conv-ttl-blo-tst,2019-02-12T11:33:56.323Z,master,[],[],ssh://git@ohwr.org:7999/project/conv-ttl-blo-tst.git,https://ohwr.org/project/conv-ttl-blo-tst.git,https://ohwr.org/project/conv-ttl-blo-tst,https://ohwr.org/project/conv-ttl-blo-tst/-/blob/master/README,0.0,,0,2024-10-02T10:21:02.624Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10855,"Hardware design of [Conv TTL
Blocking](https://www.ohwr.org/project/conv-ttl-blo/wiki).  
Includes schematics, PCB layout and manufacturing files.  
[More info at the Wiki
page](https://www.ohwr.org/project/conv-ttl-blo-hw/wiki)

",Conv TTL Blocking - Hardware,Projects / Conv TTL Blocking - Hardware,conv-ttl-blo-hw,project/conv-ttl-blo-hw,2019-02-12T11:32:47.365Z,master,[],[],ssh://git@ohwr.org:7999/project/conv-ttl-blo-hw.git,https://ohwr.org/project/conv-ttl-blo-hw.git,https://ohwr.org/project/conv-ttl-blo-hw,https://ohwr.org/project/conv-ttl-blo-hw/-/blob/master/README,0.0,,0,2024-10-02T10:21:05.441Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10854,"The dual channel L band front-end consist of a FMC dual channel L band
down-converter, preamplifiers and duplex filters.  
Each IQ down-converter has a wide adjustable bandwidth (\>100 MHz),
adjustable gain and two 250MHz 8 bits or 160 MHZ 12 bits or 105MHZ 14
bits multi-mode ADC's. The down-converter mode is switchable: single
receiving frequency band for both channels, or dual frequency band: each
channel has its own receiving frequency band. For GNSS its includes
timing support, Other applications are radio astronomy and microwave
digitizing back-end.

",FMC Dual channel L band front-end,Projects / FMC Dual channel L band front-end,fmc-fe-l-band-2ch,project/fmc-fe-l-band-2ch,2019-02-12T11:32:42.741Z,master,[],[],ssh://git@ohwr.org:7999/project/fmc-fe-l-band-2ch.git,https://ohwr.org/project/fmc-fe-l-band-2ch.git,https://ohwr.org/project/fmc-fe-l-band-2ch,,0.0,,0,2024-10-02T10:21:07.203Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10853,"Common gateware for the different level conversion circuits.

",Converter Common Gateware,Projects / Converter Common Gateware,conv-common-gw,project/conv-common-gw,2019-02-12T11:32:13.650Z,master,[],[],ssh://git@ohwr.org:7999/project/conv-common-gw.git,https://ohwr.org/project/conv-common-gw.git,https://ohwr.org/project/conv-common-gw,https://ohwr.org/project/conv-common-gw/-/blob/master/README,0.0,,0,2024-10-02T10:21:09.241Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10852,"Production and functional tests for the MasterFIP.

",MasterFIP - Testing,Projects / MasterFIP - Testing,masterfip-tst,project/masterfip-tst,2019-02-12T11:31:56.062Z,master,[],[],ssh://git@ohwr.org:7999/project/masterfip-tst.git,https://ohwr.org/project/masterfip-tst.git,https://ohwr.org/project/masterfip-tst,,0.0,,0,2024-10-02T10:21:11.295Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10851,"Software to support the MasterFIP, including Linux device driver,
library and test program.

",MasterFIP - Software,Projects / MasterFIP - Software,masterfip-sw,project/masterfip-sw,2019-02-12T11:31:40.892Z,master,[],[],ssh://git@ohwr.org:7999/project/masterfip-sw.git,https://ohwr.org/project/masterfip-sw.git,https://ohwr.org/project/masterfip-sw,,0.0,,0,2024-10-02T10:21:12.800Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10850,"Gateware (HDL design) for MasterFIP.

",MasterFIP - Gateware,Projects / MasterFIP - Gateware,masterfip-gw,project/masterfip-gw,2019-02-12T11:30:52.608Z,master,[],[],ssh://git@ohwr.org:7999/project/masterfip-gw.git,https://ohwr.org/project/masterfip-gw.git,https://ohwr.org/project/masterfip-gw,,0.0,,0,2024-10-02T10:21:14.803Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10849,"MasterFIP is an Open Hardware implementation of a WorldFIP master node.

",MasterFIP,Projects / MasterFIP,masterfip,project/masterfip,2019-02-12T11:29:13.937Z,master,[],[],ssh://git@ohwr.org:7999/project/masterfip.git,https://ohwr.org/project/masterfip.git,https://ohwr.org/project/masterfip,,0.0,,0,2024-10-02T10:21:16.592Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10848,"Production and functional tests for FMC TDC 1ns 5cha.

",FMC TDC 1ns 5cha - Testing,Projects / FMC TDC 1ns 5cha - Testing,fmc-tdc-1ns-5cha-tst,project/fmc-tdc-1ns-5cha-tst,2019-02-12T11:28:51.832Z,master,[],[],ssh://git@ohwr.org:7999/project/fmc-tdc-1ns-5cha-tst.git,https://ohwr.org/project/fmc-tdc-1ns-5cha-tst.git,https://ohwr.org/project/fmc-tdc-1ns-5cha-tst,,0.0,,0,2025-01-09T10:29:47.638Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10847,"Gateware (HDL design) for FMC TDC 1ns 5cha on SPEC and SVEC carriers.

",FMC TDC 1ns 5cha - Gateware,Projects / FMC TDC 1ns 5cha - Gateware,fmc-tdc-1ns-5cha-gw,project/fmc-tdc-1ns-5cha-gw,2019-02-12T11:27:02.136Z,master,[],[],ssh://git@ohwr.org:7999/project/fmc-tdc-1ns-5cha-gw.git,https://ohwr.org/project/fmc-tdc-1ns-5cha-gw.git,https://ohwr.org/project/fmc-tdc-1ns-5cha-gw,,0.0,,0,2024-10-02T10:21:23.667Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10846,"Hardware design of FMC TDC 1ns 5cha.  
Includes schematics, PCB layout and manufacturing files.

",FMC TDC 1ns 5cha - Hardware,Projects / FMC TDC 1ns 5cha - Hardware,fmc-tdc-1ns-5cha-hw,project/fmc-tdc-1ns-5cha-hw,2019-02-12T11:26:20.123Z,master,[],[],ssh://git@ohwr.org:7999/project/fmc-tdc-1ns-5cha-hw.git,https://ohwr.org/project/fmc-tdc-1ns-5cha-hw.git,https://ohwr.org/project/fmc-tdc-1ns-5cha-hw,,0.0,,0,2024-10-02T10:21:26.529Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10845,"The fmc-adc125m14b12ch-dac1250m16b2ch (fmc-dad) board is a 12 ch ADC/ 2
ch DAC channels board using FMC HPC and QSE connectors It has been
designed for system requiring a feedback loop mechanism with precise
timing, such as the tunning of RF cavities.  
[More info at the Wiki
page](https://www.ohwr.org/project/fmc-adc125m14b12ch-dac1250m16b2ch/wiki)

",FMC ADC 125M 14b 12ch - DAC 1250M 16b 2ch,Projects / FMC ADC 125M 14b 12ch - DAC 1250M 16b 2ch,fmc-adc125m14b12ch-dac1250m16b2ch,project/fmc-adc125m14b12ch-dac1250m16b2ch,2019-02-12T11:26:15.562Z,master,[],[],ssh://git@ohwr.org:7999/project/fmc-adc125m14b12ch-dac1250m16b2ch.git,https://ohwr.org/project/fmc-adc125m14b12ch-dac1250m16b2ch.git,https://ohwr.org/project/fmc-adc125m14b12ch-dac1250m16b2ch,,0.0,,0,2024-10-02T10:21:28.112Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10844,"Projects using the USB bus as main bus

",USB Projects,Projects / USB Projects,usb-projects,project/usb-projects,2019-02-12T11:26:11.183Z,master,[],[],ssh://git@ohwr.org:7999/project/usb-projects.git,https://ohwr.org/project/usb-projects.git,https://ohwr.org/project/usb-projects,,0.0,,0,2024-10-02T10:21:29.671Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10843,"Gateware for Beam Position Monitor, including digital signal processing
chains, data acquisition engines, ADC and analog front-end peripherals
control/monitoring, timing and control system interface.

",Beam Positoning Monitor - Gateware,Projects / Beam Positoning Monitor - Gateware,bpm-gw,project/bpm-gw,2019-02-12T11:25:11.963Z,master,[],[],ssh://git@ohwr.org:7999/project/bpm-gw.git,https://ohwr.org/project/bpm-gw.git,https://ohwr.org/project/bpm-gw,https://ohwr.org/project/bpm-gw/-/blob/master/README.md,0.0,,0,2024-10-02T10:21:32.499Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10841,"Triple 10MBd POF/HCS optical receiver with single optical transmitter
(10Mbd) using an LPC connector.

",FMC POF 10M R3ch T1ch,Projects / FMC POF 10M R3ch T1ch,fmc-pof-10m-r3ch-t1ch,project/fmc-pof-10m-r3ch-t1ch,2019-02-12T11:25:00.380Z,master,[],[],ssh://git@ohwr.org:7999/project/fmc-pof-10m-r3ch-t1ch.git,https://ohwr.org/project/fmc-pof-10m-r3ch-t1ch.git,https://ohwr.org/project/fmc-pof-10m-r3ch-t1ch,,0.0,,0,2024-10-02T10:21:33.866Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10840,"Quad 10MBd POF/HCS optical receiver (10Mbd) FMC card using an LPC
connector.

",FMC POF 10M R4ch ,Projects / FMC POF 10M R4ch ,fmc-pof-10m-r4ch,project/fmc-pof-10m-r4ch,2019-02-12T11:24:53.336Z,master,[],[],ssh://git@ohwr.org:7999/project/fmc-pof-10m-r4ch.git,https://ohwr.org/project/fmc-pof-10m-r4ch.git,https://ohwr.org/project/fmc-pof-10m-r4ch,,0.0,,0,2024-10-02T10:21:35.925Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10839,"Specific applications of open hardware modules are subprojects of this
project.  
These subprojects contain specific firmware and/or software for existing
hardware projects.

",Applications of Open Hardware,Projects / Applications of Open Hardware,oh-applications,project/oh-applications,2019-02-12T11:24:51.790Z,main,[],[],ssh://git@ohwr.org:7999/project/oh-applications.git,https://ohwr.org/project/oh-applications.git,https://ohwr.org/project/oh-applications,,0.0,,0,2019-02-12T11:24:51.790Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10838,"A fully operational stand-alone [FMC Delay
card](https://www.ohwr.org/project/fmc-delay-1ns-8cha/wiki) based
White-Rabbit node which can be initialized and perform periodic
calibrations without requiring to be plugged on a PC, reducing final
system cost, size and power consumption.  
[More info at the Wiki
page](https://www.ohwr.org/project/fmc-delay-1ns-8cha-sa/wiki)

",FMC DEL 1ns 4cha - stand-alone application,Projects / FMC DEL 1ns 4cha - stand-alone application,fmc-delay-1ns-8cha-sa,project/fmc-delay-1ns-8cha-sa,2019-02-12T11:24:26.252Z,master,[],[],ssh://git@ohwr.org:7999/project/fmc-delay-1ns-8cha-sa.git,https://ohwr.org/project/fmc-delay-1ns-8cha-sa.git,https://ohwr.org/project/fmc-delay-1ns-8cha-sa,https://ohwr.org/project/fmc-delay-1ns-8cha-sa/-/blob/master/README,0.0,,0,2024-10-02T10:21:38.956Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10837,"A fully open electronic watch project featuring an integrated GPS
receiver.  
[More info at the Wiki page](https://www.ohwr.org/project/f-watch/wiki)

",fwatch,Projects / fwatch,f-watch,project/f-watch,2019-02-12T11:18:20.843Z,master,[],[],ssh://git@ohwr.org:7999/project/f-watch.git,https://ohwr.org/project/f-watch.git,https://ohwr.org/project/f-watch,,0.0,,0,2025-02-03T15:46:48.720Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10836,,evo,Projects / evo,evo,project/evo,2019-02-12T11:18:15.492Z,master,[],[],ssh://git@ohwr.org:7999/project/evo.git,https://ohwr.org/project/evo.git,https://ohwr.org/project/evo,https://ohwr.org/project/evo/-/blob/master/README,0.0,,0,2019-02-12T11:18:15.492Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10834,"Production and functional tests for FMC ADC 100M 14b 4cha.

",FMC ADC 100M 14b 4cha - Testing,Projects / FMC ADC 100M 14b 4cha - Testing,fmc-adc-100m14b4cha-tst,project/fmc-adc-100m14b4cha-tst,2019-02-12T11:17:25.977Z,master,[],[],ssh://git@ohwr.org:7999/project/fmc-adc-100m14b4cha-tst.git,https://ohwr.org/project/fmc-adc-100m14b4cha-tst.git,https://ohwr.org/project/fmc-adc-100m14b4cha-tst,,0.0,,0,2024-10-02T10:21:47.075Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10833,"Gateware (HDL design) for FMC ADC 100M 14b 4cha on SPEC and SVEC
carriers.

",FMC ADC 100M 14b 4cha - Gateware,Projects / FMC ADC 100M 14b 4cha - Gateware,fmc-adc-100m14b4cha-gw,project/fmc-adc-100m14b4cha-gw,2019-02-12T11:15:41.014Z,master,[],[],ssh://git@ohwr.org:7999/project/fmc-adc-100m14b4cha-gw.git,https://ohwr.org/project/fmc-adc-100m14b4cha-gw.git,https://ohwr.org/project/fmc-adc-100m14b4cha-gw,,0.0,,0,2024-10-02T10:21:49.720Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10832,"Hardware design of FMC ADC 100M 14b 4cha.  
Includes schematics, PCB layout and manufacturing files.

",FMC ADC 100M 14b 4cha - Hardware,Projects / FMC ADC 100M 14b 4cha - Hardware,fmc-adc-100m14b4cha-hw,project/fmc-adc-100m14b4cha-hw,2019-02-12T11:14:22.798Z,master,[],[],ssh://git@ohwr.org:7999/project/fmc-adc-100m14b4cha-hw.git,https://ohwr.org/project/fmc-adc-100m14b4cha-hw.git,https://ohwr.org/project/fmc-adc-100m14b4cha-hw,,0.0,,0,2024-10-02T10:21:52.905Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10831,"A software suite written in Python to help with production tests of
PCBs. AKA PTS.

%(red)This pts-base project is used to re-organise the current [pts
project](https://www.ohwr.org/project/pts.%)  
In the future this project will replace the existing pts project.

[More info at the Wiki page](https://www.ohwr.org/project/pts-tmp/wiki)

",Production Test Suite - base,Projects / Production Test Suite - base,pts-base,project/pts-base,2019-02-12T11:14:01.244Z,master,[],[],ssh://git@ohwr.org:7999/project/pts-base.git,https://ohwr.org/project/pts-base.git,https://ohwr.org/project/pts-base,https://ohwr.org/project/pts-base/-/blob/master/README,1.0,,0,2024-10-02T10:21:53.562Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10830,"AMC FMC Carrier with Kintex is designed to support FMC boards. Equiped
in Xilinx Kintex-7 FPGA. It allows to connect clock source to any clock
input  
[More info at the Wiki page](https://www.ohwr.org/project/afck/wiki)

",AMC FMC Carrier Kintex AFCK,Projects / AMC FMC Carrier Kintex AFCK,afck,project/afck,2019-02-12T11:12:21.050Z,master,[],[],ssh://git@ohwr.org:7999/project/afck.git,https://ohwr.org/project/afck.git,https://ohwr.org/project/afck,,0.0,,0,2024-10-02T10:22:00.354Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10829,"The CUTE-WR-DP is the enhanced version of CUTE-WR with dual WR ports.  
You can use it as the normal WR node with one SFP port.  
CUTE-WR-DP can work in chain to support cascade topology.  
In future, CUTE-WR-DP could support dualport redundancy function for
high reliable application.  
[More info at the Wiki
page](https://www.ohwr.org/project/cute-wr-dp/wiki)

",Compact Universal Timing Endpoint Based on White Rabbit with Dual Ports Cute-WR-DP,Projects / Compact Universal Timing Endpoint Based on White Rabbit with Dual Ports Cute-WR-DP,cute-wr-dp,project/cute-wr-dp,2019-02-12T11:11:16.090Z,master,[],[],ssh://git@ohwr.org:7999/project/cute-wr-dp.git,https://ohwr.org/project/cute-wr-dp.git,https://ohwr.org/project/cute-wr-dp,,0.0,,1,2024-10-02T10:22:04.588Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10828,"This project presents an FPGA architecture for the computation of visual
attention based on the combination  
of a bottom-up saliency and a top-down task-dependent modulation
streams. The bottom-up stream is deployed including  
optical flow, local energy, red-green and blue-yellow color opponencies,
and different local orientation maps. The final saliency is modulated by
two highlevel features: optical flow and disparity. The architecture
include some feedback masks to adapt the weights of the features that
are part of the bottom-up stream, depending on the specific target
application. The target applications are ADAS (Advanced Driving
Assistance Systems), video surveillance, robotics, etc...

",Attention,Projects / Attention,attention,project/attention,2019-02-12T11:11:10.848Z,master,[],[],ssh://git@ohwr.org:7999/project/attention.git,https://ohwr.org/project/attention.git,https://ohwr.org/project/attention,,0.0,,0,2024-10-02T10:22:06.183Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10826,"xTCAprojects shows the MTCA and uTCA boards that are developed in the
Open Hardware Repository context. Keywords: MTCA.4, uTCA, AMC, MCH.

",xTCA Projects,Projects / xTCA Projects,xtca-projects,project/xtca-projects,2019-02-12T11:08:57.031Z,main,[],[],ssh://git@ohwr.org:7999/project/xtca-projects.git,https://ohwr.org/project/xtca-projects.git,https://ohwr.org/project/xtca-projects,,0.0,,0,2019-02-12T11:08:57.031Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10825,"Detailed documentation on how to get ready to work with the Simple PCI
Express Carrier, including hardware deployment instructions, full
required toolchain setup and and a collection of step-by-step
demonstrative tutorials.

",Getting Started with the SPEC,Projects / Getting Started with the SPEC,spec-getting-started,project/spec-getting-started,2019-02-12T11:08:41.579Z,master,[],[],ssh://git@ohwr.org:7999/project/spec-getting-started.git,https://ohwr.org/project/spec-getting-started.git,https://ohwr.org/project/spec-getting-started,https://ohwr.org/project/spec-getting-started/-/blob/master/README,0.0,,0,2024-10-02T10:22:09.046Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10824,"FMC 4 channel Serial link transceiver with differential LEMO connectors.
Each channel has a MAX3441EESA+ transceiver which follows the **RS485**
standard.  
[More info at the Wiki
page](https://www.ohwr.org/project/fmc-dtrx-4cha/wiki)

",FMC DTRX 4CHA,Projects / FMC DTRX 4CHA,fmc-dtrx-4cha,project/fmc-dtrx-4cha,2019-02-12T11:08:27.326Z,master,[],[],ssh://git@ohwr.org:7999/project/fmc-dtrx-4cha.git,https://ohwr.org/project/fmc-dtrx-4cha.git,https://ohwr.org/project/fmc-dtrx-4cha,,0.0,,0,2024-10-02T10:22:10.727Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10823,"FMC DTX 4CHA is a four channel differential line driver on an FMC. Each
channel is driven by a CLC006 IC with max data rate 400 Mb/s. Connector
type: LEMO EPG.00.302.NLN.

[More info at the Wiki
page](https://www.ohwr.org/project/fmc-dtx-4cha/wiki)

",FMC DTX 4CHA,Projects / FMC DTX 4CHA,fmc-dtx-4cha,project/fmc-dtx-4cha,2019-02-12T11:08:10.889Z,master,[],[],ssh://git@ohwr.org:7999/project/fmc-dtx-4cha.git,https://ohwr.org/project/fmc-dtx-4cha.git,https://ohwr.org/project/fmc-dtx-4cha,,0.0,,0,2024-10-02T10:22:11.954Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10822,"Local image descriptors are calculated for every 800x600 image up to 36
fps. All implemented in Handel-C, they provide energy with unsigned 8
bit fixed-point precision, as well as phase and orientation with Q7.2.
The implementation is based on a multi-oriented bank of Gabor filters.

",Local descriptor cores,Projects / Local descriptor cores,local-descriptor-cores,project/local-descriptor-cores,2019-02-12T11:08:00.967Z,master,[],[],ssh://git@ohwr.org:7999/project/local-descriptor-cores.git,https://ohwr.org/project/local-descriptor-cores.git,https://ohwr.org/project/local-descriptor-cores,,0.0,,0,2024-10-02T10:22:14.251Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10821,"Optical flow cores process a 640x480 video sequence and estimate
direction and speed of the objects in the scene (fixed-point Q7.4) up to
32 fps. A Lucas-Kanade gradient-based and a phase-based Handel-C
implementations are provided.

",Optical flow cores,Projects / Optical flow cores,optical-flow-cores,project/optical-flow-cores,2019-02-12T11:07:41.693Z,master,[],[],ssh://git@ohwr.org:7999/project/optical-flow-cores.git,https://ohwr.org/project/optical-flow-cores.git,https://ohwr.org/project/optical-flow-cores,,0.0,,0,2024-10-02T10:22:15.875Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10820,"Stereo cores process a 640x480 video pair sequence and estimate depth in
the scene (fixed point Q7.4) up to 32 fps. A Lucas-Kanade gradient-based
and a phase-based Handel-C implementations are provided. They also
include a previous calibration stage.

",Stereo disparity cores,Projects / Stereo disparity cores,stereo-disparity-cores,project/stereo-disparity-cores,2019-02-12T11:07:31.635Z,master,[],[],ssh://git@ohwr.org:7999/project/stereo-disparity-cores.git,https://ohwr.org/project/stereo-disparity-cores.git,https://ohwr.org/project/stereo-disparity-cores,,0.0,,0,2024-10-02T10:22:17.381Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10819,"The image processing library offers multiple cores for on-chip
vision-feature extraction. HDL modules are provided in different
languages such as Handel-C or VHDL and applicable to various embedded
and reconfigurable devices. They can be of interest for applications
such as particle tracking, analysis of fluid dynamics, artificial vision
for robotics, or object recognition.

",Image processing core library,Projects / Image processing core library,img-proc-core-lib,project/img-proc-core-lib,2019-02-12T11:07:06.224Z,master,[],[],ssh://git@ohwr.org:7999/project/img-proc-core-lib.git,https://ohwr.org/project/img-proc-core-lib.git,https://ohwr.org/project/img-proc-core-lib,https://ohwr.org/project/img-proc-core-lib/-/blob/master/README,0.0,,0,2024-10-02T10:22:19.263Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10818,"The AMC micro backplane enables stand-alone operation of an AMC FMC
carrier or any other AMC board. It has 4 SFP connectors, 2 QSFP cages, 8
trigger I/O routed to the MLVDS ports and power entry.  
\*Superseded by the project
[amc-carrier-2-sl](https://www.ohwr.org/project/amc-carrier-2-sl/wiki)*

",AMC uBackplane SFP,Projects / AMC uBackplane SFP,amc-ubackplane-sfp,project/amc-ubackplane-sfp,2019-02-12T11:06:52.849Z,master,[],[],ssh://git@ohwr.org:7999/project/amc-ubackplane-sfp.git,https://ohwr.org/project/amc-ubackplane-sfp.git,https://ohwr.org/project/amc-ubackplane-sfp,,0.0,,0,2024-10-02T10:22:22.159Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10817,"The spec-box-3n allows to use up to three SPEC FMC carriers in
stand-alone mode, not plugged inside a PC.  
An internal 230V supply module powers the SPEC boards. The box contains
fans to cool the cards.  
[More info at the Wiki
page](https://www.ohwr.org/project/spec-box-3n/wiki)

",SPEC Box 3 Nodes Rack 19,Projects / SPEC Box 3 Nodes Rack 19,spec-box-3n,project/spec-box-3n,2019-02-12T11:06:43.692Z,master,[],[],ssh://git@ohwr.org:7999/project/spec-box-3n.git,https://ohwr.org/project/spec-box-3n.git,https://ohwr.org/project/spec-box-3n,,0.0,,0,2024-10-02T10:22:23.510Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10816,"The spec-box-1n allows to use a SPEC FMC carrier in stand-alone mode,
not plugged inside a PC.  
An external 12 volt supply should be used to power the box. There is no
forced ventilation in the box.  
[More info at the Wiki
page](https://www.ohwr.org/project/spec-box-1n/wiki)

",SPEC box 1 Node,Projects / SPEC box 1 Node,spec-box-1n,project/spec-box-1n,2019-02-12T11:06:36.702Z,master,[],[],ssh://git@ohwr.org:7999/project/spec-box-1n.git,https://ohwr.org/project/spec-box-1n.git,https://ohwr.org/project/spec-box-1n,,0.0,,0,2024-10-02T10:22:25.319Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10815,"Legacy-VME64x core implements a legacy VME (VMEbus IEEE-1014) and VME64x
(based on the vme64x-core) slave.

The core offers for SoC interconnection:

1.  Master WB interconnection and 
2.  Slave WB for MSI IRQ.

The core also provides a universal layer abstraction for common hardware
components in VME design (e.g VME buffers). It allows for geographical
and hardware switch addressing.  
[More info at the Wiki
page](https://www.ohwr.org/project/legacy-vme64x-core/wiki)

",legacy-vme64x-core,Projects / legacy-vme64x-core,legacy-vme64x-core,project/legacy-vme64x-core,2019-02-12T11:06:26.025Z,master,[],[],ssh://git@ohwr.org:7999/project/legacy-vme64x-core.git,https://ohwr.org/project/legacy-vme64x-core.git,https://ohwr.org/project/legacy-vme64x-core,,0.0,,0,2022-03-17T16:07:32.581Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10814,"*E-bone* first aims at interfacing an FPGA based PCIe Endpoint core to a
collection of other cores.  
The *E-bone* release contains a number of general purpose cores within
that scope.  
*E-bone* specifications cater for both a Control Interconnect and a Fast
Transmitter.  
The Control Interconnect defines a 32 bit wide interconnection between a
number of masters and slaves.  
The Fast Transmitter is a one way path (up to 256 bit wide) aiming at
dumping large data sets to the root complex.  
*E-bone* is nevertheless not restricted to PCIe interfacing and may be
used for developing sub-systems in others environments.

[More info at the Wiki page](https://www.ohwr.org/project/e-bone/wiki)

",E-bone SoC interconnection and cores,Projects / E-bone SoC interconnection and cores,e-bone,project/e-bone,2019-02-12T11:06:05.344Z,master,[],[],ssh://git@ohwr.org:7999/project/e-bone.git,https://ohwr.org/project/e-bone.git,https://ohwr.org/project/e-bone,,0.0,,0,2024-10-02T10:22:27.344Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10813,"The uTCA RTM 8 SFP is module equipped with 8 SFP cages and a clock
distribution network. It is compatible with AFC and future projects such
as Kintex-based AFC and WR MCH.  
The module is compliant with DESY RTM class D1.3

",uTCA RTM 8 SFP,Projects / uTCA RTM 8 SFP,utca-rtm-8-sfp,project/utca-rtm-8-sfp,2019-02-12T11:05:48.102Z,master,[],[],ssh://git@ohwr.org:7999/project/utca-rtm-8-sfp.git,https://ohwr.org/project/utca-rtm-8-sfp.git,https://ohwr.org/project/utca-rtm-8-sfp,,0.0,,0,2024-10-02T10:22:30.789Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10812,"Gateware (VHDL) for the level conversion board [Conv TTL
Blocking](https://www.ohwr.org/project/conv-ttl-blo/wiki) in VME64x form
factor between TTL and blocking levels.  
[More info at the Wiki
page](https://www.ohwr.org/project/conv-ttl-blo-gw/wiki)

",Conv TTL Blocking - Gateware,Projects / Conv TTL Blocking - Gateware,conv-ttl-blo-gw,project/conv-ttl-blo-gw,2019-02-12T11:02:21.208Z,master,[],[],ssh://git@ohwr.org:7999/project/conv-ttl-blo-gw.git,https://ohwr.org/project/conv-ttl-blo-gw.git,https://ohwr.org/project/conv-ttl-blo-gw,,0.0,,0,2024-10-02T10:22:32.364Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10811,"CROME FMC carrier board ([SPEC](https://www.ohwr.org/project/spec/wiki)
-based) for the CROME project.  
[More info at the Wiki
page](https://www.ohwr.org/project/crome-fmc-carrier/wiki)

",CROME FMC Carrier,Projects / CROME FMC Carrier,crome-fmc-carrier,project/crome-fmc-carrier,2019-02-12T11:02:15.334Z,master,[],[],ssh://git@ohwr.org:7999/project/crome-fmc-carrier.git,https://ohwr.org/project/crome-fmc-carrier.git,https://ohwr.org/project/crome-fmc-carrier,,0.0,,0,2024-10-02T10:22:34.545Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10810,"CROME (Cern RadiatiOn Monitoring Electronics) is the new read-out
electronics for radiation protection at CERN. It performs
analog-to-digital conversion of the current signal generated by the
radiation detectors (ionization chambers) installed in and outside CERN
perimeter providing a continuous real-time measurement of ambient dose
equivalent rates. It generates radiation alarms, interlock signals and
provides long term permanent and reliable data logging.  
[More info at the Wiki page](https://www.ohwr.org/project/crome/wiki)

",CROME,Projects / CROME,crome,project/crome,2019-02-12T11:02:09.912Z,master,[],[],ssh://git@ohwr.org:7999/project/crome.git,https://ohwr.org/project/crome.git,https://ohwr.org/project/crome,,0.0,,0,2024-10-02T10:22:35.920Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10809,"Programmable attenuator of RF signals with very high voltage range (50
mV – 1000 V) for protecting digitizers against damage by high voltage
signals.  
Four channels with SMA connectors; Three attenuation values: 0, -20, -40
dB; Bandwidth: DC – 2 GHz.  
VME form factor with I2C management bus. No VME-bus interface, only
power supply used.  
[More info at the Wiki
page](https://www.ohwr.org/project/vme-rf-att-4cha/wiki)

",Programmable RF Attenuator in VME,Projects / Programmable RF Attenuator in VME,vme-rf-att-4cha,project/vme-rf-att-4cha,2019-02-12T11:02:02.996Z,master,[],[],ssh://git@ohwr.org:7999/project/vme-rf-att-4cha.git,https://ohwr.org/project/vme-rf-att-4cha.git,https://ohwr.org/project/vme-rf-att-4cha,,0.0,,0,2024-10-02T10:22:38.262Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10808,"Video Processing Platform (MIXXEO). With 2 HDMI inputs, DVI + VGA
output, Spartan 6 FPGA, DDR SDRAM memory and Ethernet.

",VIDEO Processing Platform MIXXEO,Projects / VIDEO Processing Platform MIXXEO,video-fpga-hdmi-dvi-ethernet,project/video-fpga-hdmi-dvi-ethernet,2019-02-12T11:01:45.530Z,master,[],[],ssh://git@ohwr.org:7999/project/video-fpga-hdmi-dvi-ethernet.git,https://ohwr.org/project/video-fpga-hdmi-dvi-ethernet.git,https://ohwr.org/project/video-fpga-hdmi-dvi-ethernet,,0.0,,0,2024-10-02T10:22:41.598Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10807,"FMC High Voltage supply capable of delivering positive or negative
voltage (selectable by components assembly) with voltage and current
monitoring. Features FMC LPC, 0...*/- 6kV, up to 4W, Selectable range
(*/- 750V, */- 1.5kV,*/- 3kV, */- 4.5kV,*/- 6kV), Voltage and current
measurement with hardware over-current protection, SHV output.

",FMC HV SUP,Projects / FMC HV SUP,fmc-hv-sup,project/fmc-hv-sup,2019-02-12T11:01:38.794Z,master,[],[],ssh://git@ohwr.org:7999/project/fmc-hv-sup.git,https://ohwr.org/project/fmc-hv-sup.git,https://ohwr.org/project/fmc-hv-sup,,0.0,,0,2024-10-02T10:22:44.171Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10806,"Double width AMC CPU board for COM EXPRESS mezzanines, dedicated to MTCA
4.0 for physics. It can function either as Standard AMC or RTM in
cooperation with dedicated WR-MCH freeing 1 AMC slot.  
Features: 4 USB 2.0 ports, 4 USB 3.0 ports, Type 6 COM Express module
connector, 2 ESATA ports, custom RTM PCIe x16 connector, 2 Gigabit
Ethernet ports, 2 Gigabit Ethernet (SERDES) routed to uTCA Port 0 and
Port1 serial console connector, Mini Display Port, Mini HDMI port, mPCIe
socket, Extension connector for on-board FPGA mezzanine, Double width,
full (or mid) size design.

",AMC CPU COM6,Projects / AMC CPU COM6,amc-cpu-com6,project/amc-cpu-com6,2019-02-12T11:01:01.882Z,master,[],[],ssh://git@ohwr.org:7999/project/amc-cpu-com6.git,https://ohwr.org/project/amc-cpu-com6.git,https://ohwr.org/project/amc-cpu-com6,,0.0,,0,2024-10-02T10:22:54.038Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10805,"Distribution of clock signals over a White Rabbit network. It uses an
PLL with a numerically controlled (DDS) oscillator to extract the
characteristics of a signal that in turn are distributed over a White
Rabbit network to receiving nodes with a DAC that regenerate exactly the
same signal in phase.  
[More info at the Wiki page](https://www.ohwr.org/project/wr-d3s/wiki)

",Distributed Direct Digital Synthesis over White Rabbit D3S,Projects / Distributed Direct Digital Synthesis over White Rabbit D3S,wr-d3s,project/wr-d3s,2019-02-12T11:00:25.778Z,master,[],[],ssh://git@ohwr.org:7999/project/wr-d3s.git,https://ohwr.org/project/wr-d3s.git,https://ohwr.org/project/wr-d3s,https://ohwr.org/project/wr-d3s/-/blob/master/README,0.0,,0,2024-10-02T10:22:55.782Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10804,"A USB controlled switch box with 1 to 4 switching. Can send out a
reference voltage. Multiple configurations possible. Used for the
calibration of ADC, TDC and Fine delay mezzanines.  
[More info at the Wiki
page](https://www.ohwr.org/project/usb-relay-box1/wiki)

",USB Relay Box 1,Projects / USB Relay Box 1,usb-relay-box1,project/usb-relay-box1,2019-02-12T11:00:03.122Z,master,[],[],ssh://git@ohwr.org:7999/project/usb-relay-box1.git,https://ohwr.org/project/usb-relay-box1.git,https://ohwr.org/project/usb-relay-box1,,0.0,,0,2024-11-20T09:43:47.288Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10803,"ELMB is an analog/digital input/output module with CANbus interface.
About 10000 of ELMBs are used in various CERN installations of  
experiments running on LHC. They are used in control and monitoring of
equipment. The ELMB is radiation qualified for an order of around 35
Gy  
of total intercepted dose.

",CERN ELMB,Projects / CERN ELMB,cern-elmb,project/cern-elmb,2019-02-12T10:59:38.082Z,master,[],[],ssh://git@ohwr.org:7999/project/cern-elmb.git,https://ohwr.org/project/cern-elmb.git,https://ohwr.org/project/cern-elmb,,0.0,,0,2024-10-02T10:23:00.307Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10802,"Software to support the FMC ADC 250M 16B 4CH mezzanine, including:
configuration application and HDL firmware, with functionality for data
acqusition. For use with FCS application.  
[More info at the Wiki
page](https://www.ohwr.org/project/fmc-adc-250m-16b-4cha-sw/wiki)

",FMC ADC 250M 16B 4CH - Software,Projects / FMC ADC 250M 16B 4CH - Software,fmc-adc-250m-16b-4cha-sw,project/fmc-adc-250m-16b-4cha-sw,2019-02-12T10:59:36.329Z,main,[],[],ssh://git@ohwr.org:7999/project/fmc-adc-250m-16b-4cha-sw.git,https://ohwr.org/project/fmc-adc-250m-16b-4cha-sw.git,https://ohwr.org/project/fmc-adc-250m-16b-4cha-sw,,0.0,,0,2019-02-12T10:59:36.329Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10801,"Software to support the FMC DIO 32CH TTL A mezzanine, including:
configuration application and HDL firmware, with functionality for data
acqusition. For use with FCS application.  
[More info at the Wiki
page](https://www.ohwr.org/project/fmc-dio-32chttla-sw/wiki)

",FMC DIO 32CH TTL A - Software,Projects / FMC DIO 32CH TTL A - Software,fmc-dio-32chttla-sw,project/fmc-dio-32chttla-sw,2019-02-12T10:59:34.513Z,main,[],[],ssh://git@ohwr.org:7999/project/fmc-dio-32chttla-sw.git,https://ohwr.org/project/fmc-dio-32chttla-sw.git,https://ohwr.org/project/fmc-dio-32chttla-sw,,0.0,,0,2019-02-12T10:59:34.513Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10800,"Software to support the FMC ADC 130M 16B 4CH mezzanine, including:
configuration application and HDL firmware, with functionality for data
acqusition. For use with FCS application.  
[More info at the Wiki
page](https://www.ohwr.org/project/fmc-adc-130m-16b-4cha-sw/wiki)

",FMC ADC 130M 16B 4CH - Software,Projects / FMC ADC 130M 16B 4CH - Software,fmc-adc-130m-16b-4cha-sw,project/fmc-adc-130m-16b-4cha-sw,2019-02-12T10:59:32.759Z,main,[],[],ssh://git@ohwr.org:7999/project/fmc-adc-130m-16b-4cha-sw.git,https://ohwr.org/project/fmc-adc-130m-16b-4cha-sw.git,https://ohwr.org/project/fmc-adc-130m-16b-4cha-sw,,0.0,,0,2019-02-12T10:59:32.759Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10799,"Software to support the FMC ADC 125M 14B 1CH DAC 600M 14B 1CH mezzanine,
including: Linux device driver, HDL firmware, application for data
acquisition (ADC) and generating signals (DAC). Included Octave
application for card performance measurement (FFT). Uses FMC-bus.  
[More info at the Wiki
page](https://www.ohwr.org/project/fmc-adc125m14b1ch-dac600m14b1ch-sw/wiki)

",FMC ADC 125M 14b 1ch DAC 600M 14b 1ch - Software,Projects / FMC ADC 125M 14b 1ch DAC 600M 14b 1ch - Software,fmc-adc125m14b1ch-dac600m14b1ch-sw,project/fmc-adc125m14b1ch-dac600m14b1ch-sw,2019-02-12T10:59:31.038Z,main,[],[],ssh://git@ohwr.org:7999/project/fmc-adc125m14b1ch-dac600m14b1ch-sw.git,https://ohwr.org/project/fmc-adc125m14b1ch-dac600m14b1ch-sw.git,https://ohwr.org/project/fmc-adc125m14b1ch-dac600m14b1ch-sw,,0.0,,0,2019-02-12T10:59:31.038Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10798,"VME board with 36 ADC channels with a sampling rate of 250 kS/s and 16
bits resolution.  
[More info at the Wiki
page](https://www.ohwr.org/project/vme-adc-250k-16b-36cha/wiki)

",VME ADC 250k 16b 36cha,Projects / VME ADC 250k 16b 36cha,vme-adc-250k-16b-36cha,project/vme-adc-250k-16b-36cha,2019-02-12T10:59:15.739Z,master,[],[],ssh://git@ohwr.org:7999/project/vme-adc-250k-16b-36cha.git,https://ohwr.org/project/vme-adc-250k-16b-36cha.git,https://ohwr.org/project/vme-adc-250k-16b-36cha,,0.0,,0,2024-10-02T10:23:04.471Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10797,"Stand Alone Carrier with 18 FMC LPC slots based on Spartan FPGAs,
mini-ITX board and ATX supply.  
[More info at the Wiki
page](https://www.ohwr.org/project/sac-18-fmc/wiki)

",Stand-alone 18-slot FMC carrier,Projects / Stand-alone 18-slot FMC carrier,sac-18-fmc,project/sac-18-fmc,2019-02-12T10:59:04.847Z,master,[],[],ssh://git@ohwr.org:7999/project/sac-18-fmc.git,https://ohwr.org/project/sac-18-fmc.git,https://ohwr.org/project/sac-18-fmc,,0.0,,0,2024-10-02T10:23:06.410Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10795,"FMC with 4 SFPs, 4 DACs, and 4 TLK2501 chips. The board receives data
streams from remote ADCs using an optical serial interface and produces
analog outputs for monitoring purposes.  
[More info at the Wiki
page](https://www.ohwr.org/project/fmc-dac-130m-12b-4ch-4sfp/wiki)

",FMC DAC 130M 12b 4ch 4SFP,Projects / FMC DAC 130M 12b 4ch 4SFP,fmc-dac-130m-12b-4ch-4sfp,project/fmc-dac-130m-12b-4ch-4sfp,2019-02-12T10:58:49.220Z,master,[],[],ssh://git@ohwr.org:7999/project/fmc-dac-130m-12b-4ch-4sfp.git,https://ohwr.org/project/fmc-dac-130m-12b-4ch-4sfp.git,https://ohwr.org/project/fmc-dac-130m-12b-4ch-4sfp,,0.0,,0,2024-10-02T10:23:07.890Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10794,"FmcDIO32chTTLa is a 32-bit port digital IO card in FMC form-factor.  
[More info at the Wiki
page](https://www.ohwr.org/project/fmc-dio-32chttla/wiki)

",FMC DIO 32ch TTL a,Projects / FMC DIO 32ch TTL a,fmc-dio-32chttla,project/fmc-dio-32chttla,2019-02-12T10:58:31.911Z,master,[],[],ssh://git@ohwr.org:7999/project/fmc-dio-32chttla.git,https://ohwr.org/project/fmc-dio-32chttla.git,https://ohwr.org/project/fmc-dio-32chttla,,0.0,,0,2024-10-02T10:23:11.108Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10793,"An FMC for Direct Digital Synthesis (DDS) applications. It contains a
DAC, a phase detector and a PLL chip.  
[More info at the Wiki
page](https://www.ohwr.org/project/fmc-dac-600m-12b-1cha-dds/wiki)

",FMC DAC 600M 12b 1cha DDS,Projects / FMC DAC 600M 12b 1cha DDS,fmc-dac-600m-12b-1cha-dds,project/fmc-dac-600m-12b-1cha-dds,2019-02-12T10:57:29.395Z,master,[],[],ssh://git@ohwr.org:7999/project/fmc-dac-600m-12b-1cha-dds.git,https://ohwr.org/project/fmc-dac-600m-12b-1cha-dds.git,https://ohwr.org/project/fmc-dac-600m-12b-1cha-dds,,0.0,,0,2024-10-02T10:23:14.256Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10792,"AMC FMC Carrier is designed to support FMC boards. Equipped with Xilinx
Artix-7 FPGA. It allows to connect clock source to any clock input.  
[More info at the Wiki page](https://www.ohwr.org/project/afc/wiki)

",AMC FMC Carrier AFC,Projects / AMC FMC Carrier AFC,afc,project/afc,2019-02-12T10:55:32.539Z,master,[],[],ssh://git@ohwr.org:7999/project/afc.git,https://ohwr.org/project/afc.git,https://ohwr.org/project/afc,https://ohwr.org/project/afc/-/blob/master/README.md,0.0,,4,2024-10-02T10:23:21.778Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10791,"The project is a set of Kicad Symbols and Footprints that are used in a
collection of smaller Kicad based sub projects. Each sub project will
use the common library to ease and standardise design but will be a
related implementation or documentation of a design. The topic for the
Library and designs are Photo Multiplier Tube (PMT) based particle and
optical detectors.

Whilst it is envisaged that each project will feature a PMT in some way.
Some designs may not, but will be tangibly related in some useful way to
particle detection and PMT's. For example a Divide by 10 HV PSU tester
has no PMT but is used when working with the HV supply’s for PMT's. A
High Voltage supply similarly has no PMT but is used with. A Geiger
Muller Tube based detector may be used as a trigger source for PMT based
particle detectors.

Each sub project is expected to be fully self contained (In it's own
subdirectory within the same repository as PMTLib) with the exception of
common Kicad Libraries and the inclusion of the PMTLib libraries and
foot prints. A sub project may include a simulation of the design. Such
simulations will be constructed using Open source Tools (ie QUCS or
similar). PCB Layouts, Datasheets, PDF's and Photographs of finished
designs may also be included. A sub project will contain at a minimum
a  
Schematic and a README doc detailing attribution,licensing and any
additional notes the designer wants to add.

Having mentioned the README doc the principle place for design related
notes is on the Schematic that defines the sub-project.

",PMTLib,Projects / PMTLib,pmtlib,project/pmtlib,2019-02-12T10:55:28.892Z,master,[],[],ssh://git@ohwr.org:7999/project/pmtlib.git,https://ohwr.org/project/pmtlib.git,https://ohwr.org/project/pmtlib,https://ohwr.org/project/pmtlib/-/blob/master/README,0.0,,0,2019-02-12T10:55:28.892Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10790,"Libre-FDATool is a Python package aimed at helping in the analysis and
design of HDL filters from high-level specifications. This Free/Libre
Open Source software supports both VHDL and Verilog code generation and
relies on a collection of Free scientific and EDA tools for providing
advanced features -- simulation, graphics, debugging, etc.

In order to overcome the problems often related with deploying open
design toolchains from the ground up across different host environments,
Libre-FDATool and the associated third-party tools are alternatively
distributed in a customized GNU/Linux virtual machine image. This
virtualized solution is ready to use right out of the box and can be
easily deployed by only using free software in any mainstream Operating
System (GNU/Linux, Windows, OS-X, Solaris).

",Libre Filter Design and Analysis Tool,Projects / Libre Filter Design and Analysis Tool,libre-fdatool,project/libre-fdatool,2019-02-12T10:54:08.664Z,master,[],[],ssh://git@ohwr.org:7999/project/libre-fdatool.git,https://ohwr.org/project/libre-fdatool.git,https://ohwr.org/project/libre-fdatool,,0.0,,0,2024-10-02T10:23:24.176Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10789,"This project hosts documentation and code to be contributed by CERN's
BE-CO-HT section to the KiCad PCB design tool.  
[More info at the Wiki
page](https://www.ohwr.org/project/cern-kicad/wiki)

",CERN BE-CO-HT contribution to KiCad,Projects / CERN BE-CO-HT contribution to KiCad,cern-kicad,project/cern-kicad,2019-02-12T10:49:49.099Z,master,[],[],ssh://git@ohwr.org:7999/project/cern-kicad.git,https://ohwr.org/project/cern-kicad.git,https://ohwr.org/project/cern-kicad,,0.0,,0,2024-10-02T10:23:25.479Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10788,"[**SPIETBOX**](https://www.ohwr.org/project/spietbox/wiki) is a
board developed around a SPARTAN-3 FPGA in order to process TTL and SSI
encoders.  
The board is design to work in stand alone or connected to a
[**SPICONTROLLER**](https://www.ohwr.org/project/spicontroller/wiki)
via the SPI interface.

",SPIETBOX,Projects / SPIETBOX,spietbox,project/spietbox,2019-02-12T10:49:25.325Z,master,[],[],ssh://git@ohwr.org:7999/project/spietbox.git,https://ohwr.org/project/spietbox.git,https://ohwr.org/project/spietbox,,0.0,,0,2024-10-02T10:23:27.028Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10787,"[**SPICONTROLLER**](https://www.ohwr.org/project/spicontroller/wiki)
is the controller board for the [**SPI Boards
Package**](https://www.ohwr.org/project/spi-board-package/wiki). It
manage communication task with control system via Ethernet and with
modular boards via SPI interface. Moreover, specific process can be
embedded into the controller.

",SPICONTROLLER,Projects / SPICONTROLLER,spicontroller,project/spicontroller,2019-02-12T10:49:04.617Z,master,[],[],ssh://git@ohwr.org:7999/project/spicontroller.git,https://ohwr.org/project/spicontroller.git,https://ohwr.org/project/spicontroller,,0.0,,0,2024-10-02T10:23:28.506Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10786,"Software support for the SVEC board, including kernel and user-space
Linux code.

",Simple VME FMC Carrier SVEC - Software,Projects / Simple VME FMC Carrier SVEC - Software,svec-sw,project/svec-sw,2019-02-12T10:48:04.731Z,master,[],[],ssh://git@ohwr.org:7999/project/svec-sw.git,https://ohwr.org/project/svec-sw.git,https://ohwr.org/project/svec-sw,https://ohwr.org/project/svec-sw/-/blob/master/README,0.0,,0,2024-10-02T10:23:30.507Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10785,"This project guides new users to start in the White Rabbit “World” with
simple experiments. The starting kit uses two SPEC + FMC-DIO cards. Each
node allows basic operations such as input timestamping or programmable
output pulse generation. Additionally, specific software and gateware
layers allow to use it as a standard network interface card implementing
the White Rabbit technology functionalities.

",White Rabbit Starting Kit,Projects / White Rabbit Starting Kit,wr-starting-kit,project/wr-starting-kit,2019-02-12T10:47:32.426Z,master,[],[],ssh://git@ohwr.org:7999/project/wr-starting-kit.git,https://ohwr.org/project/wr-starting-kit.git,https://ohwr.org/project/wr-starting-kit,https://ohwr.org/project/wr-starting-kit/-/blob/master/README,0.0,,0,2024-10-02T10:23:32.477Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10784,"The FMC bus abstraction implements a Linux kernel bus named fmc. This
allows to deal with FMC mezzanines in a carrier-independent way

",FMC Bus,Projects / FMC Bus,fmc-bus,project/fmc-bus,2019-02-12T10:47:02.037Z,master,[],[],ssh://git@ohwr.org:7999/project/fmc-bus.git,https://ohwr.org/project/fmc-bus.git,https://ohwr.org/project/fmc-bus,,0.0,,0,2024-10-02T10:23:34.060Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10783,"Software for Beam Position Monitor, including digital signal processing
chains, data acquisition engines, ADC and analog front-end peripherals
control/monitoring, timing and control system interface.

",Beam Positoning Monitor - Software,Projects / Beam Positoning Monitor - Software,bpm-sw,project/bpm-sw,2019-02-12T10:46:43.922Z,master,[],[],ssh://git@ohwr.org:7999/project/bpm-sw.git,https://ohwr.org/project/bpm-sw.git,https://ohwr.org/project/bpm-sw,https://ohwr.org/project/bpm-sw/-/blob/master/README.md,0.0,,0,2024-10-02T10:23:35.581Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10782,"Host-side software support for the TDC FMC on the SPEC and SVEC FMC
carriers.

[More info at the Wiki
page](https://www.ohwr.org/project/fmc-tdc-sw/wiki)

  - HW project: https://www.ohwr.org/project/fmc-tdc/wiki

",FMC TDC 1ns 5cha - Software,Projects / FMC TDC 1ns 5cha - Software,fmc-tdc-sw,project/fmc-tdc-sw,2019-02-12T10:45:52.460Z,master,[],[],ssh://git@ohwr.org:7999/project/fmc-tdc-sw.git,https://ohwr.org/project/fmc-tdc-sw.git,https://ohwr.org/project/fmc-tdc-sw,https://ohwr.org/project/fmc-tdc-sw/-/blob/master/README,0.0,,0,2024-05-27T14:45:14.832Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10781,"The GSI Timing Starter Kit is a functional snapshot of the eventual FAIR
timing system, which is under active development. It demonstrates
real-time coordination of two front-end equipment controllers. The
product consists of a data master (Linux PC) which coordinates events, a
timing master which synchronizes clocks (White Rabbit switch), and two
front-end equipment controllers (either SPECv4 or SCUv2).

",GSI Timing Starter Kit,Projects / GSI Timing Starter Kit,gsi-timing-starter-kit,project/gsi-timing-starter-kit,2019-02-12T10:43:54.743Z,master,[],[],ssh://git@ohwr.org:7999/project/gsi-timing-starter-kit.git,https://ohwr.org/project/gsi-timing-starter-kit.git,https://ohwr.org/project/gsi-timing-starter-kit,,0.0,,0,2024-10-02T10:23:38.837Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10780,"4-channel 16-bit 250 MS/s (700 MHz analog input bandwidth) ADC
(ISLA216P25) FMC module.

",FMC ADC 250M 16b 4cha,Projects / FMC ADC 250M 16b 4cha,fmc-adc-250m-16b-4cha,project/fmc-adc-250m-16b-4cha,2019-02-12T10:43:29.635Z,master,[],[],ssh://git@ohwr.org:7999/project/fmc-adc-250m-16b-4cha.git,https://ohwr.org/project/fmc-adc-250m-16b-4cha.git,https://ohwr.org/project/fmc-adc-250m-16b-4cha,https://ohwr.org/project/fmc-adc-250m-16b-4cha/-/blob/master/README.md,0.0,,0,2024-10-02T10:23:41.974Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10779,"4-channel 16-bit 130 MS/s (700 MHz analog input bandwidth) ADC (LTC2208)
FMC module.

",FMC ADC 130M 16b 4cha,Projects / FMC ADC 130M 16b 4cha,fmc-adc-130m-16b-4cha,project/fmc-adc-130m-16b-4cha,2019-02-12T10:42:53.038Z,master,[],[],ssh://git@ohwr.org:7999/project/fmc-adc-130m-16b-4cha.git,https://ohwr.org/project/fmc-adc-130m-16b-4cha.git,https://ohwr.org/project/fmc-adc-130m-16b-4cha,,0.0,,0,2024-10-02T10:23:44.530Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10778,"This is a port of an older Linux ptpd to support White Rabbit extensions
and run both in hosted and freestanding environment. In the future we
plan to replace it with PPSI, which has a much better design, but
ptp-noposix is currently working pretty well despite being difficult to
maintain.

",PTP noposix stack,Projects / PTP noposix stack,ptp-noposix,project/ptp-noposix,2019-02-12T10:42:40.243Z,master,[],[],ssh://git@ohwr.org:7999/project/ptp-noposix.git,https://ohwr.org/project/ptp-noposix.git,https://ohwr.org/project/ptp-noposix,https://ohwr.org/project/ptp-noposix/-/blob/master/README,0.0,,0,2019-02-26T11:27:41.220Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10777,"Software to support the fmc-adc-100m14b4cha mezzanine, including Linux
device driver, library and test program.

",FMC ADC 100M 14b 4cha - Software,Projects / FMC ADC 100M 14b 4cha - Software,fmc-adc-100m14b4cha-sw,project/fmc-adc-100m14b4cha-sw,2019-02-12T10:41:20.231Z,master,[],[],ssh://git@ohwr.org:7999/project/fmc-adc-100m14b4cha-sw.git,https://ohwr.org/project/fmc-adc-100m14b4cha-sw.git,https://ohwr.org/project/fmc-adc-100m14b4cha-sw,,0.0,,0,2020-09-23T13:05:14.862Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10776,"The TimEX3 is a multipurpose compact PCI board designed to perform
simple to medium complex logical functions.  
It is mainly used for the synchronization system of SOLEIL (signal
duplication, top-up gating, etc.).  
This board is based on a Spartan-6 FPGA and PLX PCI9030 interface.  
It is designed with [KiCad](http://www.kicad-pcb.org) software, and
released under CERN OHL License.

",TimEX3,Projects / TimEX3,timex3,project/timex3,2019-02-12T10:40:35.328Z,master,"['compact PCI', 'synchronization']","['compact PCI', 'synchronization']",ssh://git@ohwr.org:7999/project/timex3.git,https://ohwr.org/project/timex3.git,https://ohwr.org/project/timex3,https://ohwr.org/project/timex3/-/blob/master/readme.txt,0.0,,0,2024-10-02T10:23:47.015Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10775,"Host-side software support for the fine delay FMC on the SPEC and SVEC
FMC carriers.

More details in the [project
wiki](https://www.ohwr.org/project/fine-delay-sw/wiki)

",FMC DEL 1ns 4cha - Software,Projects / FMC DEL 1ns 4cha - Software,fine-delay-sw,project/fine-delay-sw,2019-02-12T10:39:57.633Z,master,[],[],ssh://git@ohwr.org:7999/project/fine-delay-sw.git,https://ohwr.org/project/fine-delay-sw.git,https://ohwr.org/project/fine-delay-sw,https://ohwr.org/project/fine-delay-sw/-/blob/master/README,0.0,,0,2022-11-16T09:50:43.877Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10774,"The AsyncArt Project is comprised by a set of Open-Source HDL libraries and examples
targeted to the efficient implementation of Globally Asynchronous, Locally Synchronous (GALS)
design architectures over Commercial-Off-The-Shelf FPGA devices.",AsyncArt,Projects / AsyncArt,asyncart,project/asyncart,2019-02-12T10:39:25.731Z,master,[],[],ssh://git@ohwr.org:7999/project/asyncart.git,https://ohwr.org/project/asyncart.git,https://ohwr.org/project/asyncart,https://ohwr.org/project/asyncart/-/blob/master/README.md,0.0,,0,2024-10-02T10:23:48.963Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10773,"The Peak Position Detector is a 2 differential channel 10MSPS 16 bit ADC
(AD7626) card in FMC (FPGA Mezzanine Card) format. It uses an LPC VITA57
connector. The gain can be set by hardware (default = 41). Two general
purpose 50MSPS 16-Bit DAC are implemented and can be programmed as a
voltage source.  
The card also includes 6 input/output LVDS pairs and a 10-bit port
digital IO where each single-bit port can be configured individually as
input or output. The I/Os that are on micro-HDMI connectors are TTL or
LVDS compatible.

",FMC ADC 10M 16b 2ch DAC 50M 16b 2ch,Projects / FMC ADC 10M 16b 2ch DAC 50M 16b 2ch,fmc-adc10m16b2ch-dac50m16b1ch,project/fmc-adc10m16b2ch-dac50m16b1ch,2019-02-12T10:39:20.532Z,master,[],[],ssh://git@ohwr.org:7999/project/fmc-adc10m16b2ch-dac50m16b1ch.git,https://ohwr.org/project/fmc-adc10m16b2ch-dac50m16b1ch.git,https://ohwr.org/project/fmc-adc10m16b2ch-dac50m16b1ch,,0.0,,0,2024-10-02T10:23:50.693Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10772,"The B-Train integrator is a 2 differential channel 2MSPS 18 bit ADC card
in FMC (FPGA Mezzanine Card) format. It uses an LPC VITA57 connector.
The gain can be set by hardware (default = 1). A gain & offset
self-calibrating function is also implemented. This function uses a 1ppm
20-Bit DAC (AD5791) as a reference and can be programmed as a
differential voltage source. The card also includes 8 input/output LVDS
pairs and a 10-bit port digital IO where each single-bit port can be
configured individually as input or output. The I/Os that are on
micro-HDMI connectors are TTL or LVDS compatible.

",FMC ADC 2M 18b 2ch DAC 500k 20b 1ch,Projects / FMC ADC 2M 18b 2ch DAC 500k 20b 1ch,fmc-adc2m18b2ch-dac500k20b1ch,project/fmc-adc2m18b2ch-dac500k20b1ch,2019-02-12T10:39:03.655Z,master,[],[],ssh://git@ohwr.org:7999/project/fmc-adc2m18b2ch-dac500k20b1ch.git,https://ohwr.org/project/fmc-adc2m18b2ch-dac500k20b1ch.git,https://ohwr.org/project/fmc-adc2m18b2ch-dac500k20b1ch,,0.0,,0,2024-10-02T10:23:52.795Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10771,"Neo51 is an open source hardware based on 89V51 microcontroller. It has
a dual mode feature selectable via DIP switch supporting  
arduino hardware compatible ports and the legacy 8051 ports.

",Neo51,Projects / Neo51,neo51,project/neo51,2019-02-12T10:39:01.006Z,main,[],[],ssh://git@ohwr.org:7999/project/neo51.git,https://ohwr.org/project/neo51.git,https://ohwr.org/project/neo51,,0.0,,0,2024-05-27T14:46:08.545Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10770,"This project covers the hardware development of the White Rabbit switch.

",White Rabbit Switch - Hardware,Projects / White Rabbit Switch - Hardware,wr-switch-hw,project/wr-switch-hw,2019-02-12T10:37:43.844Z,master,[],[],ssh://git@ohwr.org:7999/project/wr-switch-hw.git,https://ohwr.org/project/wr-switch-hw.git,https://ohwr.org/project/wr-switch-hw,,0.0,,0,2024-10-02T10:24:01.659Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10769,"Signal conditioning electronics for BPM pick-ups providing 4-channel RF
signal analog filtering, amplification, digitally controlled attenuation
and several calibration schemes.

",Beam Positoning Monitor - RF Front-End,Projects / Beam Positoning Monitor - RF Front-End,bpm-rffe,project/bpm-rffe,2019-02-12T10:37:19.441Z,master,[],[],ssh://git@ohwr.org:7999/project/bpm-rffe.git,https://ohwr.org/project/bpm-rffe.git,https://ohwr.org/project/bpm-rffe,,0.0,,0,2024-10-02T10:24:04.378Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10768,"Sub-micrometer resolution beam position monitoring system (BPM) for
accelerators. It provides real-time orbit monitoring, buffered data
readouts, fast orbit feedback capabilities and advanced beam diagnostics
tools.

",Beam Position Monitor,Projects / Beam Position Monitor,bpm,project/bpm,2019-02-12T10:36:59.731Z,master,[],[],ssh://git@ohwr.org:7999/project/bpm.git,https://ohwr.org/project/bpm.git,https://ohwr.org/project/bpm,https://ohwr.org/project/bpm/-/blob/master/README,0.0,,0,2024-10-02T10:24:06.883Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10767,"The Electronics Design project gives helpful entry points for
electronics engineers. VHDL coding, design reviews, components,
production, assembly and testing are some subjects.  
[More info at the Wiki page](https://www.ohwr.org/project/ed/wiki)

",Electronics Design,Projects / Electronics Design,ed,project/ed,2019-02-12T10:34:31.530Z,master,[],[],ssh://git@ohwr.org:7999/project/ed.git,https://ohwr.org/project/ed.git,https://ohwr.org/project/ed,,0.0,,3,2024-10-02T14:59:55.867Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10766,"This project covers all efforts geared to standardize White Rabbit, with
a view to providing a stable specification which everyone can use to
build compliant products.

",White Rabbit Standardization,Projects / White Rabbit Standardization,wr-std,project/wr-std,2019-02-12T10:31:21.506Z,master,[],[],ssh://git@ohwr.org:7999/project/wr-std.git,https://ohwr.org/project/wr-std.git,https://ohwr.org/project/wr-std,https://ohwr.org/project/wr-std/-/blob/master/README,0.0,,0,2024-10-02T10:24:30.869Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10765,"nanoFIPdiag is a WorldFIP node dedicated to monitoring and
diagnostics.  
It uses the nanoFIP chip in stand-alone mode and echoes the received
data (through hardwired contacts it copies the received payload to the
produced one).  
The module is designed to be radiation-tolerant

",nanoFIPDiag,Projects / nanoFIPDiag,nanofipdiag,project/nanofipdiag,2019-02-12T10:31:11.077Z,master,[],[],ssh://git@ohwr.org:7999/project/nanofipdiag.git,https://ohwr.org/project/nanofipdiag.git,https://ohwr.org/project/nanofipdiag,,0.0,,0,2024-10-02T10:24:32.602Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10764,"This project deals with the distribution of RF signals over a White
Rabbit network. In particular, it describes ways of extracting the
characteristics of an RF signal (I/Q, Amplitude/Phase...) using a WR
sampling node and the way to distribute those characteristics through
Ethernet frames and generate the RF on the receiving nodes.

",Distributed RF over White Rabbit,Projects / Distributed RF over White Rabbit,wr-drf,project/wr-drf,2019-02-12T10:30:54.408Z,master,[],[],ssh://git@ohwr.org:7999/project/wr-drf.git,https://ohwr.org/project/wr-drf.git,https://ohwr.org/project/wr-drf,,0.0,,0,2024-10-02T10:24:34.346Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10763,"A Precise Time Protocol (PTP, IEEE 1588) software stack whose single
source code can be compiled for many architectures (POSIX systems, WR
switch, WR node, ...) and which is easily extensible.

",PPSi,Projects / PPSi,ppsi,project/ppsi,2019-02-12T10:29:02.660Z,master,[],[],ssh://git@ohwr.org:7999/project/ppsi.git,https://ohwr.org/project/ppsi.git,https://ohwr.org/project/ppsi,,0.0,,1,2025-01-24T21:32:02.873Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10762,"White Rabbit PTP Core software for LatticeMico32. It consists of a
software wrapper for running a PTP daemon without an operating system
and device drivers for WRPC HDL internals.

",Software for White Rabbit PTP Core,Projects / Software for White Rabbit PTP Core,wrpc-sw,project/wrpc-sw,2019-02-12T10:26:26.126Z,master,[],[],ssh://git@ohwr.org:7999/project/wrpc-sw.git,https://ohwr.org/project/wrpc-sw.git,https://ohwr.org/project/wrpc-sw,,0.0,,4,2025-02-04T15:04:16.582Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10761,"A cute-wr is a compact WR-node implementation with minimum components
required. The initial design is derived from SPEC, but would work in an
opposite manner as a FMC wr-nic, providing 2 DIO channels, external CLK
input, EEPROM, JTAG, RS232, and expandable IOs through FMC connector.
The gateware and software of cute-wr would also keep maximum
compatibility with SPEC.  
Project is obsolete. See
[cute-wr-dp](https://www.ohwr.org/project/cute-wr-dp/wiki) for a similar
board.

",Compact Universal Timing Endpoint based on White Rabbit,Projects / Compact Universal Timing Endpoint based on White Rabbit,cute-wr,project/cute-wr,2019-02-12T10:26:03.514Z,master,[],[],ssh://git@ohwr.org:7999/project/cute-wr.git,https://ohwr.org/project/cute-wr.git,https://ohwr.org/project/cute-wr,https://ohwr.org/project/cute-wr/-/blob/master/README.md,0.0,,0,2024-09-23T15:27:11.851Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10760,"A White Rabbit compliant Network Interface Card (NIC) based on the
[SPEC](https://www.ohwr.org/project/spec/wiki) and the [DIO
FMC](https://www.ohwr.org/project/fmc-dio-5chttla/wiki). This project
hosts the HDL and associated software to configure the SPEC so it
behaves as a NIC under the Linux OS.

",White Rabbit Network Interface Card,Projects / White Rabbit Network Interface Card,wr-nic,project/wr-nic,2019-02-12T10:23:38.899Z,master,[],[],ssh://git@ohwr.org:7999/project/wr-nic.git,https://ohwr.org/project/wr-nic.git,https://ohwr.org/project/wr-nic,,0.0,,0,2024-10-02T10:24:46.258Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10759,"A project to host all software and hardware developments related to
testing the White Rabbit switch.

",White Rabbit Switch - Testing,Projects / White Rabbit Switch - Testing,wr-switch-testing,project/wr-switch-testing,2019-02-12T10:22:05.223Z,master,[],[],ssh://git@ohwr.org:7999/project/wr-switch-testing.git,https://ohwr.org/project/wr-switch-testing.git,https://ohwr.org/project/wr-switch-testing,https://ohwr.org/project/wr-switch-testing/-/blob/master/README,1.0,,0,2025-01-13T12:30:45.806Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10758,"It is a simple, low-cost measurement device equipped with GPS, GPRS
modem, keyboard, display and LiOn battery. It can be also
supplied/charged via a USB connector.  
It is enclosed in a nice-looking Hammond enclosure. It also has 3 RJ50
connectors that enable connection of various types of sensors.  
Each sensor can be connected using UART, I2C, SPI, 1-wire or analog
interface. The device connects with a remote server which is also part
of the development.  
We want to use them at Warsaw University of Technology to build a
distributed network of sensors.

",Handheld measurement terminal,Projects / Handheld measurement terminal,hmt-3cha,project/hmt-3cha,2019-02-12T10:21:54.140Z,master,[],[],ssh://git@ohwr.org:7999/project/hmt-3cha.git,https://ohwr.org/project/hmt-3cha.git,https://ohwr.org/project/hmt-3cha,,0.0,,0,2024-10-02T10:24:54.180Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10757,"FMC carrier equipped with a Power PC embedded processor. In addition to
the SPEC it has 2 gigabit Ethernet ports, one mini PCIe connector and
USB 2.0 HS. It is supplied from a single 12V and runs Linux. The FPGA is
configured from the processor and also interfaced using PCI Express x1
and a local bus. The system boots from on-board NAND or NOR flash
memory.

",FMC PowerPC carrier SPEC-based,Projects / FMC PowerPC carrier SPEC-based,powec,project/powec,2019-02-12T10:21:42.246Z,master,[],[],ssh://git@ohwr.org:7999/project/powec.git,https://ohwr.org/project/powec.git,https://ohwr.org/project/powec,,0.0,,0,2024-10-02T10:24:55.848Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10756,"A simple card that measures temperatures using low cost external Silicon
sensors (just ordinary bipolar transistors). On the front panel it has 8
mini-jack connectors to quickly rearrange the setup.  
We use this kind of the cards for measurement of the temperature
distribution of key components on PCBs.  
The card has also application in our GEM detector readout system to
monitor temperatures inside the detector box - it is attached to the
rear transition module with an FMC connector.  
The card uses only an I2C interface which can be connected to the I2C
bus of the card or to the LA lanes.

",FMC 8 channel temperature monitor,Projects / FMC 8 channel temperature monitor,fmc-8cha-temp,project/fmc-8cha-temp,2019-02-12T10:21:36.120Z,master,[],[],ssh://git@ohwr.org:7999/project/fmc-8cha-temp.git,https://ohwr.org/project/fmc-8cha-temp.git,https://ohwr.org/project/fmc-8cha-temp,,0.0,,0,2024-10-02T10:24:57.566Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10755,"The FmcAdc250M12b2cha is a 2 channel 250MSPS 12 bit ADC card in FMC
(FPGA Mezzanine Card) format using an LPC connector. The gain can be set
by software in three steps: */-50mV,*/-0.5V, */-5V. An advanced offset
circuit is used in the front-end design of the ADC board, and allows a
voltage shift in the range of*/- 5V that is independent on the chosen
gain range.

",FMC ADC 250M 12b 2cha,Projects / FMC ADC 250M 12b 2cha,fmc-adc-250m12b2cha,project/fmc-adc-250m12b2cha,2019-02-12T10:21:09.042Z,master,[],[],ssh://git@ohwr.org:7999/project/fmc-adc-250m12b2cha.git,https://ohwr.org/project/fmc-adc-250m12b2cha.git,https://ohwr.org/project/fmc-adc-250m12b2cha,,0.0,,0,2024-10-02T10:24:59.162Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10754,"A simple 4-lane PXIe carrier for a low pin count FPGA Mezzanine Card
(VITA 57). It supports the White Rabbit timing and control network.
Commercially available. Labview driver available for Fine Delay and TDC
mezzanines.  
[More info at the Wiki page](https://www.ohwr.org/project/spexi/wiki)

",Simple PXIe FMC Carrier SPEXI,Projects / Simple PXIe FMC Carrier SPEXI,spexi,project/spexi,2019-02-12T10:19:35.929Z,master,[],[],ssh://git@ohwr.org:7999/project/spexi.git,https://ohwr.org/project/spexi.git,https://ohwr.org/project/spexi,https://ohwr.org/project/spexi/-/blob/master/README,0.0,,0,2024-10-02T10:25:00.981Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10753,"The robustness of a White Rabbit Network (WRN) is a broad subject
covering methods (HW & SW) which enable to increase overall reliability
of a WR-based system. This includes Forward Error Correction (FEC),
Quality of Service (QoS) assurance, support of network redundancy,
proper network design, thorough diagnostics, and increasing the
reliability of network components (i.e. switches, nodes). Here, these
methods are described and their implementation sources gathered.

",White Rabbit Network Robustness,Projects / White Rabbit Network Robustness,wrn-robustness,project/wrn-robustness,2019-02-12T10:19:30.084Z,master,[],[],ssh://git@ohwr.org:7999/project/wrn-robustness.git,https://ohwr.org/project/wrn-robustness.git,https://ohwr.org/project/wrn-robustness,,0.0,,0,2019-02-12T10:19:30.084Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10752,"Software for ROBIN-NP project.

",ROBIN-NP - Software,Projects / ROBIN-NP - Software,atlas-robin-np-sw,project/atlas-robin-np-sw,2019-02-12T10:19:28.413Z,main,[],[],ssh://git@ohwr.org:7999/project/atlas-robin-np-sw.git,https://ohwr.org/project/atlas-robin-np-sw.git,https://ohwr.org/project/atlas-robin-np-sw,,0.0,,0,2019-02-12T10:19:28.413Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10751,"Firmware for ROBIN-NP project.

",ROBIN-NP - Gateware,Projects / ROBIN-NP - Gateware,atlas-robin-np-fw,project/atlas-robin-np-fw,2019-02-12T10:19:26.755Z,main,[],[],ssh://git@ohwr.org:7999/project/atlas-robin-np-fw.git,https://ohwr.org/project/atlas-robin-np-fw.git,https://ohwr.org/project/atlas-robin-np-fw,,0.0,,0,2019-02-12T10:19:26.755Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10750,"Hardware designs for ROBIN-NP project.

",ROBIN-NP - Hardware,Projects / ROBIN-NP - Hardware,atlas-robin-np-hw,project/atlas-robin-np-hw,2019-02-12T10:19:25.077Z,main,[],[],ssh://git@ohwr.org:7999/project/atlas-robin-np-hw.git,https://ohwr.org/project/atlas-robin-np-hw.git,https://ohwr.org/project/atlas-robin-np-hw,,0.0,,0,2019-02-12T10:19:25.077Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10748,"A level conversion board in VME64x double-height form factor between TTL
and RS485. Direction and levels are configurable. The project uses a
Rear Transition Module for connectivity and a Front module with the
active conversion and diagnostics electronics.  
[More info at the Wiki
page](https://www.ohwr.org/project/conv-ttl-rs485/wiki)

",Conv TTL RS485,Projects / Conv TTL RS485,conv-ttl-rs485,project/conv-ttl-rs485,2019-02-12T10:17:15.196Z,master,[],[],ssh://git@ohwr.org:7999/project/conv-ttl-rs485.git,https://ohwr.org/project/conv-ttl-rs485.git,https://ohwr.org/project/conv-ttl-rs485,,0.0,,0,2024-10-02T10:25:04.552Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10747,"A QDR II RAM controller for the Virtex 6 FPGA family. This core is
compliant with the Wishbone bus.

",QDR II controller for Virtex 6,Projects / QDR II controller for Virtex 6,qdr2-v6-core,project/qdr2-v6-core,2019-02-12T10:17:01.366Z,master,[],[],ssh://git@ohwr.org:7999/project/qdr2-v6-core.git,https://ohwr.org/project/qdr2-v6-core.git,https://ohwr.org/project/qdr2-v6-core,,0.0,,0,2024-10-02T10:25:06.559Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10746,"We have designed an FPGA Mezzanine card (standard FMC/Vita 57) for
high-channel-count electrophysiology, with 128 channels (potentially up
to 512), based upon Intan Tech's RHA2132 (2 uV rms input-referred
noise), sampled at 25kHz 18bit by AD7982. We are basing our design on
the reference design provided by Reid Harrison of Intan Tech for their
16-channel evaluation board. The expected cost of the device should be
under 5000$.

In order to have an integrated solution we intend to have as default
carrier the Opal Kelly Shuttle LX1, an inexpensive USB FMC carrier with
an excellent USB controller. The integrated solution will be completed
with software on the PC side to grab to disk continuously and/or display
in some fashion all 128 channels.

Our status: We have an alpha card. It has passed most tests---we can
grab from any channel at 1MS/s. We have an alpha microcode: it grabs
from any channel and stores on the PC.

Our current team:  
Marcelo Magnasco (Rockefeller University, New York), design.  
Andres Cicuttin (ICTP, Trieste), schematics + fpga  
Maria Liz Crespo (ICTP, Trieste), fpga  
Sanjee Abeytunge (MSKCC, New York) layout  
Nicholas Joseph (RU) Macintosh drivers

",HiCCE-FMC-128,Projects / HiCCE-FMC-128,hicce-fmc-128,project/hicce-fmc-128,2019-02-12T10:16:43.140Z,master,[],[],ssh://git@ohwr.org:7999/project/hicce-fmc-128.git,https://ohwr.org/project/hicce-fmc-128.git,https://ohwr.org/project/hicce-fmc-128,https://ohwr.org/project/hicce-fmc-128/-/blob/master/README.md,0.0,,0,2025-02-03T14:24:09.498Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10745,"An LPC FMC board which seeks to distribute digital I/O. It is designed
to operate at least at 10 MHz, however a better design could allow this
board to operate at much higher frequencies. This board is compatible
with ""PMOD"" Connectors.

",FMC LPC 100 Mil 12 Pin Digital IO Expansion Board,Projects / FMC LPC 100 Mil 12 Pin Digital IO Expansion Board,lpcfmc12pexp,project/lpcfmc12pexp,2019-02-12T10:16:35.099Z,master,[],[],ssh://git@ohwr.org:7999/project/lpcfmc12pexp.git,https://ohwr.org/project/lpcfmc12pexp.git,https://ohwr.org/project/lpcfmc12pexp,,0.0,,0,2024-10-02T10:25:11.055Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10743,"A software framework for Linux device drivers aimed at supporting
controls and data acquisition hardware.  
ZIO supports sub-nanosecond timestamps, block-oriented input and output
and transport of meta-data with the data samples. Users can change the
buffer type and trigger type associated with a device at run time, and  
all of devices, triggers and buffers are easily implemented as add-on
modules.

The PF\_ZIO implementation, currently in beta status, implements a
network interface to the ZIO transport, which allows each I/O channel to
generate or receive network frames. Applications see the network of
devices and can talk with several of them from the same socket. We
support SOCK\_STREAM, SOCK\_DGRAM and SOCK\_RAW.

",ZIO,Projects / ZIO,zio,project/zio,2019-02-12T10:15:18.539Z,master,[],[],ssh://git@ohwr.org:7999/project/zio.git,https://ohwr.org/project/zio.git,https://ohwr.org/project/zio,https://ohwr.org/project/zio/-/blob/master/README,1.0,,0,2024-10-02T10:25:15.544Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10742,"A project to describe techniques and gather results of the time transfer
between CERN and LNGS for the neutrino Time Of Flight experiment.

",CERN LNGS Time Transfer,Projects / CERN LNGS Time Transfer,cngs-time-transfer,project/cngs-time-transfer,2019-02-12T10:14:42.080Z,master,[],[],ssh://git@ohwr.org:7999/project/cngs-time-transfer.git,https://ohwr.org/project/cngs-time-transfer.git,https://ohwr.org/project/cngs-time-transfer,,0.0,,0,2024-10-02T10:25:15.400Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10741,"The FmcAdc1G8b2cha is a 2 channel 1GSPS 8 bit ADC card in FMC (FPGA
Mezzanine Card, VITA 57.1) format using a Low Pin-Count (LPC) connector.

[More info at the Wiki
Page](https://www.ohwr.org/project/fmc-adc-1g8b2cha/wiki)

",FMC ADC 1G 8b 2cha,Projects / FMC ADC 1G 8b 2cha,fmc-adc-1g8b2cha,project/fmc-adc-1g8b2cha,2019-02-12T10:14:29.607Z,master,[],[],ssh://git@ohwr.org:7999/project/fmc-adc-1g8b2cha.git,https://ohwr.org/project/fmc-adc-1g8b2cha.git,https://ohwr.org/project/fmc-adc-1g8b2cha,,0.0,,1,2024-10-02T10:25:18.336Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10740,"An FMC for clock & data recovery from optical sources.

",Optical Clock and Data Recovery FMC,Projects / Optical Clock and Data Recovery FMC,optical-cdr-fmc,project/optical-cdr-fmc,2019-02-12T10:14:17.309Z,master,[],[],ssh://git@ohwr.org:7999/project/optical-cdr-fmc.git,https://ohwr.org/project/optical-cdr-fmc.git,https://ohwr.org/project/optical-cdr-fmc,,0.0,,0,2024-10-02T10:25:19.729Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10739,"Software support for the SPEC board, including kernel and user-space
Linux code.  
The package also include the fmc-bus driver, which is expected to be
used by other carriers as well.

",Simple PCIe FMC carrier SPEC - Software,Projects / Simple PCIe FMC carrier SPEC - Software,spec-sw,project/spec-sw,2019-02-12T10:13:31.140Z,master,[],[],ssh://git@ohwr.org:7999/project/spec-sw.git,https://ohwr.org/project/spec-sw.git,https://ohwr.org/project/spec-sw,,0.0,,0,2024-10-02T10:25:21.317Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10738,"An FMC board with an analog 125 MS/s input and an analog 600 MS/s output
for RF applications.

  - [More info at the Wiki
    page](https://www.ohwr.org/project/fmc-adc125m14b1ch-dac600m14b1ch/wiki)

",FMC ADC 125M 14b 1ch DAC 600M 14b 1ch,Projects / FMC ADC 125M 14b 1ch DAC 600M 14b 1ch,fmc-adc125m14b1ch-dac600m14b1ch,project/fmc-adc125m14b1ch-dac600m14b1ch,2019-02-12T10:12:59.414Z,master,[],[],ssh://git@ohwr.org:7999/project/fmc-adc125m14b1ch-dac600m14b1ch.git,https://ohwr.org/project/fmc-adc125m14b1ch-dac600m14b1ch.git,https://ohwr.org/project/fmc-adc125m14b1ch-dac600m14b1ch,,0.0,,0,2024-10-02T10:25:22.684Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10737,"A simple VME64x carrier for two low pin count FPGA Mezzanine Cards (VITA
57). It has memory and clocking resources and supports the White Rabbit
timing and control network. Commercially available.  
[More info at the Wiki page](https://www.ohwr.org/project/svec/wiki)

",Simple VME FMC Carrier SVEC,Projects / Simple VME FMC Carrier SVEC,svec,project/svec,2019-02-12T10:09:36.177Z,master,[],[],ssh://git@ohwr.org:7999/project/svec.git,https://ohwr.org/project/svec.git,https://ohwr.org/project/svec,https://ohwr.org/project/svec/-/blob/master/README.rst,0.0,,2,2025-01-21T15:30:42.913Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10736,"A software suite written in Python to help with production tests of
PCBs. AKA PTS.

",Production Test Suite,Projects / Production Test Suite,pts,project/pts,2019-02-12T10:06:48.185Z,master,[],[],ssh://git@ohwr.org:7999/project/pts.git,https://ohwr.org/project/pts.git,https://ohwr.org/project/pts,https://ohwr.org/project/pts/-/blob/master/README,0.0,,0,2024-10-02T10:25:45.639Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10735,"GTS is a tool which takes a binary for a given microprocessor (initially
an LM32) and gives information about worst-case execution time.

",GTS Guesses Timing Somehow,Projects / GTS Guesses Timing Somehow,gts,project/gts,2019-02-12T10:06:45.718Z,main,[],[],ssh://git@ohwr.org:7999/project/gts.git,https://ohwr.org/project/gts.git,https://ohwr.org/project/gts,,0.0,,0,2019-02-12T10:06:46.747Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10734,"A level conversion board between TTL and 24V blocking levels in VME64x
form factor. The project uses a rear transition module for connectivity
and a front module with the active conversion and diagnostics
electronics.  
[More info at the Wiki
page](https://www.ohwr.org/project/conv-ttl-blo/wiki)

",Conv TTL Blocking,Projects / Conv TTL Blocking,conv-ttl-blo,project/conv-ttl-blo,2019-02-12T09:59:08.932Z,master,[],[],ssh://git@ohwr.org:7999/project/conv-ttl-blo.git,https://ohwr.org/project/conv-ttl-blo.git,https://ohwr.org/project/conv-ttl-blo,,0.0,,0,2024-10-02T10:25:48.907Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10733,"A Time to Digital Converter core for Spartan 6 FPGAs.

",TDC core,Projects / TDC core,tdc-core,project/tdc-core,2019-02-12T09:58:36.632Z,master,[],[],ssh://git@ohwr.org:7999/project/tdc-core.git,https://ohwr.org/project/tdc-core.git,https://ohwr.org/project/tdc-core,https://ohwr.org/project/tdc-core/-/blob/master/README,0.0,,1,2024-10-02T10:25:50.945Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10732,"A project devoted to developing and discussing the CERN Open Hardware
Licence.  
[More info at the Wiki page](https://www.ohwr.org/project/cernohl/wiki)

",CERN Open Hardware Licence,Projects / CERN Open Hardware Licence,cernohl,project/cernohl,2019-02-12T09:56:04.502Z,master,[],[],ssh://git@ohwr.org:7999/project/cernohl.git,https://ohwr.org/project/cernohl.git,https://ohwr.org/project/cernohl,https://ohwr.org/project/cernohl/-/blob/master/README.md,0.0,,3,2024-11-24T20:37:24.616Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10731,"FmcDIO5chTTLa is a 5-bit port digital IO card in FMC form-factor. Each
single-bit port can be configured individually as input or output. The
I/Os on LEMO 00 connectors are TTL compatible. Commercially available.  
[More info at the Wiki
page](https://www.ohwr.org/project/fmc-dio-5chttla/wiki)

",FMC DIO 5ch TTL a,Projects / FMC DIO 5ch TTL a,fmc-dio-5chttla,project/fmc-dio-5chttla,2019-02-12T09:55:03.149Z,master,[],[],ssh://git@ohwr.org:7999/project/fmc-dio-5chttla.git,https://ohwr.org/project/fmc-dio-5chttla.git,https://ohwr.org/project/fmc-dio-5chttla,https://ohwr.org/project/fmc-dio-5chttla/-/blob/master/README.md,0.0,,1,2024-10-02T14:46:25.475Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10730,"This project defines data structures, to be embedded in the FPGA memory
address space, to enumerate the devices that have been synthetized in
the current design. The same structure is also used as a simple flash
file system. AKA Self-Describing Bus (SDB) Specification for Logic
Cores. The layout is simple enough to be parsed both by the host and by
the internal soft-core, if any.

The documentation is public, and related code is GNU GPL licensed.

",FPGA Configuration Space,Projects / FPGA Configuration Space,fpga-config-space,project/fpga-config-space,2019-02-12T09:54:13.488Z,master,[],[],ssh://git@ohwr.org:7999/project/fpga-config-space.git,https://ohwr.org/project/fpga-config-space.git,https://ohwr.org/project/fpga-config-space,https://ohwr.org/project/fpga-config-space/-/blob/master/README,0.0,,0,2025-01-23T12:58:10.895Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10729,"This project contains all the HDL gateware necessary for the FPGA of the
WR switch.

",White Rabbit Switch - Gateware,Projects / White Rabbit Switch - Gateware,wr-switch-hdl,project/wr-switch-hdl,2019-02-12T09:51:24.888Z,proposed_master,[],[],ssh://git@ohwr.org:7999/project/wr-switch-hdl.git,https://ohwr.org/project/wr-switch-hdl.git,https://ohwr.org/project/wr-switch-hdl,https://ohwr.org/project/wr-switch-hdl/-/blob/proposed_master/README,1.0,,0,2025-01-27T09:12:26.747Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10728,"A collection of cores needed in the White Rabbit node and switch.
Includes White Rabbit PTP Core (WRPC).

",White Rabbit core collection,Projects / White Rabbit core collection,wr-cores,project/wr-cores,2019-02-12T09:43:34.576Z,master,[],[],ssh://git@ohwr.org:7999/project/wr-cores.git,https://ohwr.org/project/wr-cores.git,https://ohwr.org/project/wr-cores,https://ohwr.org/project/wr-cores/-/blob/master/README.md,1.0,,3,2025-02-04T07:39:11.135Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10727,"A collection of platform-independent cores such as memories,
synchronizer circuits and Wishbone cores.

[More info at the Wiki
page](https://www.ohwr.org/project/general-cores/wiki)

",Platform-independent core collection,Projects / Platform-independent core collection,general-cores,project/general-cores,2019-02-12T09:42:43.204Z,master,[],[],ssh://git@ohwr.org:7999/project/general-cores.git,https://ohwr.org/project/general-cores.git,https://ohwr.org/project/general-cores,https://ohwr.org/project/general-cores/-/blob/master/README.md,1.0,,5,2025-02-04T07:34:59.008Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10726,"IPBus is a FPGA Core that controls a Wishbone bus via Ethernet.
Currently the transport protocol is UDP/IP, although there are plans for
an ATA over Ethernet (AoE) implementation. There are reference designs
for the SP601 and SP605 Xilinx FPGA boards.

Details at http://ipbus.web.cern.ch/ipbus/

",IPBus,Projects / IPBus,ipbus,project/ipbus,2019-02-12T09:42:37.405Z,master,[],[],ssh://git@ohwr.org:7999/project/ipbus.git,https://ohwr.org/project/ipbus.git,https://ohwr.org/project/ipbus,,0.0,,0,2024-10-02T10:26:06.301Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10725,"PHASE (Portable Hardware Analyzer with Sharing Explorer) aims at
unifying hardware debugging in a single tool. From the host machine, a
user may graphically interconnect components to describe the connection
between his computer and the target device to debug. For example, a USB
JTAG cable might be the root node, connected to an Arria2 development
board with a CPLD and an FPGA, containing a LM32 processor.

Wherever possible, PHASE fetches design descriptions from the internet
based on the detected JTAG IDCODEs, USB vendor IDs, or PnP BUS
information. In the preceding example, each step of the chain would be
automatically detected. The USB cable from the vendor+product codes, the
FPGA from the JTAG IDCODE and the LM32 from the Arria2's sld hub. The
user would now be presented with read/write access to the data and
instruction buses for visual inspection or firmware loading.
Furthermore, the user could launch gdb to halt and single-step the
embedded LM32 CPU.

If a device is not yet described, the user may assemble a driver out of
the reusable software components. For example, an Altera USB-Blaster
driver is just a FTDI device chained with a byte packeter and a JTAG bit
banger. Once the design has been graphically assembled, it is
automatically scanned for attached JTAG devices and the USB cable design
is shared online with any future users of the same cable.

",PHASE,Projects / PHASE,phase,project/phase,2019-02-12T09:42:33.526Z,master,[],[],ssh://git@ohwr.org:7999/project/phase.git,https://ohwr.org/project/phase.git,https://ohwr.org/project/phase,,0.0,,0,2019-02-12T09:42:33.526Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10724,"A Trigger/Timing Logic Unit designed for use with High Energy Physics
beam-tests. Provides a simple and flexible interface for fast timing and
triggering signals at the AIDA pixel sensor beam-telescope. Connects to
a FPGA carrier card via a FMC connector.

( N.B. Use the sub-project Git repositories, **not** the top level
repository )

",AIDA-2020 TLU,Projects / AIDA-2020 TLU,fmc-mtlu,project/fmc-mtlu,2019-02-12T09:40:10.491Z,master,[],[],ssh://git@ohwr.org:7999/project/fmc-mtlu.git,https://ohwr.org/project/fmc-mtlu.git,https://ohwr.org/project/fmc-mtlu,https://ohwr.org/project/fmc-mtlu/-/blob/master/README.md,0.0,,0,2024-10-02T10:26:12.715Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10723,"SPI Boards Package is a set of electronic boards developed at Soleil
Synchrotron (France). These boards can be connected together in a daisy
chain and they communicate with an embedded controller via an SPI Bus.
They provide the following features:

\- Platform allowing us to build specific solutions with simple and open
tools.

\- Modular architecture.

\- Provide solutions for applications which require synchronization.

\- Low level process implementation to achieve better performance.  
\- Easy Control network connection

The main CPU board contains a microprocessor. It manages a task for
communication with the supervision, an embedded process and SPI
communication with the peripheral boards.  
We have a modular approach that means we can make various Peripheral
board combinations between 16-bit DAC, 16-bit ADC, and a calculator
board for motor encoder.

",SPI Boards Package,Projects / SPI Boards Package,spi-board-package,project/spi-board-package,2019-02-12T09:39:58.132Z,master,[],[],ssh://git@ohwr.org:7999/project/spi-board-package.git,https://ohwr.org/project/spi-board-package.git,https://ohwr.org/project/spi-board-package,,0.0,,0,2024-10-02T10:26:14.060Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10722,"An HPC FMC with 4 Digital to Analog Converter channels working at 250
MS/s with 16-bit resolution.

  - [More information on the wiki
    page](https://www.ohwr.org/project/fmc-dac-250m16b4cha/wiki)

<!-- end list -->

  - The design is currently used only for the CERN RF-group purposes

",FMC DAC 250M 16b 4cha,Projects / FMC DAC 250M 16b 4cha,fmc-dac-250m16b4cha,project/fmc-dac-250m16b4cha,2019-02-12T09:38:20.890Z,master,[],[],ssh://git@ohwr.org:7999/project/fmc-dac-250m16b4cha.git,https://ohwr.org/project/fmc-dac-250m16b4cha.git,https://ohwr.org/project/fmc-dac-250m16b4cha,,0.0,,0,2024-10-02T10:26:15.238Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10721,"Tool for generating multi-purpose makefiles for FPGA projects.

Main features:

  - makefile generation for:
      - fetching modules from repositories
      - simulating HDL projects
      - synthesizing HDL projects
      - synthesizing projects remotely (keeping your local resources
        free)
  - generating multi-vendor project files (no clicking in the IDE\!)
  - many other things without involving make and makefiles

Hdlmake supports **modularity**, **scalability**, **revision control
systems**. Hdlmake can be run on any Linux or Windows machine with any
HDL  
[More info at the Wiki page](https://www.ohwr.org/project/hdl-make/wiki)

",Hdlmake,Projects / Hdlmake,hdl-make,project/hdl-make,2019-02-12T09:34:46.587Z,master,[],[],ssh://git@ohwr.org:7999/project/hdl-make.git,https://ohwr.org/project/hdl-make.git,https://ohwr.org/project/hdl-make,,2.0,,10,2025-02-03T09:26:34.979Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10720,"OpenPicus is an Italian project made to fill the gap between Embedded
Low Cost and Wireless. Picus modules are based on the well known
Microchip PIC 24F 16bit processor connected to a Wireless Transceiver
(WI-FI or BLUETOOTH). The OpenPicus Framework let you develop your Apps
in easy way even without specific experience with Communication
protocols.  
The IDE is also FREE and you can create, compile and download to the
modules yoru Apps, no programming tools are needed.

",OpenPicus,Projects / OpenPicus,openpicus,project/openpicus,2019-02-12T09:34:32.168Z,master,[],[],ssh://git@ohwr.org:7999/project/openpicus.git,https://ohwr.org/project/openpicus.git,https://ohwr.org/project/openpicus,,0.0,,0,2024-10-02T10:26:19.780Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10719,"An FMC to test the correct mounting of FMC connectors on FMC carrier
boards.

",FMC Carrier tester,Projects / FMC Carrier tester,fmc-conn-tester,project/fmc-conn-tester,2019-02-12T09:33:57.819Z,master,[],[],ssh://git@ohwr.org:7999/project/fmc-conn-tester.git,https://ohwr.org/project/fmc-conn-tester.git,https://ohwr.org/project/fmc-conn-tester,,0.0,,0,2024-10-02T10:26:22.125Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10718,"An FPGA Mezzanine Card (FMC) with a Time to Digital Converter chip to
perform one-shot sub-nanosecond time interval measurements. Commercially
available.  
[More info at the Wiki page](https://www.ohwr.org/project/fmc-tdc/wiki)

",FMC TDC 1ns 5cha,Projects / FMC TDC 1ns 5cha,fmc-tdc,project/fmc-tdc,2019-02-12T09:32:21.095Z,master,[],[],ssh://git@ohwr.org:7999/project/fmc-tdc.git,https://ohwr.org/project/fmc-tdc.git,https://ohwr.org/project/fmc-tdc,https://ohwr.org/project/fmc-tdc/-/blob/master/README.rst,0.0,,1,2025-01-23T10:33:26.077Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10717,"A card used in CERN's Linac 3 for the control of the electromagnetic
field inside RF accelerating cavities.

",Low-level RF Servo control,Projects / Low-level RF Servo control,lrfsc,project/lrfsc,2019-02-12T09:32:11.066Z,master,[],[],ssh://git@ohwr.org:7999/project/lrfsc.git,https://ohwr.org/project/lrfsc.git,https://ohwr.org/project/lrfsc,,0.0,,0,2024-10-02T10:26:26.807Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10716,"A transparent Wishbone bridge between two FPGAs using high-speed serial
links.  
*This project is on hold.**  
[More info at the Wiki
page](https://www.ohwr.org/project/wb-serializer-core/wiki)

",Wishbone Serializer Core,Projects / Wishbone Serializer Core,wb-serializer-core,project/wb-serializer-core,2019-02-12T09:31:52.831Z,master,[],[],ssh://git@ohwr.org:7999/project/wb-serializer-core.git,https://ohwr.org/project/wb-serializer-core.git,https://ohwr.org/project/wb-serializer-core,,0.0,,0,2024-10-02T10:26:28.479Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10715,"A Virtex6-based optical link interface AMC equipped with SFP+ and FMC
sockets

",Optical link interface AMC,Projects / Optical link interface AMC,glib,project/glib,2019-02-12T09:31:37.767Z,master,[],[],ssh://git@ohwr.org:7999/project/glib.git,https://ohwr.org/project/glib.git,https://ohwr.org/project/glib,,0.0,,0,2024-10-02T10:26:29.931Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10714,"Linux device driver and associated utilities for PCIe FMC carriers.  
Aka GnuRabbit.

",FMC PCIe Carrier PFC - Software,Projects / FMC PCIe Carrier PFC - Software,pfc-sw,project/pfc-sw,2019-02-12T09:31:28.682Z,master,[],[],ssh://git@ohwr.org:7999/project/pfc-sw.git,https://ohwr.org/project/pfc-sw.git,https://ohwr.org/project/pfc-sw,https://ohwr.org/project/pfc-sw/-/blob/master/README.md,0.0,,0,2024-10-02T10:26:31.437Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10713,"Development of software for the White Rabbit switch, and in particular
the embedded Linux system running in the ARM9 processor.  
[More info at the Wiki
page](https://www.ohwr.org/project/wr-switch-sw/wiki)

",White Rabbit Switch - Software,Projects / White Rabbit Switch - Software,wr-switch-sw,project/wr-switch-sw,2019-02-12T09:25:36.302Z,master,[],[],ssh://git@ohwr.org:7999/project/wr-switch-sw.git,https://ohwr.org/project/wr-switch-sw.git,https://ohwr.org/project/wr-switch-sw,https://ohwr.org/project/wr-switch-sw/-/blob/master/README,0.0,,1,2025-02-04T16:52:31.022Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10712,"RHINO (Reconfigurable Hardware Interface for computiNg and radiO) is a
compute platform consisting of a FPGA element with dedicated memory,
high speed communication, and FMC-LPC (Vita 57.1) IO expansion slots,
all controlled via an ARM Cortex A8 processor running the
[BORPH](http://www.eee.hku.hk/~hso/borph.html) operating system.

<table>
<tbody>
<tr class=""odd"">
<td><img src=""https://www.ohwr.org/attachments/download/2522/Rhino_lowres.jpg"" alt="""" /></td>
<td><img src=""https://www.ohwr.org/attachments/download/2521/Rhino-logo-sm.jpg"" alt="""" /></td>
</tr>
</tbody>
</table>

For progress updates, follow us on twitter
[@rhinoplatform](https://twitter.com/rhinoplatform)
![](http://www.sdrg.ee.uct.ac.za/logo/twitter-sm.png)

",RHINO,Projects / RHINO,rhino-hardware-01,project/rhino-hardware-01,2019-02-12T09:25:04.451Z,master,[],[],ssh://git@ohwr.org:7999/project/rhino-hardware-01.git,https://ohwr.org/project/rhino-hardware-01.git,https://ohwr.org/project/rhino-hardware-01,,0.0,,0,2024-10-02T10:26:38.889Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10711,"A High Pin Count FMC carrier in VXS format with two Virtex 5 FPGAs plus
a DSP on board.

",VXS DSP FMC carrier,Projects / VXS DSP FMC carrier,vxs-dsp-fmc-carrier,project/vxs-dsp-fmc-carrier,2019-02-12T09:24:48.110Z,master,[],[],ssh://git@ohwr.org:7999/project/vxs-dsp-fmc-carrier.git,https://ohwr.org/project/vxs-dsp-fmc-carrier.git,https://ohwr.org/project/vxs-dsp-fmc-carrier,,0.0,,0,2024-10-02T10:26:40.254Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10710,"ADC testing procedures and software.  
[More info at the Wiki
page](https://www.ohwr.org/project/adc-testing/wiki)

",ADC  Testing,Projects / ADC  Testing,adc-testing,project/adc-testing,2019-02-12T09:24:22.727Z,master,[],[],ssh://git@ohwr.org:7999/project/adc-testing.git,https://ohwr.org/project/adc-testing.git,https://ohwr.org/project/adc-testing,,0.0,,0,2024-05-27T14:43:16.004Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10709,"Projects not directly identifiable with PCB or HDL core developments.

",Miscellaneous Projects - non-HW,Projects / Miscellaneous Projects - non-HW,misc,project/misc,2019-02-12T09:24:20.835Z,main,[],[],ssh://git@ohwr.org:7999/project/misc.git,https://ohwr.org/project/misc.git,https://ohwr.org/project/misc,,0.0,,0,2019-02-12T09:24:20.835Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10708,"DDR3 controller with two pipelined Wishbone slave ports. It is based on
the Spartan6 hardware core and a management core generated by Xilinx
CoreGen.

",DDR3 controller for Spartan6,Projects / DDR3 controller for Spartan6,ddr3-sp6-core,project/ddr3-sp6-core,2019-02-12T09:23:43.223Z,master,[],[],ssh://git@ohwr.org:7999/project/ddr3-sp6-core.git,https://ohwr.org/project/ddr3-sp6-core.git,https://ohwr.org/project/ddr3-sp6-core,,0.0,,0,2024-10-02T10:26:45.227Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10707,"Etherbone is an FPGA-core that connects Ethernet to internal on-chip
wishbone buses permitting any core to talk to any other across Ethernet.

",EtherBone Core,Projects / EtherBone Core,etherbone-core,project/etherbone-core,2019-02-12T09:23:12.063Z,master,[],[],ssh://git@ohwr.org:7999/project/etherbone-core.git,https://ohwr.org/project/etherbone-core.git,https://ohwr.org/project/etherbone-core,,0.0,,0,2024-10-02T10:26:45.847Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10706,"A converter between USB/Ethernet and WorldFIP, allowing the bus
arbitration and control of a WorldFIP fieldbus segment from a USB or
Ethernet-equipped computer.

",FIP Converter,Projects / FIP Converter,fip-converter,project/fip-converter,2019-02-12T09:23:00.140Z,master,[],[],ssh://git@ohwr.org:7999/project/fip-converter.git,https://ohwr.org/project/fip-converter.git,https://ohwr.org/project/fip-converter,,0.0,,0,2024-10-02T10:26:47.367Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10705,"A three-channel TTL to NIM (Nuclear Instrumentation Module) level
conversion board in VME form factor.  
[More info at the Wiki
page](https://www.ohwr.org/project/conv-ttl-nim-3i-30o/wiki)

",Conv TTL NIM 3in 30out,Projects / Conv TTL NIM 3in 30out,conv-ttl-nim-3i-30o,project/conv-ttl-nim-3i-30o,2019-02-12T09:22:20.044Z,master,[],[],ssh://git@ohwr.org:7999/project/conv-ttl-nim-3i-30o.git,https://ohwr.org/project/conv-ttl-nim-3i-30o.git,https://ohwr.org/project/conv-ttl-nim-3i-30o,,0.0,,0,2024-10-02T10:26:49.780Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10704,"The level conversion board project hosts a set of boards in VME form
factor, with additional remote diagnostics/monitoring via I2C.

",Level conversion circuits,Projects / Level conversion circuits,level-conversion,project/level-conversion,2019-02-12T09:22:02.716Z,master,[],[],ssh://git@ohwr.org:7999/project/level-conversion.git,https://ohwr.org/project/level-conversion.git,https://ohwr.org/project/level-conversion,,0.0,,0,2024-10-02T10:26:51.054Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10703,"A simple 4-lane PCIe carrier for a low pin count FPGA Mezzanine Card
(VITA 57). It supports the White Rabbit timing and control network.
Commercially available. Linux and Labview drivers available for some
mezzanine cards.  
[More info at the Wiki page](https://www.ohwr.org/project/spec/wiki)

",Simple PCIe FMC carrier SPEC,Projects / Simple PCIe FMC carrier SPEC,spec,project/spec,2019-02-12T09:17:36.028Z,master,[],[],ssh://git@ohwr.org:7999/project/spec.git,https://ohwr.org/project/spec.git,https://ohwr.org/project/spec,https://ohwr.org/project/spec/-/blob/master/README.rst,0.0,,2,2024-12-17T08:02:24.576Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10702,"A meta project used to discuss and present information about Open
Hardware and related subjects.  
[More info at the Wiki
page](https://www.ohwr.org/project/ohr-meta/wiki)  
[More info about the CERN Open Hardware
licence](https://www.ohwr.org/project/cernohl/wiki)  
[More info about the OHR.org site
support](https://www.ohwr.org/project/ohr-support/wiki)

",OHR Meta Project,Projects / OHR Meta Project,ohr-meta,project/ohr-meta,2019-02-12T09:12:35.920Z,master,[],[],ssh://git@ohwr.org:7999/project/ohr-meta.git,https://ohwr.org/project/ohr-meta.git,https://ohwr.org/project/ohr-meta,,0.0,,1,2024-11-12T22:21:11.928Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10701,"A multi-purpose ARM-based small piggy-back PCB with Linux support,
Ethernet, USB, sound, graphic LCD and lots of I/O pins.

",ARMadillo,Projects / ARMadillo,armadillo,project/armadillo,2019-02-12T09:12:24.521Z,master,[],[],ssh://git@ohwr.org:7999/project/armadillo.git,https://ohwr.org/project/armadillo.git,https://ohwr.org/project/armadillo,,0.0,,0,2024-10-02T10:27:07.365Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10700,"A fine delay generator in FMC format with 1 input and 4 outputs. The
resolution is 1 ns. Commercially available.  
[More info at the Wiki
page](https://www.ohwr.org/project/fmc-delay-1ns-8cha/wiki)

",FMC DEL 1ns 4cha,Projects / FMC DEL 1ns 4cha,fmc-delay-1ns-8cha,project/fmc-delay-1ns-8cha,2019-02-12T09:07:34.805Z,master,[],[],ssh://git@ohwr.org:7999/project/fmc-delay-1ns-8cha.git,https://ohwr.org/project/fmc-delay-1ns-8cha.git,https://ohwr.org/project/fmc-delay-1ns-8cha,https://ohwr.org/project/fmc-delay-1ns-8cha/-/blob/master/README.md,0.0,,2,2025-01-23T10:36:36.266Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10699,"A bridge between the local bus of the Gennum GN4124 (PCIe to local bus
bridge) and Wishbone.

",Gennum GN4124 core,Projects / Gennum GN4124 core,gn4124-core,project/gn4124-core,2019-02-12T09:06:30.438Z,master,[],[],ssh://git@ohwr.org:7999/project/gn4124-core.git,https://ohwr.org/project/gn4124-core.git,https://ohwr.org/project/gn4124-core,,0.0,,0,2024-10-02T10:27:14.455Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10698,"The nanoFIP test board is used to test the functionality of the [nanoFIP
design](https://www.ohwr.org/project/cern-fip). Apart from the nanoFIP
chip, the FielDrive and the FieldTR it houses another Actel FPGA that
can access nanoFIP in stand-alone or in memory mode. This FPGA can also
communicate through a RS232 port with a windows PC running the NFTC
software.  
The components on the board are placed in such a way that with a focused
beam, radiation tests can be performed to the nanoFIP, FielDrive and
FieldTR, leaving the rest if the components in a radiation-safe zone.  
The card has been designed by the company [HLP](http://www.hlp.fr).

![](https://www.ohwr.org/attachments/645/NFTC_v2_small.jpg)

-----

",nanoFIP Test Board,Projects / nanoFIP Test Board,nanofip-test-board,project/nanofip-test-board,2019-02-12T09:05:24.143Z,master,[],[],ssh://git@ohwr.org:7999/project/nanofip-test-board.git,https://ohwr.org/project/nanofip-test-board.git,https://ohwr.org/project/nanofip-test-board,,0.0,,0,2024-10-02T10:27:24.109Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10697,"FmcAdc200k16b11cha is an 11 channel 200kSPS 16 bit ADC card in FMC (FPGA
Mezzanine Card) standard. The input voltage range is settable to */-10V
or*/-5V. The input impedance is 1MOhm.

",FMC ADC 200k 16b 11cha,Projects / FMC ADC 200k 16b 11cha,fmc-adc-100k16b8cha,project/fmc-adc-100k16b8cha,2019-02-12T09:04:32.265Z,master,[],[],ssh://git@ohwr.org:7999/project/fmc-adc-100k16b8cha.git,https://ohwr.org/project/fmc-adc-100k16b8cha.git,https://ohwr.org/project/fmc-adc-100k16b8cha,,0.0,,0,2024-10-02T10:27:25.622Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10696,"A VHDL core for a VME64x slave. The other side behaves like a Wishbone
master.

  - [More info at the Wiki
    page](https://www.ohwr.org/project/vme64x-core/wiki)

",VME64x core,Projects / VME64x core,vme64x-core,project/vme64x-core,2019-02-12T09:03:12.982Z,master,[],[],ssh://git@ohwr.org:7999/project/vme64x-core.git,https://ohwr.org/project/vme64x-core.git,https://ohwr.org/project/vme64x-core,https://ohwr.org/project/vme64x-core/-/blob/master/README,1.0,,2,2024-10-02T10:27:29.510Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10695,"wbgen2 is a tool for generating VHDL/Verilog cores which implement
Wishbone bus slaves with certain registers, memory blocks, FIFOs and
interrupts. The input is a C-like syntax file with an abstract
description of what do we want to have in the slave. As a result, we
get:

\- Automatically allocated memory layout

\- VHDL/Verilog code for the slave module

\- C header files for driver development  
\- Nice HTML documentation

![](https://www.ohwr.org/attachments/92/overwiew.png)

Read the [wbgen2-Documentation](wbgen2-Documentation)  
Get the latest version binaries
[https://www.ohwr.org/attachments/5659/wbgen2-bin.tar.bz2](https://www.ohwr.org/project/https/wikis)

",Wishbone slave generator,Projects / Wishbone slave generator,wishbone-gen,project/wishbone-gen,2019-02-12T09:01:30.458Z,master,[],[],ssh://git@ohwr.org:7999/project/wishbone-gen.git,https://ohwr.org/project/wishbone-gen.git,https://ohwr.org/project/wishbone-gen,https://ohwr.org/project/wishbone-gen/-/blob/master/README,0.0,,0,2024-10-02T10:27:31.056Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10694,"FmcDIO16chTTLa is a 2x 8-bit port digital IO card in FMC form-factor.
Each 8-bit port can be configured individually as input or output. IOs
are TTL compatible. Additional test features can be mounted on the PCB. Project on hold.

",FMC DIO 16ch TTL a,Projects / FMC DIO 16ch TTL a,fmc-dio-16chttla,project/fmc-dio-16chttla,2019-02-12T09:01:16.688Z,master,[],[],ssh://git@ohwr.org:7999/project/fmc-dio-16chttla.git,https://ohwr.org/project/fmc-dio-16chttla.git,https://ohwr.org/project/fmc-dio-16chttla,,0.0,,0,2024-10-02T10:27:32.729Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10693,"OHR project where you can get help and guidelines about OHR. It's a
support project for questions/feedback and bugs.  
[More info at the Wiki
page](https://www.ohwr.org/project/ohr-support/wiki)

",OHR Support,Projects / OHR Support,ohr-support,project/ohr-support,2019-02-12T08:55:38.573Z,master,[],[],ssh://git@ohwr.org:7999/project/ohr-support.git,https://ohwr.org/project/ohr-support.git,https://ohwr.org/project/ohr-support,https://ohwr.org/project/ohr-support/-/blob/master/README.md,0.0,,1,2024-10-02T10:27:34.396Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10692,"Corelib - Project to share generic HDL cores.

",HDL Core Lib,Projects / HDL Core Lib,hdl-core-lib,project/hdl-core-lib,2019-02-12T08:55:14.462Z,master,[],[],ssh://git@ohwr.org:7999/project/hdl-core-lib.git,https://ohwr.org/project/hdl-core-lib.git,https://ohwr.org/project/hdl-core-lib,,0.0,,0,2024-10-02T10:27:36.063Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10691,"FMC DAC 10M 16b 4cha: 16-bit 10Ms/s DAC card in FMC form-factor. Four
channels with an output range of +/-10V. Three trigger inputs (start,
pause and stop), common to the four outputs.

Cancelled project.

",FMC DAC 10M 16b 4cha,Projects / FMC DAC 10M 16b 4cha,fmc-dac-1,project/fmc-dac-1,2019-02-12T08:54:46.103Z,master,[],[],ssh://git@ohwr.org:7999/project/fmc-dac-1.git,https://ohwr.org/project/fmc-dac-1.git,https://ohwr.org/project/fmc-dac-1,,0.0,,0,2024-10-02T10:27:37.756Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10690,"FmcAdc100M14b4cha is a 4 channel 100MSPS 14 bit ADC low pin count FPGA
Mezzanine Card (VITA 57). [More info at the Wiki page](https://www.ohwr.org/project/fmc-adc-100m14b4cha/wiki)

",FMC ADC 100M 14b 4cha,Projects / FMC ADC 100M 14b 4cha,fmc-adc-100m14b4cha,project/fmc-adc-100m14b4cha,2019-02-12T08:48:20.081Z,master,[],[],ssh://git@ohwr.org:7999/project/fmc-adc-100m14b4cha.git,https://ohwr.org/project/fmc-adc-100m14b4cha.git,https://ohwr.org/project/fmc-adc-100m14b4cha,,0.0,,2,2024-10-01T16:37:34.441Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10689,"FMCprojects shows the FMC Mezzanine and Carrier boards that are
developed in the Open Hardware Repository context. Furthermore it gives
useful data helping you to design modules complying to this VITA 57.1
standard. This actually is not a hardware project, but is there to help
you find your way in the FMC standard and shows you which FMC Mezzanines
and Carriers are being developed in the context of the Open Hardware
project.

  - [*FMC Projects* Wiki home
    page](https://www.ohwr.org/project/fmc-projects/wiki)

",FMC Projects,Projects / FMC Projects,fmc-projects,project/fmc-projects,2019-02-12T08:45:51.087Z,master,[],[],ssh://git@ohwr.org:7999/project/fmc-projects.git,https://ohwr.org/project/fmc-projects.git,https://ohwr.org/project/fmc-projects,https://ohwr.org/project/fmc-projects/-/blob/master/README,0.0,,1,2024-10-02T10:27:40.898Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10688,"The VFC is a VME carrier for two VITA 57 (FMC) mezzanines.  
For more details please refer to the [wiki pages](Description).  
Obsolete project. Replaced by
[VFC-HD](https://www.ohwr.org/project/vfc-hd/wikis/Description).

",VME FMC Carrier VFC,Projects / VME FMC Carrier VFC,fmc-vme-carrier,project/fmc-vme-carrier,2019-02-12T08:43:19.804Z,master,[],[],ssh://git@ohwr.org:7999/project/fmc-vme-carrier.git,https://ohwr.org/project/fmc-vme-carrier.git,https://ohwr.org/project/fmc-vme-carrier,,0.0,,0,2024-10-02T10:27:50.305Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10687,"The PFC is a 4-lane PCIe carrier for a single VITA 57 (FMC) mezzanine.
It has many memory and clocking resources and supports the White Rabbit
timing and control network.  
For more details please refer to the [Wiki pages](.).  
\*Warning. This project is on hold. Refer to the
[SPEC](https://www.ohwr.org/project/spec)*

",FMC PCIe Carrier PFC,Projects / FMC PCIe Carrier PFC,fmc-pci-carrier,project/fmc-pci-carrier,2019-02-12T08:40:15.942Z,master,[],[],ssh://git@ohwr.org:7999/project/fmc-pci-carrier.git,https://ohwr.org/project/fmc-pci-carrier.git,https://ohwr.org/project/fmc-pci-carrier,,0.0,,0,2024-10-02T10:27:51.975Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10686,"[WorldFIP](WorldFIP) is a deterministic rad-tol fieldbus used at CERN's
LHC for a variety of control systems.  
Cryogenics, Power Converters, Beam Instrumentation and other critical
systems are using WorldFIP  
for the exchange of data between their sensors and actuators and the
control and supervision level.  
With [Alstom](http://www.alstom.com) phasing out WorldFIP support in
2009, it was decided to
[insource](https://www.ohwr.org/project/nanofip/wikis/WorkPackages) this
technology at CERN.

",CernFIP,Projects / CernFIP,cern-fip,project/cern-fip,2019-02-12T08:37:38.043Z,master,[],[],ssh://git@ohwr.org:7999/project/cern-fip.git,https://ohwr.org/project/cern-fip.git,https://ohwr.org/project/cern-fip,,0.0,,0,2024-10-02T10:27:53.549Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10685,"White Rabbit is a fully deterministic Ethernet-based network for general
purpose data transfer and synchronization. It can synchronize over 1000
nodes with sub-ns accuracy over fiber lengths of up to 10 km.
Commercially available.  
[More info at the Wiki
page](https://www.ohwr.org/project/white-rabbit/wiki)

",White Rabbit,Projects / White Rabbit,white-rabbit,project/white-rabbit,2019-02-12T08:13:58.946Z,master,[],[],ssh://git@ohwr.org:7999/project/white-rabbit.git,https://ohwr.org/project/white-rabbit.git,https://ohwr.org/project/white-rabbit,,0.0,,2,2025-01-13T16:26:31.240Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
10261,"pcie-fmc-soc-vdas is a PCIe carrier for a high pin count FPGA Mezzanine
Card (VITA 57).  
The main component is a SOC chip used in cellular base stations that can
do advanced processing.  
[More info at the Wiki
page](https://ohwr-gitlab.cern.ch/project/pcie-fmc-soc-vdas/wiki)

",PCI FMC carrier with SOC ,Projects / PCI FMC carrier with SOC ,pcie-fmc-soc-vdas,project/pcie-fmc-soc-vdas,2019-01-20T23:00:55.147Z,master,[],[],ssh://git@ohwr.org:7999/project/pcie-fmc-soc-vdas.git,https://ohwr.org/project/pcie-fmc-soc-vdas.git,https://ohwr.org/project/pcie-fmc-soc-vdas,,0.0,,0,2024-10-02T10:28:22.442Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
9095,"White Rabbit Trigger Distribution project.  
[More info at the Wiki
page](https://ohwr.org/project/wrtd/wikis/home)

",White Rabbit Trigger Distribution,Projects / White Rabbit Trigger Distribution,wrtd,project/wrtd,2019-01-15T23:28:28.272Z,master,['White Rabbit'],['White Rabbit'],ssh://git@ohwr.org:7999/project/wrtd.git,https://ohwr.org/project/wrtd.git,https://ohwr.org/project/wrtd,https://ohwr.org/project/wrtd/-/blob/master/README.md,0.0,,2,2024-10-02T10:28:27.219Z,8136,Projects,project,group,project,,,https://ohwr.org/groups/project
