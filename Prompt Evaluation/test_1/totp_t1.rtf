{\rtf1\ansi\ansicpg1252\cocoartf2761
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 SYSTEM_PROMPT = """\
Analyze this README file and directory structure and extract structured information following rigorous classification criteria. Return your response as valid JSON following the exact schema below.\
"""\
\
USER_PROMPT_TEMPLATE = """\
\
### Operational Definitions\
\
License Information: \
\'95 Explicit: Direct statement of license (e.g., "Licensed under MIT", "GPL v3")\
\'95 Referenced: Points to license file/section (e.g., "see LICENSE file")\
\'95 Implied: Copyright notice or terms without specific license name\
\
Contributing Guidelines\
\'95 Level 3: Detailed guidelines with process, standards, code of conduct\
\'95 Level 2: Reference to external CONTRIBUTING file or section\
\'95 Level 1: Brief mention of contribution process (<50 words)\
\'95 Level 0: No contribution information\
\
Bill of Materials\
\'95 Complete: Table/list with quantities, specifications, and sourcing info\
\'95 Basic: List with quantities but minimal specifications\
\'95 Partial: Component list without quantities or incomplete\
\'95 None: No component information\
\
Assembly Instructions\
\'95 Detailed: Step-by-step numbered instructions (\uc0\u8805 5 steps) with specifics\
\'95 Basic: Simple step list (3-4 steps) or brief assembly overview\
\'95 Referenced: Points to external assembly guide/video/document\
\'95 None: No assembly information\
\
Design Files\
\'95 CAD Files: .dwg, .step, .iges, .f3d, .sldprt, .catpart\
\'95 PCB Files: .kicad, .sch, .brd, .gerber, .eagle\
\'95 3D Files: .stl, .obj, .3mf, .amf\
\'95 Other: .pdf technical drawings, .dxf, etc.\
\
Confidence Scoring (0-100)\
\'95 90-100: Explicit, unambiguous evidence with exact quotes\
\'95 70-89: Clear evidence but requires minimal interpretation\
\'95 50-69: Contextual evidence requiring moderate interpretation\
\'95 30-49: Weak signals or ambiguous references\
\'95 10-29: Speculative based on limited context\
\'95 0-9: No credible evidence\
\
### Output Requirements\
\
Directory Structure:  \
\{directory_structure\}\
\
README Content:  \
\{readme_content\}\
\
```json\
\{\{\
  "document_metadata": \{\{\
    "total_word_count": number,\
    "contains_technical_language": boolean,\
    "primary_language": "english|non_english|mixed",\
    "project_type": "hardware_only|software_only|mixed|unclear",\
    "document_structure_quality": "well_structured|basic_structure|poor_structure"\
  \}\},\
  "license_information": \{\{\
    "general_license": \{\{\
      "present": boolean,\
      "type": "explicit|referenced|implied",\
      "license_name": "string or null",\
      "evidence_full": "complete relevant text",\
      "evidence_location": "string (section/line reference)",\
      "confidence_score": number,\
      "confidence_rationale": "explicit_mention|contextual_inference|weak_signal"\
    \}\}\
  \}\},\
  "contributing_guidelines": \{\{\
    "present": boolean,\
    "level": number,\
    "location_type": "inline_detailed|inline_brief|external_reference|none",\
    "evidence_full": "complete relevant text",\
    "evidence_location": "string",\
    "confidence_score": number,\
    "confidence_rationale": "string"\
  \}\},\
  "bill_of_materials": \{\{\
    "present": boolean,\
    "completeness_level": "complete|basic|partial|none",\
    "format_type": "table|bulleted_list|numbered_list|paragraph|none",\
    "total_components": number,\
    "components": [\
      \{\{\
        "component_name": "string",\
        "quantity": "string or null",\
        "specifications": "string or null", \
        "sourcing_info": "string or null",\
        "source_line_full": "complete line/row from README"\
      \}\}\
    ],\
    "evidence_full": "complete BOM section text",\
    "evidence_location": "string",\
    "confidence_score": number,\
    "confidence_rationale": "string",\
    "multiple_boms_detected": boolean,\
    "conflicting_info": boolean\
  \}\},\
  "assembly_instructions": \{\{\
    "present": boolean,\
    "detail_level": "detailed|basic|referenced|none",\
    "instruction_format": "numbered_steps|bulleted_steps|paragraph|external_link|none",\
    "step_count": number,\
    "evidence_full": "complete assembly section text",\
    "evidence_location": "string",\
    "confidence_score": number,\
    "confidence_rationale": "string"\
  \}\},\
  "design_files": \{\{\
    "hardware_design_files": \{\{\
      "present": boolean,\
      "file_categories": ["CAD|PCB|3D|Other"],\
      "specific_formats": ["string"],\
      "file_locations": ["string"],\
      "evidence_full": "complete file reference text",\
      "evidence_location": "string",\
      "confidence_score": number,\
      "confidence_rationale": "string"\
    \}\},\
    "mechanical_design_files": \{\{\
      "present": boolean,\
      "file_categories": ["CAD|3D|Technical_drawings|Other"],\
      "specific_formats": ["string"],\
      "file_locations": ["string"], \
      "evidence_full": "complete file reference text",\
      "evidence_location": "string",\
      "confidence_score": number,\
      "confidence_rationale": "string"\
    \}\}\
  \}\},\
  "specific_licenses": \{\{\
    "hardware_license": \{\{\
      "present": boolean,\
      "license_name": "string or null",\
      "license_type": "copyleft|permissive|proprietary|unclear|null",\
      "evidence_full": "complete relevant text",\
      "evidence_location": "string",\
      "confidence_score": number,\
      "confidence_rationale": "string"\
    \}\},\
    "software_license": \{\{\
      "present": boolean,\
      "license_name": "string or null", \
      "license_type": "copyleft|permissive|proprietary|unclear|null",\
      "evidence_full": "complete relevant text",\
      "evidence_location": "string",\
      "confidence_score": number,\
      "confidence_rationale": "string"\
    \}\},\
    "documentation_license": \{\{\
      "present": boolean,\
      "license_name": "string or null",\
      "license_type": "copyleft|permissive|proprietary|unclear|null", \
      "evidence_full": "complete relevant text",\
      "evidence_location": "string",\
      "confidence_score": number,\
      "confidence_rationale": "string"\
    \}\}\
  \}\},\
  "validation_checks": \{\{\
    "readme_sections_identified": ["string"],\
    "contradictory_information_detected": boolean,\
    "incomplete_information_flagged": boolean,\
    "classification_boundary_cases": ["string"],\
    "evidence_verification_notes": "string"\
  \}\}\
\}\}\
\
### Examples\
\
**Example 1: Comprehensive Hardware Project**\
\
**Readme Content:**\
```markdown\
# Arduino Weather Station v2.1\
\
## License\
Software: MIT License (see LICENSE-SOFTWARE.txt)  \
Hardware: CERN-OHL-W v2 (see LICENSE-HARDWARE.txt)  \
Documentation: CC BY-SA 4.0\
\
## Bill of Materials\
| Component       | Qty | Part Number       | Supplier    | Notes            |\
|-----------------|-----|-------------------|-------------|------------------|\
| Arduino Uno R3  | 1   | A000066           | Arduino.cc  | Main controller  |\
| DHT22 Sensor    | 1   | AM2302            | Adafruit    | Temp/humidity    |\
| 0.96" OLED      | 1   | SSD1306           | Various     | I2C display      |\
| 10k\uc0\u937  Resistors  | 2   | CFR-25JB-52-10K   | Yageo       | Pull-up resistors|\
\
## Assembly Instructions\
1. Solder headers to Arduino Uno if not pre-installed  \
2. Connect DHT22 VCC to Arduino 5V, GND to GND  \
3. Connect DHT22 data pin to Arduino digital pin 2  \
4. Connect OLED VCC to 3.3V, GND to GND  \
5. Connect OLED SDA to Arduino A4, SCL to A5  \
6. Install 10k\uc0\u937  pull-up resistors on SDA and SCL lines  \
7. Upload firmware using Arduino IDE  \
8. Test all sensor readings before final assembly  \
\
## Design Files\
- `/hardware/pcb/weather_station.kicad_pro` \'96 KiCad project file  \
- `/hardware/pcb/gerbers/` \'96 Manufacturing files  \
- `/mechanical/enclosure.step` \'96 3D printable case  \
- `/docs/schematic.pdf` \'96 Circuit diagram  \
\
## Contributing\
Please read CONTRIBUTING.md for our coding standards, pull request process, and code of conduct. All contributions must include tests and documentation updates.\
\
Expected Output:\
 \{\{\
  "document_metadata": \{\{\
    "total_word_count": 185,\
    "contains_technical_language": true,\
    "primary_language": "english",\
    "project_type": "mixed",\
    "document_structure_quality": "well_structured"\
  \}\},\
  "license_information": \{\{\
    "general_license": \{\{\
      "present": true,\
      "type": "explicit",\
      "license_name": "Multiple licenses specified",\
      "evidence_full": "Software: MIT License (see LICENSE-SOFTWARE.txt)\\nHardware: CERN-OHL-W v2 (see LICENSE-HARDWARE.txt)\\nDocumentation: CC BY-SA 4.0",\
      "evidence_location": "License section",\
      "confidence_score": 95,\
      "confidence_rationale": "explicit_mention"\
    \}\}\
  \}\},\
  "contributing_guidelines": \{\{\
    "present": true,\
    "level": 2,\
    "location_type": "external_reference",\
    "evidence_full": "Please read CONTRIBUTING.md for our coding standards, pull request process, and code of conduct. All contributions must include tests and documentation updates.",\
    "evidence_location": "Contributing section",\
    "confidence_score": 90,\
    "confidence_rationale": "explicit_mention"\
  \}\},\
  "bill_of_materials": \{\{\
    "present": true,\
    "completeness_level": "complete",\
    "format_type": "table",\
    "total_components": 4,\
    "components": [\
      \{\{\
        "component_name": "Arduino Uno R3",\
        "quantity": "1",\
        "specifications": "A000066",\
        "sourcing_info": "Arduino.cc",\
        "source_line_full": "| Arduino Uno R3 | 1 | A000066 | Arduino.cc | Main controller |"\
      \}\},\
      \{\{\
        "component_name": "DHT22 Sensor",\
        "quantity": "1",\
        "specifications": "AM2302",\
        "sourcing_info": "Adafruit",\
        "source_line_full": "| DHT22 Sensor | 1 | AM2302 | Adafruit | Temp/humidity |"\
      \}\},\
      \{\{\
        "component_name": "0.96\\\\\\" OLED",\
        "quantity": "1",\
        "specifications": "SSD1306",\
        "sourcing_info": "Various",\
        "source_line_full": "| 0.96\\\\\\" OLED | 1 | SSD1306 | Various | I2C display |"\
      \}\},\
      \{\{\
        "component_name": "10k\uc0\u937  Resistors",\
        "quantity": "2",\
        "specifications": "CFR-25JB-52-10K",\
        "sourcing_info": "Yageo",\
        "source_line_full": "| 10k\uc0\u937  Resistors | 2 | CFR-25JB-52-10K | Yageo | Pull-up resistors |"\
      \}\}\
    ],\
    "evidence_full": "## Bill of Materials\\\\n| Component | Qty | Part Number | Supplier | Notes |\\\\n|-----------|-----|-------------|----------|--------|\\\\n| Arduino Uno R3 | 1 | A000066 | Arduino.cc | Main controller |\\\\n| DHT22 Sensor | 1 | AM2302 | Adafruit | Temp/humidity |\\\\n| 0.96\\\\\\" OLED | 1 | SSD1306 | Various | I2C display |\\\\n| 10k\uc0\u937  Resistors | 2 | CFR-25JB-52-10K | Yageo | Pull-up resistors |",\
    "evidence_location": "Bill of Materials section",\
    "confidence_score": 95,\
    "confidence_rationale": "explicit_mention",\
    "multiple_boms_detected": false,\
    "conflicting_info": false\
  \}\},\
  ...\
\}\}\
\
Directory Structure:  \
\{directory_structure\}\
\
README Content:  \
\{readme_content\}\
\
\
"""\
\
directory_structure = """\
.github/\
  workflows/\
    build.yml\
hardware/\
  kicad/\
    cpu.kicad_sch\
    lcd.kicad_sch\
    lpc1756_totp.kicad_pcb\
    lpc1756_totp.kicad_prl\
    lpc1756_totp.kicad_pro\
    lpc1756_totp.kicad_sch\
    power.kicad_sch\
    usb.kicad_sch\
ui/\
  calibration.hpp\
  config.hpp\
  menu.hpp\
  mouse.hpp\
  numeric_popup.hpp\
  popup.hpp\
  screen_id.hpp\
  screen.hpp\
  settings.hpp\
  splash.hpp\
  time.hpp\
  timezone.hpp\
  totp.hpp\
.gitignore\
button.cpp\
button.hpp\
CMakeLists.txt\
linkerscript.ld\
main.cpp\
math.hpp\
readme.md\
storage.hpp\
version.hpp\
\
\
"""\
\
readme_content = """\
## Hardware TOTP token\
Open source hardware TOTP token. Currently targets the LPC1756, LPC1758 and LPC1759 (with a small change it should also run on the LPC1754). \
\
### Features\
* keys never leave the token after setup\
* support for 6 and 8 digit tokens\
* enter button types 6/8 digit token using HID keyboard (any device that supports HID keyboards should work)\
* supports up to 32 profiles\
* rechargable RTC battery\
* USB mode to add/delete profiles using a CSV file (supports base32, hex and hex string)\
* support to change the RTC calibration values in the settings\
* support for setting the time + timezone (currently only GMT)\
* 60 seconds screen timeout\
* support for different intervals (supports 1 - 180 seconds)\
\
### Images\
Images can be found in the project logs at [hackaday](https://hackaday.io/project/194867-hardware-2fa-totp-authenticator)\
\
### TODO\
* encrypt profiles\
* add support for more than 32 profiles (needs a rework if more profiles are required. The profiles are copied to ram and there is not enough for more at the moment. If we leave them in flash we can store a lot more)\
* rework the calibration and time settings screens\
\
### Compiling\
TOTP uses [klib](https://github.com/itzandroidtab/klib). This repo can be cloned in the klib project folder. See [build.yml](./.github/workflows/build.yml) for more info on compiling this project.\
\
### Extra\
Is intended to be used with [USB dfu bootloader](https://github.com/itzandroidtab/dfu_bootloader). To build without bootloader support remove the `+ 8k` and `- 8k` from line 20 in the `linkerscript.ld` of this project.\
\
The LPC1756 does not have enough ram to hold a full framebuffer (240 * 135 * 2 = 64'800 bytes). To work around this issue, we use 2 smaller framebuffers we alternate between. While one framebuffer is being transferred to the screen using DMA we fill the other.\
\
To make it easier (for me) the whole screen is written to this smaller framebuffer. The pixels that do not fit the framebuffer are thrown away. This does waste CPU cycles but is not limiting the framerate. Filling a full frame with pixels takes around 6 milliseconds. Writing a full frame of framebuffers to the display takes around 11 milliseconds. This limits the maximum framerate to \uc0\u8776  85FPS. To get a consistant frame rate there is a limit of 60FPS.\
\
The main screen takes the longest to draw. This is caused by the amount of pixels of the circle it needs to draw. The circle is generated on compile time to work around that the LPC175x family does not have a FPU. These generated pixels use 8640 bytes of flash.\
"""\
\
final_prompt = USER_PROMPT_TEMPLATE.format(\
    directory_structure=directory_structure.strip(),\
    readme_content=readme_content.strip()\
)\
\
response = client.chat.completions.create(\
     model="gpt-4o",\
     messages=[\
         \{"role": "system", "content": SYSTEM_PROMPT.strip()\},\
         \{"role": "user", "content": final_prompt.strip()\}\
     ],\
     temperature=0\
 )\
 \
result = response.choices[0].message.content\
print(result)\
}